{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"A_",
				"A_ScriptDir"
			],
			[
				"men",
				"Menu"
			],
			[
				"if",
				"If"
			],
			[
				"note",
				"notepath"
			],
			[
				"menu",
				"Menu"
			],
			[
				"key",
				"KeyWait"
			],
			[
				"keyw",
				"KeyWait"
			],
			[
				"a_",
				"A_Index"
			],
			[
				"Loop",
				"Loop parse"
			],
			[
				"msgb",
				"MsgBox"
			],
			[
				"go",
				"Gosub"
			],
			[
				"sys",
				"SysGet"
			],
			[
				"a_loo",
				"A_LoopFileName"
			],
			[
				"no",
				"NoTrayIcon"
			],
			[
				"work",
				"SetWorkingDir"
			],
			[
				"DE",
				"Destroy"
			],
			[
				"msg",
				"MsgBox"
			],
			[
				"got",
				"Goto"
			],
			[
				"file",
				"FileAppend"
			],
			[
				"close",
				"Close()"
			],
			[
				"gui",
				"Gui"
			],
			[
				"Guic",
				"GuiEscape"
			],
			[
				"guio",
				"GuiClose"
			],
			[
				"hide",
				"HideGUI"
			],
			[
				"ahk_",
				"ahk_exe"
			],
			[
				"setw",
				"SetWorkingDir"
			],
			[
				"a_this",
				"A_ThisFunc"
			],
			[
				"c",
				"CustomMenuFiles"
			],
			[
				"winwai",
				"WinWaitActive"
			],
			[
				"Input",
				"InputBox"
			],
			[
				"input",
				"InputBox"
			],
			[
				"stringre",
				"StringReplace"
			],
			[
				"a_pro",
				"A_ProgramFiles"
			],
			[
				"a_script",
				"A_ScriptFullPath"
			],
			[
				"regexr",
				"RegExReplace()"
			],
			[
				"FileCreate",
				"FileCreateDir"
			],
			[
				"exist",
				"FileExist()"
			],
			[
				"timesin",
				"A_TimeSincePriorHotkey"
			],
			[
				"a_p",
				"A_TimeSincePriorHotkey"
			],
			[
				"a_ho",
				"A_PriorHotkey"
			],
			[
				"fileappen",
				"FileAppend"
			],
			[
				"a_screen",
				"A_ScreenHeight"
			],
			[
				"a_scr",
				"A_ScreenWidth"
			],
			[
				"winget",
				"WinGetTitle"
			],
			[
				"Winget",
				"WinGetTitle"
			],
			[
				"setk",
				"SetKeyDelay"
			],
			[
				"a_pr",
				"A_PriorHotkey"
			],
			[
				"too",
				"ToolTip"
			],
			[
				"string",
				"StringReplace"
			],
			[
				"strre",
				"StrReplace()"
			],
			[
				"repl",
				"StrReplace()"
			],
			[
				"win",
				"WinActivate"
			],
			[
				"change",
				"changeFirstName"
			],
			[
				"rnd",
				"Round()"
			],
			[
				"str",
				"StrSplit()"
			],
			[
				"getke",
				"GetKeyState()"
			],
			[
				"br",
				"Break"
			],
			[
				"ifwi",
				"IfWinActive"
			],
			[
				"winwait",
				"WinWaitActive"
			],
			[
				"caps",
				"CapsLock"
			],
			[
				"Sendi",
				"SendInput"
			],
			[
				"sen",
				"SendMessage"
			],
			[
				"retur",
				"ReturnValue"
			],
			[
				"sendmod",
				"SendMode"
			],
			[
				"contro",
				"ControlList"
			],
			[
				"inire",
				"IniRead"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/GlobalCoder.ahk",
			"settings":
			{
				"buffer_size": 160681,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					35,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAB5IAAAAAAAAH0gAAAAAAAAAAAAAH0gAAAAAAAAgSAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHkgAAAAAAAAeSAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "gcom"
					},
					"BAAAACBIAAAAAAAAIUgAAAAAAAAAAAAAIUgAAAAAAAAiSAAAAAAAAAAAAAAiSAAAAAAAACNIAAAAAAAAAAAAACNIAAAAAAAAJEgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIEgAAAAAAAAgSAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					4,
					"left_delete",
					null,
					"BAAAACNIAAAAAAAAI0gAAAAAAAABAAAAbSJIAAAAAAAAIkgAAAAAAAABAAAAbyFIAAAAAAAAIUgAAAAAAAABAAAAYyBIAAAAAAAAIEgAAAAAAAABAAAAZw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJEgAAAAAAAAkSAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"paste_and_indent",
					null,
					"AQAAACBIAAAAAAAA9UgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIEgAAAAAAAAgSAAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKZIAAAAAAAAp0gAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApkgAAAAAAACmSAAAAAAAAP///////+9/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKhIAAAAAAAAqUgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqEgAAAAAAACoSAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANNKAAAAAAAA1EoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA00oAAAAAAADTSgAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"left_delete",
					null,
					"AQAAANRKAAAAAAAA1EoAAAAAAAABAAAAJw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1UoAAAAAAADVSgAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHEiAAAAAAAAciIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcSIAAAAAAABxIgAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"paste_and_indent",
					null,
					"AQAAAHIiAAAAAAAAACcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAciIAAAAAAAByIgAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"BAAAAAEnAAAAAAAAAicAAAAAAAAAAAAAAicAAAAAAAAFJwAAAAAAAAAAAAABJwAAAAAAAAEnAAAAAAAAAQAAAHgBJwAAAAAAAAMnAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAScAAAAAAAABJwAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAMnAAAAAAAABCcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAycAAAAAAAADJwAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"paste_and_indent",
					null,
					"AQAAAAQnAAAAAAAASDQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABCcAAAAAAAAEJwAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEg0AAAAAAAASTQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASDQAAAAAAABINAAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					2,
					"left_delete",
					null,
					"AgAAAL0tAAAAAAAAvS0AAAAAAAABAAAAL7wtAAAAAAAAvC0AAAAAAAABAAAAKg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvi0AAAAAAAC+LQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAALwtAAAAAAAAvS0AAAAAAAAAAAAAvS0AAAAAAAC+LQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvC0AAAAAAAC8LQAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					2,
					"left_delete",
					null,
					"AgAAAL0tAAAAAAAAvS0AAAAAAAABAAAAKrwtAAAAAAAAvC0AAAAAAAABAAAALw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvi0AAAAAAAC+LQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAAnAAAAAAAAAScAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAACcAAAAAAAAAJwAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAAAnAAAAAAAAAycAAAAAAAAAAAAAciIAAAAAAAB0IgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAciIAAAAAAAAAJwAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"left_delete",
					null,
					"AQAAAAcnAAAAAAAABycAAAAAAABGDQAALyoKfkN0cmw6OiAgICAgO2dlc3R1cmUgaG90a2V5LCBpIGltYWdpbmUgbW9zdCB3b3VsZCB1c2UgYSBtb3VzZWtleSBmb3IgZ2VzdHVyZXMsY3RybCBpcyBzaW1wbHkgYW4gZXhhbXBsZSBzdWl0YWJsZSBmb3IgdGVzdGluZyBhcyBpJ3ZlIGdvdCByYWRpYWwgbWVudSBydW5uaW5nLi4uCiAgICBHZXRNb3VzZUdlc3R1cmUoVHJ1ZSkKICAgIFdoaWxlIEdldEtleVN0YXRlKExUcmltKEFfVGhpc0hvdGtleSwifiIpKXsKICAgICAgICBUb29sVGlwICUgTUcgOj0gR2V0TW91c2VHZXN0dXJlKCkKICAgICAgICBTbGVlcCAxNTAKICAgIH0KICAgIDtsZWZ0IDw9IDIwJSBvZiBzY3JlZW4gd2lkdGgsIHJpZ2h0ID49IDgwJSBvZiBzY3JlZW4gd2lkdGgsIHRvcCA8PSAyMCUgb2Ygc2NyZWVuIGhlaWdodCwgYm90dG9tID49IDgwJSBvZiBzY3JlZW4gaGVpZ2h0CiAgICBNUSA6PSBTdWJTdHIoTW91c2VRdWFkcmFudCgyMCw4MCwyMCw4MCksMSwxKSAgICA7dGFrZSBvbmx5IHRoZSBmaXJzdCBsZXR0ZXIgb2YgdGhlIHF1YWRyYW50LGZvciBzaW1wbGlmaWVkIGZ1bmN0aW9uIG5hbWVzLi4uCiAgICBJc0Z1bmMoTUcgIl8iIE1RKSA/ICVNRyVfJU1RJSgpIDogKElzRnVuYyhNRykgPyAlTUclKCkgOiAiIikgICAgO2V4YW1wbGUgYWxsb3dzIGNyZWF0aW9uIG9mIGdlc3R1cmVzIGJ5IGRlZmluaW5nIGZ1bmN0aW9ucyB0aGF0IGNvbXByaXNlIFUsRCxSLEwgYXMgZnVuY3Rpb24gbmFtZSx3aXRoIG5vIHVwcGVyIGxpbWl0IG9uIHRoZSBleHRlbnQgb2YgdGhlIGdlc3R1cmUsaS5lIFVEVURVRFVETCBmb3IgZXguCiAgICBUb29sVGlwCiAgICBHZXRNb3VzZUdlc3R1cmUoVHJ1ZSkKUmV0dXJuCgoKVURMKCl7CiAgICBNc2dCb3ggJSAiRnVuY3Rpb24gUnVuLGlmIG5vIGZ1bmN0aW9uIHdhcyBkZWZpbmVkIGZvciBzcGVjaWZpYyBxdWFkcmFudC4gT3IgUXVhZHJhbnQgSGFzIE5vIEFzc2lnbmVkIEZ1bmN0aW9uLmBuYG4gQ3VycmVudFF1YWRyYW50OmBuYHQiIE1vdXNlUXVhZHJhbnQoMjAsODAsMjAsODApCn0KClVETF9UKCl7ICAgIDtmdW5jdGlvbiBkZWZpbmVkIGdlc3R1cmUgZXhhbXBsZSBmb3IgZXhhbXBsZSBiZWxvdwogICAgTXNnQm94IEdlc3R1cmUgT24gVG9wCn0KClVETF9MKCl7ICAgIDtmdW5jdGlvbiBkZWZpbmVkIGdlc3R1cmUgZXhhbXBsZSBmb3IgZXhhbXBsZSBiZWxvdwogICAgTXNnQm94IEdlc3R1cmUgVG8gVGhlIExFRlQKfQoKVURMX1IoKXsgICAgO2Z1bmN0aW9uIGRlZmluZWQgZ2VzdHVyZSBleGFtcGxlIGZvciBleGFtcGxlIGJlbG93CiAgICBNc2dCb3ggR2VzdHVyZSBUbyBUaGUgUmlnaHQKfQoKCjtyZXR1cm5zIGlmIHNjcmVlbiBpcyBvbiB0b3AsYm90dG9tLGNlbnRlcixsZWZ0LHJpZ2h0IGFyZWEgb2Ygc2NyZWVuIGdpdmVuIHRoZSBkZWZpbmVkIHNjb3BlIGluIHBlcmNlbnQgb2YgZWFjaCBhcmVhLi4uc2VlIGV4YW1wbGUuCi8qCiAgICAgICAgICAgICAgICAgICAgVG9wCiAgICBfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwogICAgTCAgIHwgICAgICAgICAgICAgICAgICAgICAgIHwgICBSCiAgICBFICAgfCAgICAgICAgICAgICAgICAgICAgICAgfCAgIHkKICAgIEYgICB8ICAgICAgIEMgRSBOIFQgRSBSICAgICB8ICAgVAogICAgVCAgIHwgICAgICAgICAgICAgICAgICAgICAgIHwKICAgIF9fX198X19fX19fX19fX19fX19fX19fX19fX198X19fX19fCiAgICAgICAgICAgICAgICAgICAgQm90dG9tCgo7ZGVmaW5lZCBzY29wZXMgYXJlIGluICdwZXJjZW50JyxpLmUgbGVmdCBzY29wZSBtZWFucyBhbnl0aGluZyBiZWxvdyBkZWZpbmVkICUgaXMgZGVzaWduYXRlZCBsZWZ0LHJpZ2h0IHNjb3BlIGlzIGFueXRoaW5nIGFib3ZlIGRlZmluZWQgJS4uLgpNb3VzZVF1YWRyYW50KGxlZnRTY29wZSxyaWdodFNjb3BlLHRvcFNjb3BlLGJvdHRvbVNjb3BlLGNvb3JkTW9kZTo9InNjcmVlbiIpeyAgIDtjb29yZE1vZGUgc2hvdWxkIGVpdGhlciBiZSAnd2luZG93JyBvciAnc2NyZWVuJwogICAgQ29vcmRNb2RlLCBNb3VzZSwgJSBjb29yZE1vZGUKICAgIE1vdXNlR2V0UG9zLCBtWCwgbVksIG1Id25kLCBtQ3RybAogICAgV2luR2V0UG9zLCB3WCwgd1ksIHdXLCBoSCwgQQogICAgCiAgICBJZiAobVggPD0gbGVmdFNjb3BlLzEwMCooY29vcmRNb2RlID0gInNjcmVlbiIgPyBBX1NjcmVlbldpZHRoIDogd1cpICYmIG1ZID49IHRvcFNjb3BlLzEwMCooY29vcmRNb2RlID0gInNjcmVlbiIgPyBBX1NjcmVlbkhlaWdodCA6IGhIKSAmJiBtWSA8PSBib3R0b21TY29wZS8xMDAqKGNvb3JkTW9kZSA9ICJzY3JlZW4iID8gQV9TY3JlZW5IZWlnaHQgOiBoSCkpCiAgICAgICAgUmV0dXJuICJMRUZUIgogICAgRWxzZSBJZiAobVggPj0gcmlnaHRTY29wZS8xMDAqKGNvb3JkTW9kZSA9ICJzY3JlZW4iID8gQV9TY3JlZW5XaWR0aCA6IHdXKSAmJiBtWSA+PSB0b3BTY29wZS8xMDAqKGNvb3JkTW9kZSA9ICJzY3JlZW4iID8gQV9TY3JlZW5IZWlnaHQgOiBoSCkgJiYgbVkgPD0gYm90dG9tU2NvcGUvMTAwKihjb29yZE1vZGUgPSAic2NyZWVuIiA/IEFfU2NyZWVuSGVpZ2h0IDogaEgpKQogICAgICAgIFJldHVybiAiUklHSFQiCiAgICBFbHNlIElmIChtWSA8PSB0b3BTY29wZS8xMDAqKGNvb3JkTW9kZSA9ICJzY3JlZW4iID8gQV9TY3JlZW5IZWlnaHQgOiBoSCkpCiAgICAgICAgUmV0dXJuICJUT1AiCiAgICBFbHNlIElmIChtWSA+PSBib3R0b21TY29wZS8xMDAqKGNvb3JkTW9kZSA9ICJzY3JlZW4iID8gQV9TY3JlZW5IZWlnaHQgOiBoSCkpCiAgICAgICAgUmV0dXJuICJCT1RUT00iCiAgICBFbHNlCiAgICAgICAgUmV0dXJuICJDRU5URVIiCiAgICAKfQoKCkdldE1vdXNlR2VzdHVyZShyZXNldCA6PSBmYWxzZSl7CiAgICBTdGF0aWMKICAgIG1vdXNlZ2V0cG9zLHhwb3MyLCB5cG9zMgogICAgZHg6PXhwb3MyLXhwb3MxLGR5Oj15cG9zMS15cG9zMgogICAgLCggYWJzKGR5KSA+PSBhYnMoZHgpID8gKGR5ID4gMCA/ICh0cmFjazo9InUiKSA6ICh0cmFjazo9ImQiKSkgOiAoZHggPiAwID8gKHRyYWNrOj0iciIpIDogKHRyYWNrOj0ibCIpKSApICAgO3RyYWNrIGlzIHVwIG9yIGRvd24sIGxlZnQgb3IgcmlnaHQKICAgICxhYnMoZHkpPDQgYW5kIGFicyhkeCk8NCA/ICh0cmFjayA6PSAiIikgOiAiIiAgIDtub3QgdHJhY2tpbmcgYXQgYWxsIGlmIG5vIHNpZ25pZmljYW50IGNoYW5nZSBpbiB4IG9yIHkKICAgICx4cG9zMTo9eHBvczIseXBvczE6PXlwb3MyCiAgICAsdHJhY2s8PlN1YlN0cihnZXN0dXJlLCAwLCAxKSA/IChnZXN0dXJlIDo9IGdlc3R1cmUgLiB0cmFjaykgOiAiIiAgIDtpZ25vcmUgdHJhY2sgaWYgbm90IGNoYW5naW5nIHNpbmNlIHByZXZpb3VzIHRyYWNrCiAgICAsZ2VzdHVyZSA6PSByZXNldCA/ICIiIDogZ2VzdHVyZQogICAgUmV0dXJuIGdlc3R1cmUKfQo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABycAAAAAAABNNAAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"left_delete",
					null,
					"AQAAAL8iAAAAAAAAvyIAAAAAAABLBAAAQ3RybDo6ICAgICA7Z2VzdHVyZSBob3RrZXksIGkgaW1hZ2luZSBtb3N0IHdvdWxkIHVzZSBhIG1vdXNla2V5IGZvciBnZXN0dXJlcyxjdHJsIGlzIHNpbXBseSBhbiBleGFtcGxlIHN1aXRhYmxlIGZvciB0ZXN0aW5nIGFzIGkndmUgZ290IHJhZGlhbCBtZW51IHJ1bm5pbmcuLi4KR2V0TW91c2VHZXN0dXJlKFRydWUpCldoaWxlIEdldEtleVN0YXRlKExUcmltKEFfVGhpc0hvdGtleSwifiIpKXsKICAgIFRvb2xUaXAgJSBNRyA6PSBHZXRNb3VzZUdlc3R1cmUoKQogICAgU2xlZXAgMTUwCn0KSXNGdW5jKE1HKSA/ICVNRyUoKSA6ICIiICAgIDtleGFtcGxlIGFsbG93cyBjcmVhdGlvbiBvZiBnZXN0dXJlcyBieSBkZWZpbmluZyBmdW5jdGlvbnMgdGhhdCBjb21wcmlzZSBVLEQsUixMIGFzIGZ1bmN0aW9uIG5hbWUsd2l0aCBubyB1cHBlciBsaW1pdCBvbiB0aGUgZXh0ZW50IG9mIHRoZSBnZXN0dXJlLGkuZSBVRFVEVURVREwgZm9yIGV4LgpUb29sVGlwCkdldE1vdXNlR2VzdHVyZShUcnVlKQpSZXR1cm4KCgpHZXRNb3VzZUdlc3R1cmUocmVzZXQgOj0gZmFsc2UpewogICAgU3RhdGljCiAgICBtb3VzZWdldHBvcyx4cG9zMiwgeXBvczIKICAgIGR4Oj14cG9zMi14cG9zMSxkeTo9eXBvczEteXBvczIKICAgICwoIGFicyhkeSkgPj0gYWJzKGR4KSA/IChkeSA+IDAgPyAodHJhY2s6PSJ1IikgOiAodHJhY2s6PSJkIikpIDogKGR4ID4gMCA/ICh0cmFjazo9InIiKSA6ICh0cmFjazo9ImwiKSkgKSAgIDt0cmFjayBpcyB1cCBvciBkb3duLCBsZWZ0IG9yIHJpZ2h0CiAgICAsYWJzKGR5KTw0IGFuZCBhYnMoZHgpPDQgPyAodHJhY2sgOj0gIiIpIDogIiIgICA7bm90IHRyYWNraW5nIGF0IGFsbCBpZiBubyBzaWduaWZpY2FudCBjaGFuZ2UgaW4geCBvciB5CiAgICAseHBvczE6PXhwb3MyLHlwb3MxOj15cG9zMgogICAgLHRyYWNrPD5TdWJTdHIoZ2VzdHVyZSwgMCwgMSkgPyAoZ2VzdHVyZSA6PSBnZXN0dXJlIC4gdHJhY2spIDogIiIgICA7aWdub3JlIHRyYWNrIGlmIG5vdCBjaGFuZ2luZyBzaW5jZSBwcmV2aW91cyB0cmFjawogICAgLGdlc3R1cmUgOj0gcmVzZXQgPyAiIiA6IGdlc3R1cmUKICAgIFJldHVybiBnZXN0dXJlCn0KKi8KCgoqLw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACicAAAAAAAC/IgAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"left_delete",
					null,
					"AQAAAHIiAAAAAAAAciIAAAAAAABNAAAALypVREwoKXsgIDtmdW5jdGlvbiBkZWZpbmVkIGdlc3R1cmUgZXhhbXBsZSBmb3IgZXhhbXBsZSBiZWxvdwogICAgTXNnQm94Cn0KCn4",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvyIAAAAAAAByIgAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"paste_and_indent",
					null,
					"AQAAAHIiAAAAAAAAti8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAciIAAAAAAAByIgAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALcvAAAAAAAAuC8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAty8AAAAAAAC3LwAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "//================"
					},
					"EgAAALgvAAAAAAAAuS8AAAAAAAAAAAAAuS8AAAAAAAC6LwAAAAAAAAAAAAC6LwAAAAAAALsvAAAAAAAAAAAAALsvAAAAAAAAvC8AAAAAAAAAAAAAvC8AAAAAAAC9LwAAAAAAAAAAAAC9LwAAAAAAAL4vAAAAAAAAAAAAAL4vAAAAAAAAvy8AAAAAAAAAAAAAvy8AAAAAAADALwAAAAAAAAAAAADALwAAAAAAAMEvAAAAAAAAAAAAAMEvAAAAAAAAwi8AAAAAAAAAAAAAwi8AAAAAAADDLwAAAAAAAAAAAADDLwAAAAAAAMQvAAAAAAAAAAAAAMQvAAAAAAAAxS8AAAAAAAAAAAAAxS8AAAAAAADGLwAAAAAAAAAAAADGLwAAAAAAAMcvAAAAAAAAAAAAAMcvAAAAAAAAyC8AAAAAAAAAAAAAyC8AAAAAAADJLwAAAAAAAAAAAADJLwAAAAAAAMovAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuC8AAAAAAAC4LwAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AgAAALgvAAAAAAAAuS8AAAAAAAAAAAAAuS8AAAAAAAC5LwAAAAAAABIAAAAvLz09PT09PT09PT09PT09PT0",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyi8AAAAAAAC4LwAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAALkvAAAAAAAAuy8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuS8AAAAAAAC5LwAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "=============================="
					},
					"HgAAALsvAAAAAAAAvC8AAAAAAAAAAAAAvC8AAAAAAAC9LwAAAAAAAAAAAAC9LwAAAAAAAL4vAAAAAAAAAAAAAL4vAAAAAAAAvy8AAAAAAAAAAAAAvy8AAAAAAADALwAAAAAAAAAAAADALwAAAAAAAMEvAAAAAAAAAAAAAMEvAAAAAAAAwi8AAAAAAAAAAAAAwi8AAAAAAADDLwAAAAAAAAAAAADDLwAAAAAAAMQvAAAAAAAAAAAAAMQvAAAAAAAAxS8AAAAAAAAAAAAAxS8AAAAAAADGLwAAAAAAAAAAAADGLwAAAAAAAMcvAAAAAAAAAAAAAMcvAAAAAAAAyC8AAAAAAAAAAAAAyC8AAAAAAADJLwAAAAAAAAAAAADJLwAAAAAAAMovAAAAAAAAAAAAAMovAAAAAAAAyy8AAAAAAAAAAAAAyy8AAAAAAADMLwAAAAAAAAAAAADMLwAAAAAAAM0vAAAAAAAAAAAAAM0vAAAAAAAAzi8AAAAAAAAAAAAAzi8AAAAAAADPLwAAAAAAAAAAAADPLwAAAAAAANAvAAAAAAAAAAAAANAvAAAAAAAA0S8AAAAAAAAAAAAA0S8AAAAAAADSLwAAAAAAAAAAAADSLwAAAAAAANMvAAAAAAAAAAAAANMvAAAAAAAA1C8AAAAAAAAAAAAA1C8AAAAAAADVLwAAAAAAAAAAAADVLwAAAAAAANYvAAAAAAAAAAAAANYvAAAAAAAA1y8AAAAAAAAAAAAA1y8AAAAAAADYLwAAAAAAAAAAAADYLwAAAAAAANkvAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuy8AAAAAAAC7LwAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAANkvAAAAAAAA2y8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2S8AAAAAAADZLwAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "================================="
					},
					"IQAAANsvAAAAAAAA3C8AAAAAAAAAAAAA3C8AAAAAAADdLwAAAAAAAAAAAADdLwAAAAAAAN4vAAAAAAAAAAAAAN4vAAAAAAAA3y8AAAAAAAAAAAAA3y8AAAAAAADgLwAAAAAAAAAAAADgLwAAAAAAAOEvAAAAAAAAAAAAAOEvAAAAAAAA4i8AAAAAAAAAAAAA4i8AAAAAAADjLwAAAAAAAAAAAADjLwAAAAAAAOQvAAAAAAAAAAAAAOQvAAAAAAAA5S8AAAAAAAAAAAAA5S8AAAAAAADmLwAAAAAAAAAAAADmLwAAAAAAAOcvAAAAAAAAAAAAAOcvAAAAAAAA6C8AAAAAAAAAAAAA6C8AAAAAAADpLwAAAAAAAAAAAADpLwAAAAAAAOovAAAAAAAAAAAAAOovAAAAAAAA6y8AAAAAAAAAAAAA6y8AAAAAAADsLwAAAAAAAAAAAADsLwAAAAAAAO0vAAAAAAAAAAAAAO0vAAAAAAAA7i8AAAAAAAAAAAAA7i8AAAAAAADvLwAAAAAAAAAAAADvLwAAAAAAAPAvAAAAAAAAAAAAAPAvAAAAAAAA8S8AAAAAAAAAAAAA8S8AAAAAAADyLwAAAAAAAAAAAADyLwAAAAAAAPMvAAAAAAAAAAAAAPMvAAAAAAAA9C8AAAAAAAAAAAAA9C8AAAAAAAD1LwAAAAAAAAAAAAD1LwAAAAAAAPYvAAAAAAAAAAAAAPYvAAAAAAAA9y8AAAAAAAAAAAAA9y8AAAAAAAD4LwAAAAAAAAAAAAD4LwAAAAAAAPkvAAAAAAAAAAAAAPkvAAAAAAAA+i8AAAAAAAAAAAAA+i8AAAAAAAD7LwAAAAAAAAAAAAD7LwAAAAAAAPwvAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA2y8AAAAAAADbLwAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAPwvAAAAAAAA/i8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/C8AAAAAAAD8LwAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAP4vAAAAAAAA/y8AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/i8AAAAAAAD+LwAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					4,
					"left_delete",
					null,
					"BAAAAHYiAAAAAAAAdiIAAAAAAAABAAAAbHUiAAAAAAAAdSIAAAAAAAABAAAAcnQiAAAAAAAAdCIAAAAAAAABAAAAdHMiAAAAAAAAcyIAAAAAAAABAAAAQw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdyIAAAAAAAB3IgAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "^!"
					},
					"AgAAAHMiAAAAAAAAdCIAAAAAAAAAAAAAdCIAAAAAAAB1IgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAcyIAAAAAAABzIgAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAALIlAAAAAAAAtSUAAAAAAAAAAAAAciIAAAAAAAB0IgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAciIAAAAAAACyJQAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "\nf24"
					},
					"BAAAAAIwAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAAEMAAAAAAAAAAAAAAEMAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAABjAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAjAAAAAAAAACMAAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": " &"
					},
					"AgAAAAYwAAAAAAAABzAAAAAAAAAAAAAABzAAAAAAAAAIMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABjAAAAAAAAAGMAAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAAgwAAAAAAAACTAAAAAAAAAAAAAACTAAAAAAAAAKMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACDAAAAAAAAAIMAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAAowAAAAAAAACzAAAAAAAAAAAAAACzAAAAAAAAAMMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACjAAAAAAAAAKMAAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": " r"
					},
					"AgAAAAwwAAAAAAAADTAAAAAAAAAAAAAADTAAAAAAAAAOMAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADDAAAAAAAAAMMAAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "un,"
					},
					"AwAAAA4wAAAAAAAADzAAAAAAAAAAAAAADzAAAAAAAAAQMAAAAAAAAAAAAAAQMAAAAAAAABEwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADjAAAAAAAAAOMAAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABEwAAAAAAAAEjAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAETAAAAAAAAARMAAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "%A_"
					},
					"AwAAABIwAAAAAAAAEzAAAAAAAAAAAAAAEzAAAAAAAAAUMAAAAAAAAAAAAAAUMAAAAAAAABUwAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEjAAAAAAAAASMAAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert_completion",
					{
						"completion": "A_ScriptDir",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "A_ScriptDir"
					},
					"AgAAABMwAAAAAAAAEzAAAAAAAAACAAAAQV8TMAAAAAAAAB4wAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFTAAAAAAAAAVMAAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "%"
					},
					"AQAAAB4wAAAAAAAAHzAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHjAAAAAAAAAeMAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/((GlobalCoder)).ah2",
			"settings":
			{
				"buffer_size": 10729,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"paste_and_indent",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAADaOAEAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOgFAAAAAAAA6QUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6AUAAAAAAADoBQAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAOkFAAAAAAAA6gUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6QUAAAAAAADpBQAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAAOkFAAAAAAAA6QUAAAAAAAABAAAAbQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6gUAAAAAAADqBQAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					2,
					"left_delete",
					null,
					"AgAAABgAAAAAAAAAGAAAAAAAAAABAAAAXhcAAAAAAAAAFwAAAAAAAAABAAAAPg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGQAAAAAAAAAZAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "<!"
					},
					"AgAAABcAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFwAAAAAAAAAXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAAC0BAAAAAAAALQEAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALgEAAAAAAAAuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAAPgAAAAAAAAA+AAAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+QAAAAAAAAD5AAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"left_delete",
					null,
					"AQAAAEYAAAAAAAAARgAAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARwAAAAAAAABHAAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAC4AAAAAAAAALwAAAAAAAAAAAAAALwAAAAAAAAAwAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAOABAAAAAAAA4QEAAAAAAAAAAAAA4QEAAAAAAADiAQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4AEAAAAAAADgAQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"paste_and_indent",
					null,
					"AQAAAC8AAAAAAAAALSQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"indent",
					null,
					"CAAAABMjAAAAAAAAFyMAAAAAAAAAAAAAJiMAAAAAAAAqIwAAAAAAAAAAAABJIwAAAAAAAE0jAAAAAAAAAAAAAJwjAAAAAAAAoCMAAAAAAAAAAAAAuSMAAAAAAAC9IwAAAAAAAAAAAADrIwAAAAAAAO8jAAAAAAAAAAAAABAkAAAAAAAAFCQAAAAAAAAAAAAAMiQAAAAAAAA2JAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEyMAAAAAAAArJAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"left_delete",
					null,
					"AQAAALMhAAAAAAAAsyEAAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtyEAAAAAAAC3IQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"left_delete",
					null,
					"AQAAALohAAAAAAAAuiEAAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAviEAAAAAAAC+IQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"left_delete",
					null,
					"AQAAAMohAAAAAAAAyiEAAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAziEAAAAAAADOIQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"left_delete",
					null,
					"AQAAAMMiAAAAAAAAwyIAAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxyIAAAAAAADHIgAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"left_delete",
					null,
					"AQAAAGEeAAAAAAAAYR4AAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZR4AAAAAAABlHgAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAAGgeAAAAAAAAaB4AAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbB4AAAAAAABsHgAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHceAAAAAAAAeB4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdx4AAAAAAAB3HgAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAHgeAAAAAAAAeh4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeB4AAAAAAAB4HgAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"right_delete",
					null,
					"AQAAAHkeAAAAAAAAeR4AAAAAAAABAAAAfQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeR4AAAAAAAB5HgAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": "\n}"
					},
					"AwAAAKkhAAAAAAAAqiEAAAAAAAAAAAAAqiEAAAAAAACuIQAAAAAAAAAAAACuIQAAAAAAAK8hAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqSEAAAAAAACpIQAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"left_delete",
					null,
					"AQAAAKohAAAAAAAAqiEAAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAriEAAAAAAACuIQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					2,
					"left_delete",
					null,
					"AgAAAK0hAAAAAAAArSEAAAAAAAABAAAACqwhAAAAAAAArCEAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAriEAAAAAAACuIQAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "cc"
					},
					"AgAAAKwhAAAAAAAArSEAAAAAAAAAAAAArSEAAAAAAACuIQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArCEAAAAAAACsIQAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					2,
					"left_delete",
					null,
					"AgAAAK0hAAAAAAAArSEAAAAAAAABAAAAY6whAAAAAAAArCEAAAAAAAABAAAAYw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAriEAAAAAAACuIQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "c"
					},
					"AQAAAEwYAAAAAAAATRgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATBgAAAAAAABMGAAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"left_delete",
					null,
					"AQAAAEwYAAAAAAAATBgAAAAAAAABAAAAYw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAATRgAAAAAAABNGAAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"left_delete",
					null,
					"AQAAAOcBAAAAAAAA5wEAAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6wEAAAAAAADrAQAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"left_delete",
					null,
					"AQAAAFIDAAAAAAAAUgMAAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVgMAAAAAAABWAwAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					2,
					"left_delete",
					null,
					"AgAAAIADAAAAAAAAgAMAAAAAAAAEAAAAICAgIH8DAAAAAAAAfwMAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhAMAAAAAAACEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAH8DAAAAAAAAgAMAAAAAAAAAAAAAgAMAAAAAAACEAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfwMAAAAAAAB/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"left_delete",
					null,
					"AQAAAIADAAAAAAAAgAMAAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhAMAAAAAAACEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"left_delete",
					null,
					"AQAAAOEDAAAAAAAA4QMAAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5QMAAAAAAADlAwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"left_delete",
					null,
					"AQAAAFUDAAAAAAAAVQMAAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWQMAAAAAAABZAwAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"left_delete",
					null,
					"AQAAAOwDAAAAAAAA7AMAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7QMAAAAAAADtAwAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"left_delete",
					null,
					"AQAAAAQFAAAAAAAABAUAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQUAAAAAAAAFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					3,
					"left_delete",
					null,
					"AwAAAOADAAAAAAAA4AMAAAAAAAABAAAACt8DAAAAAAAA3wMAAAAAAAABAAAACt4DAAAAAAAA3gMAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4QMAAAAAAADhAwAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"left_delete",
					null,
					"AQAAAFMDAAAAAAAAUwMAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVAMAAAAAAABUAwAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert_snippet",
					{
						"contents": "{${0:$SELECTION}}"
					},
					"AgAAAKcAAAAAAAAApwAAAAAAAAA/AQAACiAgICAgICAgY2FsbGluZ3dpbmRvdyA6PSBXaW5BY3RpdmUoIkEiKQogICAgICAgIENvb3JkTW9kZSgiTWVudSIsICJTY3JlZW4iKQogICAgICAgIEdldENhcmV0KFgsIFksLCBIKQogICAgICAgIAogICAgICAgIDsgQ3JlYXRlIGEgdHJhbnNwYXJlbnQgd2luZG93IHRvIHJlY2VpdmUgZm9jdXMgd2hlbiB0aGUgbWVudSBpcyBzaG93bgogICAgICAgIENyZWF0ZVRyYW5zcGFyZW50V2luZG93KFgsWSxIKQogICAgICAgIAogICAgICAgIE1lbnVTaG93KEFfU2NyaXB0RGlyICJcQ3VzdG9tTWVudUZpbGVzIiwgIngiIFggIiB5IiAoWSArIEgpKQogICAgcmV0dXJuCqcAAAAAAAAA6AEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApwAAAAAAAADmAQAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					3,
					"left_delete",
					null,
					"AwAAAN8BAAAAAAAA3wEAAAAAAAAHAAAAIHJldHVybtwBAAAAAAAA3AEAAAAAAAADAAAAICAg2wEAAAAAAADbAQAAAAAAAAEAAAAK",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5gEAAAAAAADfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"left_delete",
					null,
					"AQAAAKYAAAAAAAAApgAAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApwAAAAAAAACnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANwBAAAAAAAA3QEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3AEAAAAAAADcAQAAAAAAAAAAAAAAAPC/"
				],
				[
					132,
					1,
					"indent",
					null,
					"AgAAAHoAAAAAAAAAfgAAAAAAAAAAAAAAiAAAAAAAAACMAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAegAAAAAAAACKAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/GlobalCoder.ah2",
			"settings":
			{
				"buffer_size": 115095,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/globalcoder - Copy.ah2",
			"settings":
			{
				"buffer_size": 10850,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/((Examples)).ah2",
			"settings":
			{
				"buffer_size": 106940,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					110,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAApOAAAAAAAADE4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACk4AAAAAAAAKTgAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"insert",
					{
						"characters": "this.prop1"
					},
					"CgAAAAtOAAAAAAAADE4AAAAAAAAAAAAADE4AAAAAAAANTgAAAAAAAAAAAAANTgAAAAAAAA5OAAAAAAAAAAAAAA5OAAAAAAAAD04AAAAAAAAAAAAAD04AAAAAAAAQTgAAAAAAAAAAAAAQTgAAAAAAABFOAAAAAAAAAAAAABFOAAAAAAAAEk4AAAAAAAAAAAAAEk4AAAAAAAATTgAAAAAAAAAAAAATTgAAAAAAABROAAAAAAAAAAAAABROAAAAAAAAFU4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAC04AAAAAAAALTgAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAADlOAAAAAAAAOk4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOU4AAAAAAAA5TgAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"left_delete",
					null,
					"AQAAADlGAAAAAAAAOUYAAAAAAAABAAAAMg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOkYAAAAAAAA6RgAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADlGAAAAAAAAOkYAAAAAAAAAAAAAOkYAAAAAAAA+RgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOUYAAAAAAAA5RgAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAZCAAAAAAAAB0IAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABkIAAAAAAAAGQgAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					3,
					"left_delete",
					null,
					"AwAAAD9GAAAAAAAAP0YAAAAAAAABAAAAIDtGAAAAAAAAO0YAAAAAAAAEAAAAICAgIDpGAAAAAAAAOkYAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQEYAAAAAAABARgAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADpGAAAAAAAAO0YAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAOkYAAAAAAAA6RgAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"reindent",
					null,
					"AQAAAJZCAAAAAAAAnkIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlkIAAAAAAACWQgAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"paste_and_indent",
					null,
					"AQAAAJ5CAAAAAAAArEgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnkIAAAAAAACeQgAAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AgAAAKBIAAAAAAAAoUgAAAAAAAAAAAAAlkIAAAAAAACWQgAAAAAAAAgAAAAgICAgICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAoEgAAAAAAACgSAAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKVIAAAAAAAApkgAAAAAAAAAAAAApkgAAAAAAACuSAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApUgAAAAAAAClSAAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"paste_and_indent",
					null,
					"AQAAAK5IAAAAAAAAMqYBAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArkgAAAAAAACuSAAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"cut",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYk4AAAAAAAAypgEAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAABVbAAAAAAAAFlsAAAAAAAAAAAAAFlsAAAAAAAAXWwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFVsAAAAAAAAVWwAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"paste_and_indent",
					null,
					"AQAAABZbAAAAAAAAOJYBAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFlsAAAAAAAAWWwAAAAAAAAAAAAAAAAAA"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALdDAAAAAAAAuEMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAt0MAAAAAAAC3QwAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAApEAAAAAAAAC0QAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACkQAAAAAAAAKRAAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"cut",
					null,
					"AQAAAFVEAAAAAAAAVUQAAAAAAABbAQAAY2xhc3MgU3R1ZGVudAogICAgICAgIHsKICAgICAgICAgICAgX19uZXcoTmFtZSwgQWdlLCBHZW5kZXIsIE1ham9yKQogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICB0aGlzLk5hbWUgOj0gTmFtZQogICAgICAgICAgICAgICAgdGhpcy5BZ2UgOj0gQWdlCiAgICAgICAgICAgICAgICB0aGlzLkdlbmRlciA6PSBHZW5kZXIKICAgICAgICAgICAgICAgIHRoaXMuTWFqb3IgOj0gTWFqb3IKICAgICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgY2xhc3MgR2VuZGVyCiAgICAgICAgewogICAgICAgICAgICBzdGF0aWMgRmVtYWxlIDo9IDAKICAgICAgICAgICAgc3RhdGljIE1hbGUgOj0gMQogICAgICAgIH0",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAVUQAAAAAAACwRQAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"paste_and_indent",
					null,
					"AQAAANxNAAAAAAAAA08AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3E0AAAAAAADcTQAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"reindent",
					null,
					"AQAAAJZCAAAAAAAAnkIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlkIAAAAAAACWQgAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"paste_and_indent",
					null,
					"AQAAAJ5CAAAAAAAAhkMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnkIAAAAAAACeQgAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAIZDAAAAAAAAh0MAAAAAAAAAAAAAh0MAAAAAAACPQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhkMAAAAAAACGQwAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"insert",
					{
						"characters": "\n;1"
					},
					"BgAAAJVCAAAAAAAAlkIAAAAAAAAAAAAAlkIAAAAAAACaQgAAAAAAAAAAAACaQgAAAAAAAJ5CAAAAAAAAAAAAAJBDAAAAAAAAkEMAAAAAAAAIAAAAICAgICAgICCeQgAAAAAAAJ9CAAAAAAAAAAAAAJ9CAAAAAAAAoEIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlUIAAAAAAACVQgAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					3,
					"left_delete",
					null,
					"AwAAAAZDAAAAAAAABkMAAAAAAAAEAAAAICAgIAJDAAAAAAAAAkMAAAAAAAAEAAAAICAgIAFDAAAAAAAAAUMAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAACkMAAAAAAAAKQwAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					3,
					"left_delete",
					null,
					"AwAAACxDAAAAAAAALEMAAAAAAAAEAAAAICAgIChDAAAAAAAAKEMAAAAAAAAEAAAAICAgICdDAAAAAAAAJ0MAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMEMAAAAAAAAwQwAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFJDAAAAAAAAU0MAAAAAAAAAAAAAU0MAAAAAAABbQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUkMAAAAAAABSQwAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAAFDAAAAAAAAAkMAAAAAAAAAAAAAAkMAAAAAAAAKQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAUMAAAAAAAABQwAAAAAAAAAAAAAAAPC/"
				],
				[
					188,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADBDAAAAAAAAMUMAAAAAAAAAAAAAMUMAAAAAAAA5QwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMEMAAAAAAAAwQwAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					3,
					"left_delete",
					null,
					"AwAAAGBDAAAAAAAAYEMAAAAAAAAEAAAAICAgIFxDAAAAAAAAXEMAAAAAAAAEAAAAICAgIFtDAAAAAAAAW0MAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZEMAAAAAAABkQwAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJJDAAAAAAAAk0MAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkkMAAAAAAACSQwAAAAAAAAAAAAAAAPC/"
				],
				[
					195,
					1,
					"reindent",
					null,
					"AQAAAJNDAAAAAAAAm0MAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAk0MAAAAAAACTQwAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"insert",
					{
						"characters": ";2"
					},
					"AgAAAJtDAAAAAAAAnEMAAAAAAAAAAAAAnEMAAAAAAACdQwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAm0MAAAAAAACbQwAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAEoAAAAAAAAASwAAAAAAAAAAAAAASwAAAAAAAABMAAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASgAAAAAAAABKAAAAAAAAAAAAAAAAAPC/"
				],
				[
					204,
					1,
					"paste_and_indent",
					null,
					"AQAAAEsAAAAAAAAACgIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASwAAAAAAAABLAAAAAAAAAAAAAAAAAAAA"
				],
				[
					207,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAAKNQAAAAAAAApFAAAAAAAAAAAAAApFAAAAAAAACoUAAAAAAAAAAAAACoUAAAAAAAAKlQAAAAAAAAAAAAAKlQAAAAAAAArVAAAAAAAAAAAAAApFAAAAAAAACkUAAAAAAAAAQAAAAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAo1AAAAAAAACjUAAAAAAAAAAAAAAAAPC/"
				],
				[
					215,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAElGAAAAAAAASkYAAAAAAAAAAAAASkYAAAAAAABSRgAAAAAAAAAAAACuUAAAAAAAAK5QAAAAAAAABAAAACAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASUYAAAAAAABJRgAAAAAAAAAAAAAAAPC/"
				],
				[
					218,
					3,
					"left_delete",
					null,
					"BAAAACdGAAAAAAAAJ0YAAAAAAAAEAAAAICAgIEZGAAAAAAAARkYAAAAAAAAIAAAAICAgICAgICAjRgAAAAAAACNGAAAAAAAABAAAACAgICAiRgAAAAAAACJGAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAK0YAAAAAAAArRgAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					3,
					"left_delete",
					null,
					"AwAAAPRFAAAAAAAA9EUAAAAAAAAEAAAAICAgIPBFAAAAAAAA8EUAAAAAAAAEAAAAICAgIO9FAAAAAAAA70UAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+EUAAAAAAAD4RQAAAAAAAAAAAAAAAPC/"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMhFAAAAAAAAyUUAAAAAAAAAAAAAyUUAAAAAAADRRQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAyEUAAAAAAADIRQAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAABxFAAAAAAAAHUUAAAAAAAAAAAAAHUUAAAAAAAAlRQAAAAAAAAAAAADSRQAAAAAAANJFAAAAAAAACAAAACAgICAgICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAHEUAAAAAAAAcRQAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					3,
					"left_delete",
					null,
					"BAAAAPZEAAAAAAAA9kQAAAAAAAAEAAAAICAgIBlFAAAAAAAAGUUAAAAAAAAIAAAAICAgICAgICDyRAAAAAAAAPJEAAAAAAAABAAAACAgICDxRAAAAAAAAPFEAAAAAAAAAQAAAAo",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA+kQAAAAAAAD6RAAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					3,
					"left_delete",
					null,
					"AwAAAMdEAAAAAAAAx0QAAAAAAAAEAAAAICAgIMNEAAAAAAAAw0QAAAAAAAAEAAAAICAgIMJEAAAAAAAAwkQAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAy0QAAAAAAADLRAAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJREAAAAAAAAlUQAAAAAAAAAAAAAlUQAAAAAAACdRAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlEQAAAAAAACURAAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AgAAAGpEAAAAAAAAa0QAAAAAAAAAAAAAlkQAAAAAAACWRAAAAAAAAAgAAAAgICAgICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAakQAAAAAAABqRAAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJ5EAAAAAAAAn0QAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnkQAAAAAAACeRAAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABZFAAAAAAAAF0UAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFkUAAAAAAAAWRQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/((classes)).ah2",
			"settings":
			{
				"buffer_size": 83749,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEgDAAAAAAAASQMAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAASAMAAAAAAABIAwAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"paste_and_indent",
					null,
					"AQAAAJ8AAAAAAAAA6gIAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnwAAAAAAAACfAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"paste_and_indent",
					null,
					"AQAAAAUGAAAAAAAAUQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAAQGAAAAAAAABQYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABAYAAAAAAAAEBgAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAAQGAAAAAAAABAYAAAAAAAABAAAAbQ",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAABQYAAAAAAAAFBgAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAADEGAAAAAAAAMQYAAAAAAAABAAAAXg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMgYAAAAAAAAyBgAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "f24"
					},
					"AwAAADEGAAAAAAAAMgYAAAAAAAAAAAAAMgYAAAAAAAAzBgAAAAAAAAAAAAAzBgAAAAAAADQGAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMQYAAAAAAAAxBgAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"left_delete",
					null,
					"AQAAADQGAAAAAAAANAYAAAAAAAABAAAAKw",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANQYAAAAAAAA1BgAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " &"
					},
					"AgAAADQGAAAAAAAANQYAAAAAAAAAAAAANQYAAAAAAAA2BgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANAYAAAAAAAA0BgAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADYGAAAAAAAANwYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANgYAAAAAAAA2BgAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AgAAADEGAAAAAAAAMgYAAAAAAAAAAAAAMgYAAAAAAAAyBgAAAAAAAAYAAABmMjQgJiA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANwYAAAAAAAAxBgAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " ;"
					},
					"AgAAAEYGAAAAAAAARwYAAAAAAAAAAAAARwYAAAAAAABIBgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARgYAAAAAAABGBgAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAFMOAAAAAAAAVA4AAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUw4AAAAAAABTDgAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMz5AAAAAAAAzfkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzPkAAAAAAADM+QAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"paste_and_indent",
					null,
					"AQAAAM35AAAAAAAAIAgBAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzfkAAAAAAADN+QAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					2,
					"left_delete",
					null,
					"AgAAALsIAQAAAAAAuwgBAAAAAAABAAAAILcIAQAAAAAAtwgBAAAAAAAEAAAAICAgIA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvAgBAAAAAAC8CAEAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"left_delete",
					null,
					"AQAAAIAJAQAAAAAAgAkBAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAgQkBAAAAAACBCQEAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"left_delete",
					null,
					"AQAAACgJAQAAAAAAKAkBAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAKQkBAAAAAAApCQEAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"left_delete",
					null,
					"AQAAAKwLAQAAAAAArAsBAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArQsBAAAAAACtCwEAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"left_delete",
					null,
					"AQAAAI8OAQAAAAAAjw4BAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkA4BAAAAAACQDgEAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"left_delete",
					null,
					"AQAAAArkAAAAAAAACuQAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAC+QAAAAAAAAL5AAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					4,
					"left_delete",
					null,
					"BAAAANDhAAAAAAAA0OEAAAAAAAABAAAACs/hAAAAAAAAz+EAAAAAAAABAAAACs7hAAAAAAAAzuEAAAAAAAABAAAACs3hAAAAAAAAzeEAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA0eEAAAAAAADR4QAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"left_delete",
					null,
					"AQAAAMzhAAAAAAAAzOEAAAAAAAABAAAACg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAzeEAAAAAAADN4QAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/SQLiteDB_sample.ah2",
			"settings":
			{
				"buffer_size": 11727,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/SQLiteDBv2_sample.ah2",
			"settings":
			{
				"buffer_size": 12028,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHoEAAAAAAAAewQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAegQAAAAAAAB6BAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACwFAAAAAAAALQUAAAAAAAAAAAAALQUAAAAAAAAwBQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAALAUAAAAAAAAsBQAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEEGAAAAAAAAQgYAAAAAAAAAAAAALQUAAAAAAAAtBQAAAAAAAAMAAAAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQQYAAAAAAABBBgAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOwHAAAAAAAA7QcAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AcAAAAAAADsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAFsIAAAAAAAAXAgAAAAAAAAAAAAAXAgAAAAAAABdCAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAWwgAAAAAAABbCAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAN4LAAAAAAAA3wsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA3gsAAAAAAADeCwAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANUMAAAAAAAA1gwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA1QwAAAAAAADVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"indent",
					null,
					"BQAAAOwLAAAAAAAA7wsAAAAAAAAAAAAAEAwAAAAAAAATDAAAAAAAAAAAAABsDAAAAAAAAG8MAAAAAAAAAAAAAIAMAAAAAAAAgwwAAAAAAAAAAAAA1gwAAAAAAADZDAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7AsAAAAAAADVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"indent",
					null,
					"DwAAAOYMAAAAAAAA6QwAAAAAAAAAAAAADg0AAAAAAAARDQAAAAAAAAAAAAAmDQAAAAAAACkNAAAAAAAAAAAAAEcNAAAAAAAASg0AAAAAAAAAAAAAVw0AAAAAAABaDQAAAAAAAAAAAACjDQAAAAAAAKYNAAAAAAAAAAAAALINAAAAAAAAtQ0AAAAAAAAAAAAA3g0AAAAAAADhDQAAAAAAAAAAAADyDQAAAAAAAPUNAAAAAAAAAAAAAPcNAAAAAAAA+g0AAAAAAAAAAAAADg4AAAAAAAARDgAAAAAAAAAAAABkDgAAAAAAAGcOAAAAAAAAAAAAAIYOAAAAAAAAiQ4AAAAAAAAAAAAAlg4AAAAAAACZDgAAAAAAAAAAAADnDgAAAAAAAOoOAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5gwAAAAAAADIDgAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAACMQAAAAAAAAJBAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIxAAAAAAAAAjEAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJYQAAAAAAAAlxAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlhAAAAAAAACWEAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"indent",
					null,
					"CwAAALcRAAAAAAAAuhEAAAAAAAAAAAAA2BEAAAAAAADbEQAAAAAAAAAAAAD6EQAAAAAAAP0RAAAAAAAAAAAAAFASAAAAAAAAUxIAAAAAAAAAAAAAZRIAAAAAAABoEgAAAAAAAAAAAAB0EgAAAAAAAHcSAAAAAAAAAAAAAI8SAAAAAAAAkhIAAAAAAAAAAAAApRIAAAAAAACoEgAAAAAAAAAAAADQEgAAAAAAANMSAAAAAAAAAAAAAOUSAAAAAAAA6BIAAAAAAAAAAAAA+hIAAAAAAAD9EgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtxEAAAAAAADnEgAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"indent",
					null,
					"AwAAACQQAAAAAAAAJxAAAAAAAAAAAAAAVRAAAAAAAABYEAAAAAAAAAAAAAB8EAAAAAAAAH8QAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJBAAAAAAAACWEAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAL8RAAAAAAAAwBEAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvxEAAAAAAAC/EQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABITAAAAAAAAExMAAAAAAAAAAAAAExMAAAAAAAAWEwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEhMAAAAAAAASEwAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFAUAAAAAAAAURQAAAAAAAAAAAAAExMAAAAAAAATEwAAAAAAAAMAAAAgICA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAUBQAAAAAAABQFAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADYVAAAAAAAANxUAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAANhUAAAAAAAA2FQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAG4WAAAAAAAAbxYAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbhYAAAAAAABuFgAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOIaAAAAAAAA4xoAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4hoAAAAAAADiGgAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEQfAAAAAAAARR8AAAAAAAAAAAAAIh4AAAAAAAAjHgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAIh4AAAAAAAAiHgAAAAAAAAAAAAAAAPC/RB8AAAAAAABEHwAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABUiAAAAAAAAFiIAAAAAAAAAAAAA8SAAAAAAAADyIAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAA8SAAAAAAAADxIAAAAAAAAAAAAAAAAPC/FSIAAAAAAAAVIgAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADkmAAAAAAAAOiYAAAAAAAAAAAAAJSUAAAAAAAAmJQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAJSUAAAAAAAAlJQAAAAAAAAAAAAAAAPC/OSYAAAAAAAA5JgAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEcpAAAAAAAASCkAAAAAAAAAAAAARigAAAAAAABHKAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAARigAAAAAAABGKAAAAAAAAAAAAAAAAPC/RykAAAAAAABHKQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAP0qAAAAAAAA/ioAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA/SoAAAAAAAD9KgAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHcrAAAAAAAAeCsAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdysAAAAAAAB3KwAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAH8cAAAAAAAAgBwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAfxwAAAAAAAB/HAAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFsaAAAAAAAAXBoAAAAAAAAAAAAAXhkAAAAAAABfGQAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAXhkAAAAAAABeGQAAAAAAAAAAAAAAAPC/WxoAAAAAAABbGgAAAAAAAAAAAAAAAPC/"
				],
				[
					133,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAEEZAAAAAAAAQhkAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAQRkAAAAAAABBGQAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADIYAAAAAAAAMxgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAMhgAAAAAAAAyGAAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"indent",
					null,
					"DwAAAI0WAAAAAAAAkBYAAAAAAAAAAAAArRYAAAAAAACwFgAAAAAAAAAAAADAFgAAAAAAAMMWAAAAAAAAAAAAAOEWAAAAAAAA5BYAAAAAAAAAAAAANxcAAAAAAAA6FwAAAAAAAAAAAABMFwAAAAAAAE8XAAAAAAAAAAAAAFsXAAAAAAAAXhcAAAAAAAAAAAAAfRcAAAAAAACAFwAAAAAAAAAAAACOFwAAAAAAAJEXAAAAAAAAAAAAAKQXAAAAAAAApxcAAAAAAAAAAAAAyhcAAAAAAADNFwAAAAAAAAAAAADoFwAAAAAAAOsXAAAAAAAAAAAAABkYAAAAAAAAHBgAAAAAAAAAAAAANxgAAAAAAAA6GAAAAAAAAAAAAABLGAAAAAAAAE4YAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjRYAAAAAAAAyGAAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"indent",
					null,
					"BgAAAGwUAAAAAAAAbxQAAAAAAAAAAAAAlhQAAAAAAACZFAAAAAAAAAAAAACmFAAAAAAAAKkUAAAAAAAAAAAAAMsUAAAAAAAAzhQAAAAAAAAAAAAAIRUAAAAAAAAkFQAAAAAAAAAAAAA6FQAAAAAAAD0VAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAbBQAAAAAAAA2FQAAAAAAAAAAAAAAAPC/"
				],
				[
					150,
					1,
					"left_delete",
					null,
					"AQAAAMERAAAAAAAAwREAAAAAAAADAAAAICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxBEAAAAAAADEEQAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"left_delete",
					null,
					"AQAAACQQAAAAAAAAJBAAAAAAAAADAAAAICAg",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJxAAAAAAAAAnEAAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPUOAAAAAAAA9g4AAAAAAAAAAAAA9g4AAAAAAAD5DgAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA9Q4AAAAAAAD1DgAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"indent",
					null,
					"DQAAAKoJAAAAAAAArQkAAAAAAAAAAAAAvgkAAAAAAADBCQAAAAAAAAAAAADNCQAAAAAAANAJAAAAAAAAAAAAAOYJAAAAAAAA6QkAAAAAAAAAAAAAJgoAAAAAAAApCgAAAAAAAAAAAAA1CgAAAAAAADgKAAAAAAAAAAAAALEKAAAAAAAAtAoAAAAAAAAAAAAA6goAAAAAAADtCgAAAAAAAAAAAABmCwAAAAAAAGkLAAAAAAAAAAAAAH4LAAAAAAAAgQsAAAAAAAAAAAAAnQsAAAAAAACgCwAAAAAAAAAAAADzCwAAAAAAAPYLAAAAAAAAAAAAAAEMAAAAAAAABAwAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAqgkAAAAAAADeCwAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					1,
					"indent",
					null,
					"FgAAAJwEAAAAAAAAnwQAAAAAAAAAAAAAxgQAAAAAAADJBAAAAAAAAAAAAAD8BAAAAAAAAP8EAAAAAAAAAAAAABgFAAAAAAAAGwUAAAAAAAAAAAAAOgUAAAAAAAA9BQAAAAAAAAAAAAB0BQAAAAAAAHcFAAAAAAAAAAAAAIoFAAAAAAAAjQUAAAAAAAAAAAAAoAUAAAAAAACjBQAAAAAAAAAAAADFBQAAAAAAAMgFAAAAAAAAAAAAAOsFAAAAAAAA7gUAAAAAAAAAAAAAIwYAAAAAAAAmBgAAAAAAAAAAAABhBgAAAAAAAGQGAAAAAAAAAAAAAIcGAAAAAAAAigYAAAAAAAAAAAAApAYAAAAAAACnBgAAAAAAAAAAAADrBgAAAAAAAO4GAAAAAAAAAAAAAB8HAAAAAAAAIgcAAAAAAAAAAAAAUAcAAAAAAABTBwAAAAAAAAAAAACjBwAAAAAAAKYHAAAAAAAAAAAAAPcHAAAAAAAA+gcAAAAAAAAAAAAAJwgAAAAAAAAqCAAAAAAAAAAAAABzCAAAAAAAAHYIAAAAAAAAAAAAAI8IAAAAAAAAkggAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnAQAAAAAAABbCAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/employee-class-bingchat.ah2",
			"settings":
			{
				"buffer_size": 512,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/Example7 - OpenGoogleMaps.ah2",
			"settings":
			{
				"buffer_size": 485,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/Class_SQLiteDB.ah2",
			"settings":
			{
				"buffer_size": 55732,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gen.ah2",
			"settings":
			{
				"buffer_size": 2326,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gen.cs",
			"settings":
			{
				"buffer_size": 3097,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gen2.cs",
			"settings":
			{
				"buffer_size": 3009,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/generate.ahk",
			"settings":
			{
				"buffer_size": 3380,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gptgen2.ahk",
			"settings":
			{
				"buffer_size": 1008,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gptGenerated.ahk",
			"settings":
			{
				"buffer_size": 1042,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gpt-logger-timeline-syntax-reevaluation.ah2",
			"settings":
			{
				"buffer_size": 1116,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gpt-logger-timeline.ah2",
			"settings":
			{
				"buffer_size": 1111,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gui.ah2",
			"settings":
			{
				"buffer_size": 270,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/logfile2.txt",
			"settings":
			{
				"buffer_size": 89,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/Minerva-Handlers.ah2",
			"settings":
			{
				"buffer_size": 1822,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/guiclass.ah2",
			"settings":
			{
				"buffer_size": 5405,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/mySQL.ah2",
			"settings":
			{
				"buffer_size": 10985,
				"encoding": "Western (Windows 1252)",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/PlaceholderController copy.cs",
			"settings":
			{
				"buffer_size": 3010,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/PlaceholderController.cs",
			"settings":
			{
				"buffer_size": 3010,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/QuickLinks_gpt.ah2",
			"settings":
			{
				"buffer_size": 2757,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/read-ini.ah2",
			"settings":
			{
				"buffer_size": 1339,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/rewrite.ah2",
			"settings":
			{
				"buffer_size": 2181,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/QuickConvertorV2.ah2",
			"settings":
			{
				"buffer_size": 34322,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/rewrite2.ah2",
			"settings":
			{
				"buffer_size": 743,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/SQLite_L.ah2",
			"settings":
			{
				"buffer_size": 41111,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/sqliteex.ah2",
			"settings":
			{
				"buffer_size": 6642,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/sqliteex2.ah2",
			"settings":
			{
				"buffer_size": 3960,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/emp-bingchat.ah2",
			"settings":
			{
				"buffer_size": 9970,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/test (2).ah2",
			"settings":
			{
				"buffer_size": 438,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/test.ah2",
			"settings":
			{
				"buffer_size": 15,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/tlinelogger.ah2",
			"settings":
			{
				"buffer_size": 589,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/class TextFileProcessor.ah2",
			"settings":
			{
				"buffer_size": 4033,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/Wordlist.ah2",
			"settings":
			{
				"buffer_size": 19119,
				"encoding": "Western (Windows 1252)",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/CodeQuickTester v2.ah1",
			"settings":
			{
				"buffer_size": 85443,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/QuickLinks.ah2",
			"settings":
			{
				"buffer_size": 6060,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					13,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABkCAAAAAAAAGgIAAAAAAAAAAAAA",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGQIAAAAAAAAZAgAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/AutoHotkey2/AutoHotKey2.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					""
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Default"
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Run"
				]
			],
			[
				"Packages/AutoHotkey/AutoHotkey.sublime-build",
				"Default"
			]
		],
		[
			[
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					""
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Default"
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Run"
				],
				[
					"Packages/AutoHotkey2/Autohotkey2.sublime-build",
					""
				]
			],
			[
				"Packages/AutoHotkey/AutoHotkey.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/AutoHotkey2/AutoHotKey2.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/AutoHotkey2/AutoHotKey2.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/AutoHotkey2/Autohotkey2.sublime-build",
					""
				],
				[
					"Packages/SendCode/build_systems/IPython - Source File.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		],
		[
			[
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					""
				],
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					"Default"
				],
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
				"Default"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"fold",
				"Code Folding: Fold All"
			],
			[
				"nu",
				"Insert Nums"
			],
			[
				"term",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"run",
				"AutoHotkey v2 - runner"
			],
			[
				"termi",
				"Terminus: List Shells"
			],
			[
				"termin",
				"Terminus: List Shells"
			],
			[
				"autoho",
				"AutoHotkey - Run"
			],
			[
				"auto",
				"AutoHotkey v2 - runner"
			],
			[
				"",
				"Build With: AutoHotkey"
			],
			[
				"tern",
				"Terminus: Close All"
			],
			[
				"terminus",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"refres",
				"Preferences: LSP Settings"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"syntaxfold ke",
				"Preferences: SyntaxFold Keybindings - Default"
			],
			[
				"syntax",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"fold ",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"ke",
				"Preferences: Key Bindings"
			],
			[
				"syntaxa",
				"SyntaxFold: Fold All"
			],
			[
				"settings",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"preferences pack",
				"Preferences: SyntaxFold Keybindings - Default"
			],
			[
				"package",
				"Package Control: List Unmanaged Packages"
			],
			[
				"resouu",
				"PackageResourceViewer: Open Resource"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"history",
				"History: Revert Modification"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Preferences: SideBarTools Settings"
			],
			[
				"view",
				"View: Toggle Side Bar"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"viewer",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"white sp",
				"Trim Trailing White Space"
			],
			[
				"du",
				"File: Duplicate"
			],
			[
				"ahk",
				"AutoHotkey - Run"
			],
			[
				"dupl",
				"File: Duplicate"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"com",
				"AutoHotkey - Compile"
			],
			[
				"search",
				"File: Search Files"
			],
			[
				"find ",
				"Preferences: Search in Project Settings – Default"
			],
			[
				"conda",
				"Conda: List Packages"
			],
			[
				"high",
				"HighlightWords: Highlight Words"
			],
			[
				"highl",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"goto",
				"Goto Documentation"
			],
			[
				"rename",
				"Rename File"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 164.0,
		"history":
		[
			"sublime.log_commands(True)",
			"gh repo clone hi5/Rufaydium-Webdriver"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/RichEditBox-master/RichEditBox-master/regexTester(RE).ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/RichEditBox-master/RichEditBox-master/textCompare.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/RichEditBox-master/RichEditBox-master/print.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/GlobalCoderv2.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/RichEditBox-master/RichEditBox-master/try.ah2",
		"/C/Users/donov/OneDrive/Desktop/MSSAProjects-main/MSSAProjects-main/TextBasedGame/TextBasedGame.py",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/hotstring_hints-main/hotstring_hints-main/hotstring_hints.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/discord-v2.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/((Examples)).ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/((Notes)).ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/((Tests)).ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/((Mvc)).ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/menu.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/MGLahk140/Setup.vbs",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/(functions).ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/RichEditBox-master/RichEditBox-master/RichEdit_demo.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/RichEditBox-master/RichEditBox-master/Class_RichEdit.ahk",
		"/D/lib/V2/((classes)).ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/v2/Gui-Script-text-editor-w-menu.ah2",
		"/D/AHK-v2-script-converter-master/AHK-v2-script-converter-master/tests/Test_Folder/Window/Control/Menu_ex3_(nested).ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/!v2-Menu.ah2",
		"/D/lib/V2/((dump)).ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/lib-v2-main/lib-v2-main/Tools/CleanInputBox.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/LexikosGestures/Gestures/Gestures_Default.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/LexikosGestures/Gestures/Gestures.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/LexikosGestures/Gestures/Gestures_User.ahk",
		"/C/Users/donov/OneDrive/Desktop/Inventory-Management-System-master/Inventory-Management-System-master/IMS.DataStore.HardCoded/ProductRepository.cs",
		"/D/(github)/IMS/IMS.WebApp/IMS.CoreBusiness/Models/Extra/CarNote.cs",
		"/D/(github)/IMS/IMS.WebApp/IMS.CoreBusiness/Models/Extra/CarMaintenance.cs",
		"/D/(github)/IMS/IMS.WebApp/IMS.CoreBusiness/Models/Extra/Car.cs",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/!v2-gpt-class-ranking.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/!v2-gpt-class-mvc.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/Miverva v2 funcs.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/v2/OnMessage-Script.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/envset.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/v2/CallbackCreate-Script.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/gpt.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/scratch.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/test.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/v2/textprocessor.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/class TemplateControllerGenerator.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/class TextFileProcessor.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/QuickLinks_gpt.ah2",
		"/C/Users/donov/OneDrive/Documents/RunGroop-master/KingdomWebApp/Models/AppUser.cs",
		"/C/Users/donov/source/repos/KingdomWebAppApi/ClientApp/angular.json",
		"/C/Users/donov/source/repos/KingdomWebAppApi/ClientApp/proxy.conf.json",
		"/D/skills.txt",
		"/D/kingdomWebApp.publishsettings",
		"/G/((top))/_Dev_/BlazorWithIdentity-master/BlazorWithIdentity-master/global.json",
		"/C/Users/donov/OneDrive/Desktop/psmenu.ahk",
		"/C/Users/donov/OneDrive/Documents/realtime-charts-signalr-angular-master/realtime-charts-signalr-angular-master/RealTimeCharts.Server/RealTimeCharts.Server/Program.cs",
		"/C/Users/donov/OneDrive/Documents/realtime-charts-signalr-angular-master/realtime-charts-signalr-angular-master/RealTimeCharts.Client/angular.json",
		"/C/Users/donov/OneDrive/Desktop/.zip/realtime-charts-signalr-angular-master/realtime-charts-signalr-angular-master/RealTimeCharts.Client/angular.json",
		"/C/Users/donov/OneDrive/Desktop/Deployment-Microsoft.Web-WebAppDatabase-Portal-1148428d-9563/deployment.json",
		"/C/Users/donov/OneDrive/Documents/realtime-charts-signalr-angular-master/realtime-charts-signalr-angular-master/RealTimeCharts.Client/package.json",
		"/C/Users/donov/OneDrive/Documents/realtime-charts-signalr-angular-master/realtime-charts-signalr-angular-master/RealTimeCharts.Server/RealTimeCharts.Server/appsettings.json",
		"/C/Users/donov/OneDrive/Documents/realtime-charts-signalr-angular-master/realtime-charts-signalr-angular-master/RealTimeCharts.Server/RealTimeCharts.Server/appsettings.Development.json",
		"/C/Users/donov/OneDrive/Documents/realtime-charts-signalr-angular-master/realtime-charts-signalr-angular-master/RealTimeCharts.Server/RealTimeCharts.Server/Properties/launchSettings.json",
		"/C/Users/donov/source/repos/Kingdom/Kingdom/ClientApp1/angular.json",
		"/C/Users/donov/source/repos/Kingdom/Kingdom/ClientApp/angular.json",
		"/C/Users/donov/source/repos/Kingdom/Kingdom/ClientApp/package.json",
		"/C/Users/donov/source/repos/Kingdom/Kingdom/ClientApp1/package.json",
		"/C/Users/donov/source/repos/Kingdom/Kingdom/Kingdom.csproj",
		"/C/Users/donov/OneDrive/Desktop/mykd_Dev.PublishSettings",
		"/D/Kingdom3/k1/.github/workflows/master_mykd.yml",
		"/D/Kingdom3/k1/.github/workflows/main.yml",
		"/C/Users/donov/source/repos/Kingdom/.github/workflows/master_mykd.yml",
		"/C/Users/donov/source/repos/Kingdom/.github/workflows/main.yml",
		"/C/Users/donov/OneDrive/Desktop/MyKd.PublishSettings",
		"/C/Users/donov/OneDrive/Documents/Kingdom/Kingdom/Program.cs",
		"/C/Users/donov/OneDrive/Documents/Kingdom/Kingdom/appsettings.Development.json",
		"/C/Users/donov/AppData/Roaming/Microsoft/UserSecrets/2017a5be-f3c0-45e3-a400-56ea583c695c/secrets.json",
		"/C/Users/donov/AppData/Local/Temp/Temp1_realtime-charts-signalr-angular-master.zip/realtime-charts-signalr-angular-master/RealTimeCharts.Server/RealTimeCharts.Server/appsettings.Development.json",
		"/C/Users/donov/AppData/Local/Temp/Temp1_realtime-charts-signalr-angular-master.zip/realtime-charts-signalr-angular-master/RealTimeCharts.Server/RealTimeCharts.Server/appsettings.json",
		"/C/Users/donov/OneDrive/Documents/Kingdom/Kingdom/appsettings.json",
		"/D/Kingdom/KingdomWebApp/Program.cs",
		"/D/Kingdom3/.github/workflows/main.yml",
		"/C/Users/donov/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json",
		"/C/Users/donov/OneDrive/Desktop/mykd_Dev (1).PublishSettings",
		"/D/Kingdom3/KingdomWebApp/KingdomWebApp.csproj",
		"/D/Kingdom3/KingdomWebApp/ClientApp/angular.json",
		"/D/IncludeAngular-CopyToWwwroot-ToDevSlotOnMaster-master_mykd(Dev).yaml",
		"/D/Kingdom3/deployment-microsoft/master_mykd(dev).yml",
		"/D/Kingdom3/deployment-microsoft/main.yml",
		"/C/Users/donov/OneDrive/Desktop/master_mykd(dev).yml",
		"/D/azureyaml.txt",
		"/D/Kingdom3/ClientApp/angular.json",
		"/D/IncludeAngular-AngularJsonAutoMoveToWwwroot-ToDevSlotOnMaster-master_mykd(Dev).yaml",
		"/D/Kingdom3/.gitignore",
		"/D/profile.publishsettings",
		"/D/Kingdom/.gitignore",
		"/D/Chrome Passwords.txt",
		"/D/GlobalCoder-backup-noedit.ahk",
		"/D/Kingdom/README.md",
		"/C/Users/donov/OneDrive/Documents/Kingdom/kingdom.sln",
		"/C/Users/donov/AppData/Roaming/Sublime Text/Packages/User/ahv2.sublime-build",
		"/C/Users/donov/AppData/Roaming/Sublime Text/Packages/User/autohotkey1.sublime-build",
		"/D/mobireach/realtime-charts-signalr-angular/RealTimeCharts.Server/RealTimeCharts.Server/Properties/launchSettings.json",
		"/C/Users/donov/OneDrive/Desktop/CSharp-MVC-Local-Groups-Social-Mangement-System-master/Kingdom/ClientApp/ClientApp.esproj",
		"/D/(github)/IMS/fresh/eShop-Complete-SourceCodes (1)/eShop.Web.CustomerPortal/wwwroot/exampleJsInterop.js",
		"/C/Users/donov/OneDrive/Desktop/CSharp-MVC-Local-Groups-Social-Mangement-System-master/CSharp-MVC-Local-Groups-Social-Mangement-System-master/Kingdom.sln",
		"/D/(github)/.Kingdom/.filenesting.json",
		"/D/(github)/.Kingdom/.vs/ProjectSettings.json",
		"/D/(phone)/internal/DCIM/Screenshots/Screenshot_20230312-141645_Edge.jpg",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/1_globalcoder_v2ref - Copy.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/static-ex-3-nonobj.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/0_globalcoder_runner.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/stats.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/UIAForm.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/hellbent.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/2.GlobalCoder.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/GlobalCoder.ahk",
		"/G/((top))/ahk-main/ahk-main/menu.ahk",
		"/J/!dev stuff/(AutoHotkey)/87BuiltInAHKStudioHotkeys/IntroToClasses/Objects-Tutorial.ahk",
		"/D/opencv/build/install/samples/python/color_histogram.py",
		"/D/opencv/opencv-4.5.2/cmake/OpenCVGenSetupVars.cmake",
		"/C/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/version.json",
		"/D/opencv/build/CMakeFiles/opencv_junk/version.junk",
		"/C/Python311/Lib/site-packages/cv2/config-3.11.py",
		"/C/Python311/Lib/site-packages/cv2/load_config_py2.py",
		"/C/Python311/Lib/site-packages/cv2/load_config_py3.py",
		"/C/Python311/Lib/site-packages/cv2/config.py",
		"/C/Python311/Lib/site-packages/cv2/__init__.py",
		"/C/Users/donov/OpenCV-Cuda/b1/modules/python_tests/RUN_TESTS.dir/nasm.props",
		"/C/Users/donov/OpenCV-Cuda/b1/modules/python_tests/cmake_install.cmake",
		"/C/Users/donov/OneDrive/Desktop/cv/OpenCV2/opencv/build/OpenCVConfig.cmake",
		"/D/OpenCvCuda-bkup/build/opencv2/cvconfig.h",
		"/D/OpenCvCuda-bkup/build/opencv2/opencv_modules.hpp"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"byref",
			"d",
			"\" ",
			"\"  ",
			"\""
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/GlobalCoder.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 160681,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "Packages/Theme - Default/common/bookmark.png",
								"regions":
								[
									[
										7197,
										7197
									],
									[
										123377,
										123377
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								6735,
								6735
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "2aac11fa",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/GlobalCoder.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9285.6,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/((GlobalCoder)).ah2",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10729,
						"regions":
						{
						},
						"selection":
						[
							[
								47,
								47
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "a74849f0",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/%28%28GlobalCoder%29%29.ah2",
							"open_with_edit": true,
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/GlobalCoder.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 115095,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "ecfa639b",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/GlobalCoder.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3077.6,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/globalcoder - Copy.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10850,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "1140f9d7",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/globalcoder%20-%20Copy.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/((Examples)).ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 106940,
						"regions":
						{
						},
						"selection":
						[
							[
								17687,
								17687
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "d65f8e00",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/%28%28Examples%29%29.ah2",
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 818.4,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/((classes)).ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 83749,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "300aa291",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/%28%28classes%29%29.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/SQLiteDB_sample.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11727,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "b51d778c",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/SQLiteDB_sample.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/SQLiteDBv2_sample.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12028,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "e2ffd9c3",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/SQLiteDBv2_sample.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/employee-class-bingchat.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 512,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "86e8aed7",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/employee-class-bingchat.ah2",
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/Example7 - OpenGoogleMaps.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 485,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "22e47e93",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/Example7%20-%20OpenGoogleMaps.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/Class_SQLiteDB.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 55732,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "c997e9a3",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/Class_SQLiteDB.ah2",
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gen.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2326,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "b14ddfd7",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/gen.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gen.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3097,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ". ",
									"registration_id": "ff8b1857-e1ad-4035-86c4-c97aff629695",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "OmniSharp"
								},
								{
									"characters": ". ",
									"registration_id": "ff8b1857-e1ad-4035-86c4-c97aff629695",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "OmniSharp"
								}
							],
							"bs_sintax": "unityc#",
							"buffer_scroll_name": "a3df5e82",
							"lsp_active": true,
							"lsp_hover_provider_count": 2,
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/gen.cs",
							"show_definitions": false,
							"spell_check": false,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gen2.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3009,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ". ",
									"registration_id": "ff8b1857-e1ad-4035-86c4-c97aff629695",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "OmniSharp"
								},
								{
									"characters": ". ",
									"registration_id": "ff8b1857-e1ad-4035-86c4-c97aff629695",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "OmniSharp"
								}
							],
							"bs_sintax": "unityc#",
							"buffer_scroll_name": "6ad258da",
							"lsp_active": true,
							"lsp_hover_provider_count": 2,
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/gen2.cs",
							"show_definitions": false,
							"spell_check": false,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/generate.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3380,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "a9841611",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/generate.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gptgen2.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1008,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "16c96df0",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/gptgen2.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gptGenerated.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1042,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "619367f9",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/gptGenerated.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gpt-logger-timeline-syntax-reevaluation.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1116,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "133bfb52",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/gpt-logger-timeline-syntax-reevaluation.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gpt-logger-timeline.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1111,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "2895d6db",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/gpt-logger-timeline.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 308.8,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/gui.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 270,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "787aef6f",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/gui.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/logfile2.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 89,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "plain text",
							"buffer_scroll_name": "f89a7a94",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/logfile2.txt",
							"spell_check": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/Minerva-Handlers.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1822,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "3f5bb2c8",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/Minerva-Handlers.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/guiclass.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5405,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "a45f23df",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/guiclass.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/mySQL.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10985,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "1e6952f2",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/mySQL.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/PlaceholderController copy.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3010,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ". ",
									"registration_id": "ff8b1857-e1ad-4035-86c4-c97aff629695",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "OmniSharp"
								},
								{
									"characters": ". ",
									"registration_id": "ff8b1857-e1ad-4035-86c4-c97aff629695",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "OmniSharp"
								}
							],
							"bs_sintax": "unityc#",
							"buffer_scroll_name": "7029945a",
							"lsp_active": true,
							"lsp_hover_provider_count": 2,
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/PlaceholderController%20copy.cs",
							"show_definitions": false,
							"spell_check": false,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/PlaceholderController.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3010,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ". ",
									"registration_id": "ff8b1857-e1ad-4035-86c4-c97aff629695",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "OmniSharp"
								},
								{
									"characters": ". ",
									"registration_id": "ff8b1857-e1ad-4035-86c4-c97aff629695",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "OmniSharp"
								}
							],
							"bs_sintax": "unityc#",
							"buffer_scroll_name": "b5a23569",
							"lsp_active": true,
							"lsp_hover_provider_count": 2,
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/PlaceholderController.cs",
							"show_definitions": false,
							"spell_check": false,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/QuickLinks_gpt.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2757,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "db17542f",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/QuickLinks_gpt.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/read-ini.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1339,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "3608f243",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/read-ini.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/rewrite.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2181,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "ec8e62a8",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/rewrite.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/QuickConvertorV2.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 34322,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "e11a275a",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/QuickConvertorV2.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/rewrite2.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 743,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "0c74e1f5",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/rewrite2.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/SQLite_L.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41111,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "001730dd",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/SQLite_L.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/sqliteex.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6642,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "d2f47387",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/sqliteex.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/sqliteex2.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3960,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "eb923397",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/sqliteex2.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/emp-bingchat.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9970,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "7c953097",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/emp-bingchat.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/test (2).ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 438,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "97fd5621",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/test%20%282%29.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/test.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "5de5011a",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/test.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/tlinelogger.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 589,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "02a21d8c",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/tlinelogger.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/class TextFileProcessor.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4033,
						"regions":
						{
						},
						"selection":
						[
							[
								1655,
								4032
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "14cde04f",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/class%20TextFileProcessor.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2242.4,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/Wordlist.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 19119,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "43118ec2",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/Wordlist.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/CodeQuickTester v2.ah1",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 85443,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "plain text",
							"buffer_scroll_name": "361e3a03",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/CodeQuickTester%20v2.ah1",
							"spell_check": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7 - V2/QuickLinks.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6060,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "ba406481",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/7%20-%20V2/QuickLinks.ah2",
							"spell_check": false,
							"syntax": "Packages/User/zeanah2/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 54.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.865644171779,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 126.400001526
	},
	"output.Terminus 2":
	{
		"height": 126.400001526
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 98.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/zeanah2/Autohotkey2.sublime-build",
	"project": "recent-subl.sublime-project",
	"replace":
	{
		"height": 52.8
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"P:\\App\\App\\ws\\tools & WS.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 300.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 198.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
