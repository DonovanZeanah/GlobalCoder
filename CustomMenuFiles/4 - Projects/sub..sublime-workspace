{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"men",
				"Menu"
			],
			[
				"if",
				"If"
			],
			[
				"note",
				"notepath"
			],
			[
				"menu",
				"Menu"
			],
			[
				"key",
				"KeyWait"
			],
			[
				"keyw",
				"KeyWait"
			],
			[
				"a_",
				"A_Index"
			],
			[
				"Loop",
				"Loop parse"
			],
			[
				"msgb",
				"MsgBox"
			],
			[
				"go",
				"Gosub"
			],
			[
				"sys",
				"SysGet"
			],
			[
				"a_loo",
				"A_LoopFileName"
			],
			[
				"no",
				"NoTrayIcon"
			],
			[
				"work",
				"SetWorkingDir"
			],
			[
				"DE",
				"Destroy"
			],
			[
				"msg",
				"MsgBox"
			],
			[
				"got",
				"Goto"
			],
			[
				"file",
				"FileAppend"
			],
			[
				"close",
				"Close()"
			],
			[
				"gui",
				"Gui"
			],
			[
				"Guic",
				"GuiEscape"
			],
			[
				"guio",
				"GuiClose"
			],
			[
				"hide",
				"HideGUI"
			],
			[
				"ahk_",
				"ahk_exe"
			],
			[
				"setw",
				"SetWorkingDir"
			],
			[
				"a_this",
				"A_ThisFunc"
			],
			[
				"c",
				"CustomMenuFiles"
			],
			[
				"winwai",
				"WinWaitActive"
			],
			[
				"Input",
				"InputBox"
			],
			[
				"input",
				"InputBox"
			],
			[
				"stringre",
				"StringReplace"
			],
			[
				"a_pro",
				"A_ProgramFiles"
			],
			[
				"a_script",
				"A_ScriptFullPath"
			],
			[
				"regexr",
				"RegExReplace()"
			],
			[
				"FileCreate",
				"FileCreateDir"
			],
			[
				"exist",
				"FileExist()"
			],
			[
				"timesin",
				"A_TimeSincePriorHotkey"
			],
			[
				"a_p",
				"A_TimeSincePriorHotkey"
			],
			[
				"a_ho",
				"A_PriorHotkey"
			],
			[
				"fileappen",
				"FileAppend"
			],
			[
				"a_screen",
				"A_ScreenHeight"
			],
			[
				"a_scr",
				"A_ScreenWidth"
			],
			[
				"winget",
				"WinGetTitle"
			],
			[
				"Winget",
				"WinGetTitle"
			],
			[
				"setk",
				"SetKeyDelay"
			],
			[
				"a_pr",
				"A_PriorHotkey"
			],
			[
				"too",
				"ToolTip"
			],
			[
				"string",
				"StringReplace"
			],
			[
				"strre",
				"StrReplace()"
			],
			[
				"repl",
				"StrReplace()"
			],
			[
				"win",
				"WinActivate"
			],
			[
				"change",
				"changeFirstName"
			],
			[
				"rnd",
				"Round()"
			],
			[
				"str",
				"StrSplit()"
			],
			[
				"getke",
				"GetKeyState()"
			],
			[
				"br",
				"Break"
			],
			[
				"ifwi",
				"IfWinActive"
			],
			[
				"winwait",
				"WinWaitActive"
			],
			[
				"caps",
				"CapsLock"
			],
			[
				"Sendi",
				"SendInput"
			],
			[
				"sen",
				"SendMessage"
			],
			[
				"retur",
				"ReturnValue"
			],
			[
				"sendmod",
				"SendMode"
			],
			[
				"contro",
				"ControlList"
			],
			[
				"inire",
				"IniRead"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/sizeof.ah2",
			"settings":
			{
				"buffer_size": 17747,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "&"
					},
					"AgAAADEKAAAAAAAAMgoAAAAAAAAAAAAAMgoAAAAAAAAyCgAAAAAAAAUAAABCeVJlZg",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA2CgAAAAAAADEKAAAAAAAAAAAAAAAA8L8"
				],
				[
					4,
					1,
					"right_delete",
					null,
					"AQAAADIKAAAAAAAAMgoAAAAAAAABAAAAIA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyCgAAAAAAADIKAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/D/working/capslock-multi.ahk",
			"settings":
			{
				"buffer_size": 1378,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					8,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAcAAAAAAAAACAAAAAAAAAAAAAAA",
					"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAHAAAAAAAAAAcAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "hr"
					},
					"AgAAAD0BAAAAAAAAPgEAAAAAAAAAAAAAPgEAAAAAAAA/AQAAAAAAAAAAAAA",
					"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA9AQAAAAAAAD0BAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD8BAAAAAAAAQAEAAAAAAAAAAAAA",
					"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA/AQAAAAAAAD8BAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "fr"
					},
					"AgAAAEABAAAAAAAAQQEAAAAAAAAAAAAAQQEAAAAAAABCAQAAAAAAAAAAAAA",
					"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABAAQAAAAAAAEABAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEIBAAAAAAAAQwEAAAAAAAAAAAAA",
					"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCAQAAAAAAAEIBAAAAAAAAAAAAAAAA8L8"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "fd"
					},
					"AgAAAEMBAAAAAAAARAEAAAAAAAAAAAAARAEAAAAAAABFAQAAAAAAAAAAAAA",
					"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDAQAAAAAAAEMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEUBAAAAAAAARgEAAAAAAAAAAAAA",
					"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFAQAAAAAAAEUBAAAAAAAAAAAAAAAA8L8"
				],
				[
					31,
					1,
					"insert",
					{
						"characters": "fg"
					},
					"AgAAAEYBAAAAAAAARwEAAAAAAAAAAAAARwEAAAAAAABIAQAAAAAAAAAAAAA",
					"EQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGAQAAAAAAAEYBAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/((functions)).ah2",
			"settings":
			{
				"buffer_size": 68550,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"revert",
					null,
					"",
					"BwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA024AAAAAAADXbgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/((functions)).ahk",
			"settings":
			{
				"buffer_size": 65098,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					19,
					1,
					"insert",
					{
						"characters": "old"
					},
					"AwAAAIdqAAAAAAAAiGoAAAAAAAAAAAAAiGoAAAAAAACJagAAAAAAAAAAAACJagAAAAAAAIpqAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACHagAAAAAAAIdqAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/Gdipall.ahk",
			"settings":
			{
				"buffer_size": 115637,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/!.ahk",
			"settings":
			{
				"buffer_size": 21629,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/aNEWGlobalCoder.ahk",
			"settings":
			{
				"buffer_size": 12706,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/d/lib/UIA_Browser.ahk",
			"settings":
			{
				"buffer_size": 39644,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "MyGui := Gui()\nFakeLink := MyGui.Add(\"Text\", \"\", \"Click here to launch Google.\")\nFakeLink.SetFont(\"underline cBlue\")\nFakeLink.OnEvent(\"Click\", LaunchGoogle)\n\n; Alternatively, a Link control can be used:\nMyGui.Add(\"Link\",, 'Click <a href=\"www.google.com\">here</a> to launch Google.')\nMyGui.Show()\n\nLaunchGoogle(*) {\n    Run(\"www.google.com\")\n}",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/GuiControls-Script.ahk",
			"file_size": 356,
			"file_write_time": 133211912692553358,
			"settings":
			{
				"buffer_size": 342,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "MyGui := Gui()\nMyEdit := MyGui.Add(\"Edit\")\n; Store the tooltip text in a custom property:\nMyEdit.ToolTip := \"This is a tooltip for the control whose name is MyEdit.\"\nMyDDL := MyGui.Add(\"DropDownList\",, [\"Red\",\"Green\",\"Blue\"])\nMyDDL.ToolTip := \"Choose a color from the drop-down list.\"\nMyGui.Add(\"Checkbox\",, \"This control has no tooltip.\")\nMyGui.Show()\nOnMessage(0x0200, On_WM_MOUSEMOVE)\n\nOn_WM_MOUSEMOVE(wParam, lParam, msg, Hwnd)\n{\n    static PrevHwnd := 0\n    if (Hwnd != PrevHwnd)\n    {\n        Text := \"\", ToolTip() ; Turn off any previous tooltip.\n        CurrControl := GuiCtrlFromHwnd(Hwnd)\n        if CurrControl\n        {\n            if !CurrControl.HasProp(\"ToolTip\")\n                return ; No tooltip for this control.\n            Text := CurrControl.ToolTip\n            SetTimer () => ToolTip(Text), -1000\n            SetTimer () => ToolTip(), -4000 ; Remove the tooltip.\n        }\n        PrevHwnd := Hwnd\n    }\n}",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Gui-Script (3).ahk",
			"file_size": 959,
			"file_write_time": 133211914243711655,
			"settings":
			{
				"buffer_size": 929,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "MyGui := Gui(, \"Title of Window\")\nMyGui.Add(\"Text\",, \"Some text to display.\")\nMyGui.Show()\n\nMsgBox(GuiFromHwnd(MyGui.Hwnd).Title)",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/GuiFromHwnd-gui.ahk",
			"file_size": 136,
			"file_write_time": 133211915606622576,
			"settings":
			{
				"buffer_size": 129,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "MyGui := Gui()\nURL := MyGui.Add(\"Edit\", \"w930 r1\", \"https://www.autohotkey.com/docs/\")\nMyGui.Add(\"Button\", \"x+6 yp w44 Default\", \"Go\").OnEvent(\"Click\", ButtonGo)\nWB := MyGui.Add(\"ActiveX\", \"xm w980 h640\", \"Shell.Explorer\").Value\nComObjConnect(WB, WB_events)  ; Connect WB's events to the WB_events class object.\nMyGui.Show()\n; Continue on to load the initial page:\nButtonGo()\n\nButtonGo(*) {\n    WB.Navigate(URL.Value)\n}\n\nclass WB_events {\n    static NavigateComplete2(wb, &NewURL, *) {\n        URL.Value := NewURL  ; Update the URL edit control.\n    }\n}",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/GuiControls-Script (1).ahk",
			"file_size": 573,
			"file_write_time": 133211917443728628,
			"settings":
			{
				"buffer_size": 553,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "; Easy Window Dragging -- KDE style (based on the v1 script by Jonny) \n; https://www.autohotkey.com\n; This script makes it much easier to move or resize a window: 1) Hold down\n; the ALT key and LEFT-click anywhere inside a window to drag it to a new\n; location; 2) Hold down ALT and RIGHT-click-drag anywhere inside a window\n; to easily resize it; 3) Press ALT twice, but before releasing it the second\n; time, left-click to minimize the window under the mouse cursor, right-click\n; to maximize it, or middle-click to close it.\n\n; The Double-Alt modifier is activated by pressing\n; Alt twice, much like a double-click. Hold the second\n; press down until you click.\n;\n; The shortcuts:\n;  Alt + Left Button  : Drag to move a window.\n;  Alt + Right Button : Drag to resize a window.\n;  Double-Alt + Left Button   : Minimize a window.\n;  Double-Alt + Right Button  : Maximize/Restore a window.\n;  Double-Alt + Middle Button : Close a window.\n;\n; You can optionally release Alt after the first\n; click rather than holding it down the whole time.\n\n; This is the setting that runs smoothest on my\n; system. Depending on your video card and cpu\n; power, you may want to raise or lower this value.\nSetWinDelay 2\nCoordMode \"Mouse\"\n\ng_DoubleAlt := false\n\n!LButton::\n{\n    global g_DoubleAlt  ; Declare it since this hotkey function must modify it.\n    if g_DoubleAlt\n    {\n        MouseGetPos ,, &KDE_id\n        ; This message is mostly equivalent to WinMinimize,\n        ; but it avoids a bug with PSPad.\n        PostMessage 0x0112, 0xf020,,, KDE_id\n        g_DoubleAlt := false\n        return\n    }\n    ; Get the initial mouse position and window id, and\n    ; abort if the window is maximized.\n    MouseGetPos &KDE_X1, &KDE_Y1, &KDE_id\n    if WinGetMinMax(KDE_id)\n        return\n    ; Get the initial window position.\n    WinGetPos &KDE_WinX1, &KDE_WinY1,,, KDE_id\n    Loop\n    {\n        if !GetKeyState(\"LButton\", \"P\") ; Break if button has been released.\n            break\n        MouseGetPos &KDE_X2, &KDE_Y2 ; Get the current mouse position.\n        KDE_X2 -= KDE_X1 ; Obtain an offset from the initial mouse position.\n        KDE_Y2 -= KDE_Y1\n        KDE_WinX2 := (KDE_WinX1 + KDE_X2) ; Apply this offset to the window position.\n        KDE_WinY2 := (KDE_WinY1 + KDE_Y2)\n        WinMove KDE_WinX2, KDE_WinY2,,, KDE_id ; Move the window to the new position.\n    }\n}\n\n!RButton::\n{\n    global g_DoubleAlt\n    if g_DoubleAlt\n    {\n        MouseGetPos ,, &KDE_id\n        ; Toggle between maximized and restored state.\n        if WinGetMinMax(KDE_id)\n            WinRestore KDE_id\n        Else\n            WinMaximize KDE_id\n        g_DoubleAlt := false\n        return\n    }\n    ; Get the initial mouse position and window id, and\n    ; abort if the window is maximized.\n    MouseGetPos &KDE_X1, &KDE_Y1, &KDE_id\n    if WinGetMinMax(KDE_id)\n        return\n    ; Get the initial window position and size.\n    WinGetPos &KDE_WinX1, &KDE_WinY1, &KDE_WinW, &KDE_WinH, KDE_id\n    ; Define the window region the mouse is currently in.\n    ; The four regions are Up and Left, Up and Right, Down and Left, Down and Right.\n    if (KDE_X1 < KDE_WinX1 + KDE_WinW / 2)\n        KDE_WinLeft := 1\n    else\n        KDE_WinLeft := -1\n    if (KDE_Y1 < KDE_WinY1 + KDE_WinH / 2)\n        KDE_WinUp := 1\n    else\n        KDE_WinUp := -1\n    Loop\n    {\n        if !GetKeyState(\"RButton\", \"P\") ; Break if button has been released.\n            break\n        MouseGetPos &KDE_X2, &KDE_Y2 ; Get the current mouse position.\n        ; Get the current window position and size.\n        WinGetPos &KDE_WinX1, &KDE_WinY1, &KDE_WinW, &KDE_WinH, KDE_id\n        KDE_X2 -= KDE_X1 ; Obtain an offset from the initial mouse position.\n        KDE_Y2 -= KDE_Y1\n        ; Then, act according to the defined region.\n        WinMove KDE_WinX1 + (KDE_WinLeft+1)/2*KDE_X2  ; X of resized window\n              , KDE_WinY1 +   (KDE_WinUp+1)/2*KDE_Y2  ; Y of resized window\n              , KDE_WinW  -     KDE_WinLeft  *KDE_X2  ; W of resized window\n              , KDE_WinH  -       KDE_WinUp  *KDE_Y2  ; H of resized window\n              , KDE_id\n        KDE_X1 := (KDE_X2 + KDE_X1) ; Reset the initial position for the next iteration.\n        KDE_Y1 := (KDE_Y2 + KDE_Y1)\n    }\n}\n\n; \"Alt + MButton\" may be simpler, but I like an extra measure of security for\n; an operation like this.\n!MButton::\n{\n    global g_DoubleAlt\n    if g_DoubleAlt\n    {\n        MouseGetPos ,, &KDE_id\n        WinClose KDE_id\n        g_DoubleAlt := false\n        return\n    }\n}\n\n; This detects \"double-clicks\" of the alt key.\n~Alt::\n{\n    global g_DoubleAlt := (A_PriorHotkey = \"~Alt\" and A_TimeSincePriorHotkey < 400)\n    Sleep 0\n    KeyWait \"Alt\"  ; This prevents the keyboard's auto-repeat feature from interfering.\n}\n",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/EasyWindowDrag_(KDE).ahk",
			"file_size": 4880,
			"file_write_time": 133211918249800391,
			"settings":
			{
				"buffer_size": 4742,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "; Window Shading (based on the v1 script by Rajat)\n; https://www.autohotkey.com\n; This script reduces a window to its title bar and then back to its\n; original size by pressing a single hotkey.  Any number of windows\n; can be reduced in this fashion (the script remembers each).  If the\n; script exits for any reason, all \"rolled up\" windows will be\n; automatically restored to their original heights.\n\n; Set the height of a rolled up window here.  The operating system\n; probably won't allow the title bar to be hidden regardless of\n; how low this number is:\ng_MinHeight := 25\n\n; This line will unroll any rolled up windows if the script exits\n; for any reason:\nOnExit ExitSub\n\nIDs := Array()\nWindows := Map()\n\n#z::  ; Change this line to pick a different hotkey.\n; Below this point, no changes should be made unless you want to\n; alter the script's basic functionality.\n{\n    ; Uncomment this next line if this subroutine is to be converted\n    ; into a custom menu item rather than a hotkey. The delay allows\n    ; the active window that was deactivated by the displayed menu to\n    ; become active again:\n    ;Sleep 200\n    ActiveID := WinGetID(\"A\")\n    for ID in IDs\n    {\n        if ID = ActiveID\n        {\n            ; Match found, so this window should be restored (unrolled):\n            Height := Windows[ActiveID]\n            WinMove ,,, Height, ActiveID\n            IDs.RemoveAt(A_Index)\n            return\n        }\n    }\n    WinGetPos ,,, &Height, \"A\"\n    Windows.Set(ActiveID, Height)\n    WinMove ,,, g_MinHeight, ActiveID\n    IDs.Push(ActiveID)\n}\n\nExitSub(*)\n{\n    for ID in IDs\n    {\n        Height := Windows[ID]\n        WinMove ,,, Height, ID\n    }\n    ExitApp  ; Must do this for the OnExit subroutine to actually Exit the script.\n}\n",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/WindowShading.ahk",
			"file_size": 1813,
			"file_write_time": 133211920448323400,
			"settings":
			{
				"buffer_size": 1754,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "\n/*\nWe can also use this.timer := this.Tick.Bind(this). When this.timer is called, \nit will effectively invoke tick_function.Call(this), where tick_function is the\n function object which implements that method. By contrast, ObjBindMethod produces \n an object which invokes this.Tick().\nIf we rename Tick to Call, we can just use this directly instead of this.timer. However, \nObjBindMethod is useful when the object has multiple methods which should be called by \ndifferent event sources, such as hotkeys, menu items, GUI controls, etc.\nIf the timer is being modified or deleted from within a function/method called by the timer, \nit may be easier to omit the Function parameter. In some cases this avoids the need to retain\n the original object which was passed to SetTimer.\n*/\ncounter := SecondCounter()\ncounter.Start\nSleep 5000\ncounter.Stop\nSleep 2000\n\n; An example class for counting the seconds...\nclass SecondCounter {\n    __New() {\n        this.interval := 1000\n        this.count := 0\n        ; Tick() has an implicit parameter \"this\" which is a reference to\n        ; the object, so we need to create a function which encapsulates\n        ; \"this\" and the method to call:\n        this.timer := ObjBindMethod(this, \"Tick\")\n    }\n    Start() {\n        SetTimer this.timer, this.interval\n        ToolTip \"Counter started\"\n    }\n    Stop() {\n        ; To turn off the timer, we must pass the same object as before:\n        SetTimer this.timer, 0\n        ToolTip \"Counter stopped at \" this.count\n    }\n    ; In this example, the timer calls this method:\n    Tick() {\n        ToolTip ++this.count\n    }\n}",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/SetTimer-Script.ahk",
			"file_size": 1652,
			"file_write_time": 133211922649065069,
			"settings":
			{
				"buffer_size": 1607,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"BAAAAAEAAAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAAFAAAAAAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAHgBAAAAAAAAAAMAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"paste_and_indent",
					null,
					"AQAAAAQAAAAAAAAA/wIAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAFMAAAAAAAAAVAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMAAAAAAAAAUwAAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAKMAAAAAAAAApAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMAAAAAAAAAowAAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPcAAAAAAAAA9wAAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHcBAAAAAAAAeAEAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHcBAAAAAAAAdwEAAAAAAAAAAAAAAADwvw"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAM8BAAAAAAAA0AEAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8BAAAAAAAAzwEAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHYCAAAAAAAAdwIAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHYCAAAAAAAAdgIAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAANQCAAAAAAAA1QIAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANQCAAAAAAAA1AIAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"contents": "SleepDuration := 1  ; This can sometimes be finely adjusted (e.g. 2 is different than 3) depending on the value below.\nTimePeriod := 3 ; Try 7 or 3.  See comment below.\n; On a PC whose sleep duration normally rounds up to 15.6 ms, try TimePeriod=7 to allow\n; somewhat shorter sleeps, and try TimePeriod=3 or less to allow the shortest possible sleeps.\n\nDllCall(\"Winmm\\timeBeginPeriod\", \"UInt\", TimePeriod)  ; Affects all applications, not just this script's DllCall(\"Sleep\"...), but does not affect SetTimer.\nIterations := 50\nStartTime := A_TickCount\n\nLoop Iterations\n    DllCall(\"Sleep\", \"UInt\", SleepDuration)  ; Must use DllCall instead of the Sleep function.\n\nDllCall(\"Winmm\\timeEndPeriod\", \"UInt\", TimePeriod)  ; Should be called to restore system to normal.\nMsgBox \"Sleep duration = \" . (A_TickCount - StartTime) / Iterations",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Sleep-Script.ahk",
			"file_size": 847,
			"file_write_time": 133211923652060045,
			"settings":
			{
				"buffer_size": 831,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#SingleInstance Force\n#Requires AutoHotkey v2.0\n\n;#Include \"C:\\utilities\\AutoHotKey\\V2\\Lib\\object_list.ahk\"\n\n;EXAMPLE\njack := \"this is not an object\"  ;NOTE: this example shows behavior when you pass a non-object to the function\nobject_list(jack, \"misfire\")\n\ncomplexObj := [ \"one\", \"two\", \"three\", \"four\"\n\t\t\t\t, map(\"five\", 5)\n\t\t\t\t, {six : 6, seven : 7, eight : map(\"dog\", \"cat\")\n\t\t\t\t, nine : [ 10, 9, 8, 7\n\t\t\t\t, map(\"1040\", array({})), 6, 5, 4, 3 ]}\n\t\t\t\t, map()\n\t\t\t\t, array()\n\t\t\t\t, {} ]\n\nobject_list(complexObj, \"complex object\")\nobject_list(complexObj, \"complex object\", True) ;show details\n\n;Object... not quoted key, key is PROPERTY and is NOT case sensitive... accessed by '.'\nmanny := { JAN : \"01\"\n\t\t,  Feb : \"02\"\n\t\t,  Mar : \"03\"\n\t\t,  Apr : \"04\"\n\t\t,  May : \"05\"\n\t\t,  Jun : \"06\"\n\t\t,  Jul : \"07\"\n\t\t,  Aug : \"08\"\n\t\t,  Sep : \"09\"\n\t\t,  Oct : \"10\"\n\t\t,  Nov : \"11\"\n\t\t,  Dec : \"12\"\n\t\t,  name : \"Calendar as OBJECT\" }\n\t\t\n; MAP  is associative array... key is quoted and IS CASE SENSITIVE... accessed by [\"yada\"]\nmoe := map( \"JAN\" , \"01\"\n\t\t ,  \"Feb`n`n\" , \"02\"\n\t\t ,  \"Mar`t\" , \"03\"\n\t\t ,  \"Apr\" , \"04\"\n\t\t ,  \"May\" , \"05\"\n\t\t ,  \"Jun\" , \"06\"\n\t\t ,  \"Jul\" , \"07\"\n\t\t ,  \"Aug\" , \"08\"\n\t\t ,  \"Sep\" , \"09\"\n\t\t ,  \"Oct\" , \"10\"\n\t\t ,  \"Nov\" , \"11\"\n\t\t ,  \"Dec\" , \"12\"\n\t\t , \"name\", \"Calendar as MAP\" )\n\nMsgbox(moe[\"Feb`n`n\"])\nMsgbox(moe[\"Mar`t\"])\n\nobject_list(manny)\nobject_list(manny, \"manny\")\nobject_list(moe)\nobject_list(moe, \"moe\")\n\n;array\njack := [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\nMsgbox(jack[5])\nobject_list(jack, \"jack\")\n\nMsgbox(manny is object) ;yes\nMsgbox(manny is map) ;no\nMsgbox(manny is array) ;no\nMsgbox(moe is object) ;yes\nMsgbox(moe is map) ;yes\nMsgbox(moe is array) ;no\n\nMsgbox(manny.jan . \"`n\" . moe[\"JAN\"])\n\nfor k, v in moe\n\tMsgbox(\"map: \" . k . \" = \" . v)\n\n;Object NOT enumerable this way\n;for k, v in manny\n\n;make Object enumerable with 'OwnProps'\nfor k, v in manny.OwnProps()\n\tMsgbox(\"object (thru 'OwnProps'): \" . k . \" = \" . v)\n\t\nMsgbox(ObjOwnPropCount(manny))\nMsgbox(ObjGetCapacity(manny))\n\n^Escape::ExitApp\n\n\n/*\n---------------------------------------------------------------------------------------------------\nFunction      : object_list(obj, name [string], details [boolean])\n              :\nDescription   : Traverses the object's member variables and builds a string to show what it\n              : contains.  Displays the contents stored in any type of object: MAP, ARRAY, OBJECT\n              : \nParameters    :     obj - The object to display\n              :    name - The name you want to show for the object at the top level. If the object\n              :           is not an ARRAY and there is a member named \"name\" it will be used. Note\n              :           that 'name' is lower case for a MAP.\n              : details - 'True' will enable showing all built in properties, 'False' otherwise\n              : \nReturns       : string summary of object suitable for viewing\n              : \nRemarks       : OBJECT properties are shown as <.property> = value\n              : ARRAY  keys are shown as [key] = value\n              : MAP    keys are shown as ['key'] = value\n---------------------------------------------------------------------------------------------------\n*/\n\nobject_list(obj, name := \"\", details := False)\n{\n\tif (isObject(obj))\n\t\tMsgbox(object_list_(obj, name,, details))\n\telse\n\t\tMsgbox(\"object_list() reports... Passed parameter is not an object:\"\n\t\t\t. \"`n\" . (name = \"\" ? \"\" : \"<\" . name . \">`n\") . obj)\n\tReturn\n}\n\n;recursive\nobject_list_(obj, name := \"\", indent := \"`n\", details := False)\n{\n\tstatic recursionDepth := 0\n\t\n\tinputIs := obj is map ? \"MAP\" ;. (obj.CaseSense ? \" (c)\" : \" (~c)\")\n\t\t\t\t: obj is array ? \"ARRAY\"\n\t\t\t\t: \"OBJECT\"\n\t\n\tif (++recursionDepth >= 200)\n\t{\n\t\tMsgbox(\"object_list recursion depth hit trigger of \" . recursionDepth)\n\t\tReturn False\n\t}\n\tif (name = \"\") and !(obj is array) and ( (obj is map) ? obj.Has(\"name\") : obj.HasOwnProp(\"name\") )\n\t\tname := (obj is map) ? obj[\"name\"] : obj.name\n\t;suppress CR on first line but not on recursive call when indent = \" .\"\n\toutput := indent = \"`n\" ? (\"<\" . name . \"> = <\" . inputIs . \">\") : (indent . \"<\" . name . \"> = <\" . inputIs . \">\")\n\tindent .= \" .\"\n\tif (details)\n\t\tswitch inputIs\n\t\t{\n\t\t\tcase \"ARRAY\":\n\t\t\t\toutput .= indent . (\"<\" . \".Length>\" . \" = \" . obj.Length)\n\t\t\t\toutput .= indent . (\"<\" . \".Capacity>\" . \" = \" . obj.Capacity)\n\t\t\t\tif (obj.Has(\"Default\"))\n\t\t\t\t\toutput .= indent . (\"<\" . \".Default>\" . \" = \" . obj.Default)\n\t\t\tcase \"MAP\":\n\t\t\t\toutput .= indent . (\"<\" . \".Count>\" . \" = \" . obj.Count)\n\t\t\t\toutput .= indent . (\"<\" . \".Capacity>\" . \" = \" . obj.Capacity)\n\t\t\t\toutput .= indent . (\"<\" . \".CaseSense>\" . \" = \" . obj.CaseSense)\n\t\t\t\tif (obj.Has(\"Default\"))\n\t\t\t\t\toutput .= indent . (\"<\" . \".Default>\" . \" = \" . obj.Default)\n\t\t}\n\t\n\tkeyCount := 0\n\ttry for key, val in ((obj is Map) or (obj is Array)) ? obj : obj.OwnProps()\n\t{\n\t\tkeyCount := A_Index\n\t\tkey := StrReplace(key, \"`t\", \"``t\")\n\t\tkey := StrReplace(key, \"`n\", \"``n\")\n\t\tkey := StrReplace(key, \"`r\", \"``r\")\n\n\t\tswitch inputIS\n\t\t{\n\t\t\tcase \"OBJECT\": key := \".\" . key\n\t\t\tcase \"MAP\":    key := \"['\" . key . \"']\"\n\t\t\tcase \"ARRAY\":  key := \"[\" . key . \"]\"\n\t\t}\n\n\t\tif (isObject(val))\n\t\t\toutput .= object_list_(val, key, indent, details) ;recursive\n\t\telse\n\t\t\toutput .= indent . \"<\" . key . \"> = \" . val\n\t}\n\tif (keyCount = 0)\n\t\toutput := StrReplace(output, inputIs, \"EMPTY \" . inputIs)\n\n\trecursionDepth--\n\treturn output\n}\n",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/(obj).ahk",
			"file_size": 5420,
			"file_write_time": 133211937061672150,
			"settings":
			{
				"buffer_size": 5420,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n\nguiList := Gui(,\"Test - List\"), guiList.Opt(\"+Resize +MinSize250x150\")\nguiList.OnEvent(\"Size\", GuiReSizer) ; assign GuiReSizer to handle all size changes for this Gui\nguiList.Button := {}\nguiList.Button.One := guiList.Add(\"Button\", \"Default\", \"One\")\nguiList.Button.One.X := 10 ; 10 Right of left Margin, Margin to Closest Edge\nguiList.Button.Two := guiList.Add(\"Button\", \"yp\", \"Two\")\nguiList.Button.Two.X := .2 ; 20% Right of left Margin, Margin to Closest Edge\nguiList.Button.Three := guiList.Add(\"Button\", \"yp\", \"Three\")\nguiList.Button.Three.X := -10 ; 10 Left of Right Margin, Margin to Closest Edge\nguiList.Button.Four :=  guiList.Add(\"Button\", \"yp\", \"Four\")\nguiList.Button.Four.Anchor := guiList.Button.Three ; Anchor Four to Three\nguiList.Button.Four.X := -.2 ; 20% Left of Button Three, Closest Edge to Closest Edge\nguiList.ListView := guiList.Add(\"ListView\", \"+Grid -Multi xm r20 w750\", [\"This\", \"That\", \"Other\"])\nguiList.ListView.Function := ListView_Columns ; Call Custom Function to Adjust Column Width\nguiList.ListView.Width := -10 ; 10 from Left Margin, Margin to Closest Edge (Adjust Right Edge of Width to Maintain)\nguiList.ListView.Height := -.40 ; 40% from Bottom Margin, Margin to Closest Edge (Adjust Bottom Edge of Height to Maintain)\nguiList.Button.TopLeft := guiList.Add(\"Button\", \"Default\", \"TopLeft\")\nguiList.Button.TopLeft.X := .20 ; 20% Right of left Margin, Margin to Closest Edge\nguiList.Button.TopLeft.Y := .75 ; 75% From Top Margin, Margin to Closest Edge\nguiList.Button.TopLeft.Width := .20 ; 20% Width\nguiList.Button.TopLeft.Height := 15 ; 15 Height\nguiList.Button.BottomLeft := guiList.Add(\"Button\", \"Default\", \"BottomLeft\")\nguiList.Button.BottomLeft.X := .20 ; 20% Right of left Margin, Margin to OriginX of .5 (Middle)\nguiList.Button.BottomLeft.OriginX := .5 ; X Origin Adjust to 50% (Middle of Button)\nguiList.Button.BottomLeft.Y := -.05 ; 5% From Bottom Margin, Margin to Closest Edge\nguiList.Button.BottomLeft.Width := .25 ; 25% Width\nguiList.Button.BottomLeft.Height := .05 ; 5% Height\nguiList.Button.BottomLeft.MinHeight := 15 ; Minimum Height of 15\nguiList.Button.TopRight := guiList.Add(\"Button\", \"Default\", \"TopRight\")\nguiList.Button.TopRight.X := -.20 ; 20% Left of Right Margin, Margin to Closest Edge\nguiList.Button.TopRight.Y := -.26 ; 26% From Bottom Margin, Margin to Closest Edge\nguiList.Button.TopRight.MaxX := 1200\nguiList.Button.TopRight.Width := 100 ; 100 Width\nguiList.Button.TopRight.Height := 20 ; 20 Height\nguiList.Button.BottomRight := guiList.Add(\"Button\", \"Default\", \"BottomRight\") ; Centered below TopRight Right Edge\nguiList.Button.BottomRight.Anchor := guiList.Button.TopRight ; Anchor BottomRight to TopRight\nguiList.Button.BottomRight.OriginX := .5 ; X Origin Adjust to 50% (Middle of Button)\nguiList.Button.BottomRight.X := 1 ; 1 Right of Anchor, Anchor Edge to OriginX (Middle)\nguiList.Button.BottomRight.Y := .1 ; 10% Below Anchor, Edge to Edge\nguiList.Button.BottomRight.Width := .25 ; 25% Width\nguiList.Button.BottomRight.MinWidth := 75 ; Minimum Width of 75\nguiList.Button.BottomRight.Height := 20 ; 20 Height\n\nListView_Columns(CtrlObj, GuiObj) ; custom called function\n{\n\tCtrlObj.ModifyCol(3, \"AutoHdr\")\n}\n\n#h::guiList.Show\n\nEsc::ExitApp\n\n;{[Function] GuiReSizer\n; Fanatic Guru\n; Version 2023 02 15\n;\n; Update 2023 02 15:  Add more Min Max properties and renamed some properties\n;\n; #Requires AutoHotkey 2.0+\n;\n; Function to Handle the Resizing of Gui and\n; Move and Resize Controls\n;\n;------------------------------------------------\n;\n; Method:\n;   GuiReSizer(GuiObj, WindowMinMax, Width, Height)\n;\n;   Parameters:\n\n;\t1) {GuiObj} \t\tGui Object\n;   2) {WindowMinMax}\tWindow status, 0 = neither minimized nor maximized, 1 = maximized, -1 = minimized\n;   3) {Width}\t\t\tWidth of GuiObj\n;   4) {Height}\t\t\tHeight of GuiObj\n;\n;   \tNormally parameters are passed by a callback from {gui}.OnEvent(\"Size\", GuiReSizer)\n;\n;\tControl Properties:\n; \t\tX\t\t\tX positional offset from margins or anchor object (percentage allowed)\n;\t\tY\t\t\tY positional offset from margins or anchor object (percentage allowed)\n;\t\tOriginX\t\tcontrol origin X defaults to 0 or left side of control, this relocates the origin (percentage allowed)\n;\t\tOriginY\t\tcontrol origin Y defaults to 0 or top side of control, this relocates the origin (percentage allowed)\n;\t\tWidth\t\twidth of control (percentage allowed)\n;\t\tHeight\t\theight of control (percentage allowed)\n;\t\tMinX\t\tmininum X offset\n;\t\tMaxX\t\tmaximum X offset\n;\t\tMinY\t\tminimum Y offset\n;\t\tMaxY\t\tmaximum Y offset\n;\t\tMinWidth\tminimum control width\n;\t\tMaxWidth\tmaximum control width\n;\t\tMinHeight\tminimum control height\n;\t\tMaxHeight\tmaximum control height\n;\t\tAnchor\t\tnormally controls are position in relation to the margins, this positions in relation to another control\n;\t\tFunction\tcustom function that can be called for this control\n;\t\tCleanup\t\tredraw this control each time to cleanup artifacts, normally not requires and causes flickering\n;\n;\t\tWhere pecentage is allowed then a number greater than -1 but less than 1 can be entered.\n;\t\t.5 would be 50% to the right or below, -.25 would be 25% to the left or above.\n;\t\tAn Origin of .5 would be 50% or the center of the control along that axis.\n;\n;\tGui Properties:\n;\t\tInit\t\t{Gui}.Init := true, will cause all controls of the Gui to be redrawn on next function call\n;\nGuiReSizer(GuiObj, WindowMinMax, Width, Height)\n{\n\t; On Initial display of Gui use redraw to cleanup first positioning\n\ttry\n\t\tInit := GuiObj.Init\n\tcatch\n\t\tInit := true\n\n\tif WindowMinMax = -1\n        return\n\n\tFor Hwnd, CtrlObj in GuiObj\n\t{\n\t\tif CtrlObj.HasProp(\"Anchor\")\n\t\t{\n\t\t\tCtrlObj.Anchor.GetPos(&AnchorX, &AnchorY, &AnchorW, &AnchorH)\n\t\t\tAnchored := true\n\t\t}\n\t\telse\n\t\t\tAnchored := false\n\n\t\tCtrlObj.GetPos(&CtrlX, &CtrlY, &CtrlW, &CtrlH)\n\n\t\tif CtrlObj.HasProp(\"Width\")\n\t\t{\n\t\t\t; Check for Propeties: Min Max\n\t\t\tCtrlObj.HasProp(\"MinWidth\") ? MinW := CtrlObj.MinWidth : MinW := 0\n\t\t\tCtrlObj.HasProp(\"MaxWidth\") ? MaxW := CtrlObj.MaxWidth : MaxW := 999999\n\n\t\t\t; Check for Percentage\n\t\t\tIf CtrlObj.Width > -1 and CtrlObj.Width < 1\n\t\t\t\tCtrlW := Width * CtrlObj.Width\n\t\t\telse\n\t\t\t\tCtrlW := CtrlObj.Width\n\t\t\tif CtrlW < 0\n\t\t\t\tCtrlW := Width - CtrlX + CtrlW\n\t\t\tCtrlW := MinMax(CtrlW, MinW, MaxW)\n\t\t}\n\n\t\tif CtrlObj.HasProp(\"OriginX\")\n\t\t{\n\t\t\tIf CtrlObj.OriginX > -1 and CtrlObj.OriginX < 1\n\t\t\t\tOriginX := CtrlW * CtrlObj.OriginX\n\t\t\telse\n\t\t\t\tOriginX := CtrlObj.OriginX\n\t\t}\n\t\telse\n\t\t\tOriginX := 0\n\n\t\tif CtrlObj.HasProp(\"X\")\n\t\t{\n\t\t\t; Check for Propeties: Min Max\n\t\t\tCtrlObj.HasProp(\"MinX\") ? MinX := CtrlObj.MinX : MinX := -999999\n\t\t\tCtrlObj.HasProp(\"MaxX\") ? MaxX := CtrlObj.MaxX : MaxX := 999999\n\n\t\t\tIf CtrlObj.X > -1 and CtrlObj.X < 1\n\t\t\t\tX := Width * CtrlObj.X\n\t\t\telse\n\t\t\t\tX := CtrlObj.X\n\n\t\t\t; Adjust X for Control Width and Which Side\n\t\t\tif Anchored and X < 0\n\t\t\t\tCtrlX := AnchorX - CtrlW + X + OriginX\n\t\t\telse if Anchored and X => 0\n\t\t\t\tCtrlX := AnchorX + AnchorW + X - OriginX\n\t\t\telse if !Anchored and X < 0\n\t\t\t\tCtrlX := Width - CtrlW + X + OriginX\n\t\t\telse ; !Anchored and X => 0\n\t\t\t\tCtrlX := X - OriginX\n\t\t\tCtrlX := MinMax(CtrlX, MinX, MaxX)\n\t\t}\n\n\t\tif CtrlObj.HasProp(\"Height\")\n\t\t{\n\t\t\t; Check for Propeties: Min Max\n\t\t\tCtrlObj.HasProp(\"MinHeight\") ? MinH := CtrlObj.MinHeight : MinH := 0\n\t\t\tCtrlObj.HasProp(\"MaxHeight\") ? MaxH := CtrlObj.MaxHeight : MaxH := 999999\n\n\t\t\t; Check for Percentage\n\t\t\tIf CtrlObj.Height > -1 and CtrlObj.Height < 1\n\t\t\t\tCtrlH := Height * CtrlObj.Height\n\t\t\telse\n\t\t\t\tCtrlH := CtrlObj.Height\n\t\t\tif CtrlH < 0\n\t\t\t\tCtrlH := Height - CtrlY + CtrlH\n\t\t\tCtrlH := MinMax(CtrlH, MinH, MaxH)\n\t\t}\n\n\t\tif CtrlObj.HasProp(\"OriginY\")\n\t\t{\n\t\t\tIf CtrlObj.OriginY > -1 and CtrlObj.OriginY < 1\n\t\t\t\tOriginY := CtrlH * CtrlObj.OriginY\n\t\t\telse\n\t\t\t\tOriginY := CtrlObj.OriginY\n\t\t}\n\t\telse\n\t\t\tOriginY := 0\n\n\t\tif CtrlObj.HasProp(\"Y\")\n\t\t{\n\t\t\t; Check for Propeties: Min Max\n\t\t\tCtrlObj.HasProp(\"MinY\") ? MinY := CtrlObj.MinY : MinY := -999999\n\t\t\tCtrlObj.HasProp(\"MaxY\") ? MaxY := CtrlObj.MaxY : MaxY := 999999\n\n\t\t\t; Check for Percentage\n\t\t\tIf CtrlObj.Y > -1 and CtrlObj.Y < 1\n\t\t\t\tY := Height * CtrlObj.Y\n\t\t\telse\n\t\t\t\tY := CtrlObj.Y\n\n\t\t\t; Adjust Y for Control Height and Which Side\n\t\t\tif Anchored and Y < 0\n\t\t\t\tCtrlY := AnchorY - CtrlH + Y + OriginY\n\t\t\telse if Anchored and Y => 0\n\t\t\t\tCtrlY := AnchorY + AnchorH + Y - OriginY\n\t\t\telse if !Anchored and Y < 0\n\t\t\t\tCtrlY := Height - CtrlH + Y + OriginY\n\t\t\telse ; !Anchored and Y => 0\n\t\t\t\tCtrlY := Y - OriginY\n\t\t\tCtrlY := MinMax(CtrlY, MinY, MaxY)\n\t\t}\n\n\t\t; Move and Size\n\t\tCtrlObj.Move(CtrlX, CtrlY, CtrlW, CtrlH)\n\t\tif Init or (CtrlObj.HasProp(\"Cleanup\") and CtrlObj.Cleanup = true) ; Cleanup on Init\n\t\t\tCtrlObj.Redraw()\n\n\t\tif CtrlObj.HasProp(\"Function\")\n\t\t\tCtrlObj.Function(GuiObj) ; CtrlObj is hidden 'this' first parameter\n\t}\n\n\tGuiObj.Init := false\n\tMinMax(Num, MinNum, MaxNum) => Min(Max(Num, MinNum), MaxNum)\n}\n",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/(guiresizer-ex.ahk",
			"file_size": 8744,
			"file_write_time": 133211939746717845,
			"settings":
			{
				"buffer_size": 8744,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAI0MAAAAAAAAjgwAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI0MAAAAAAAAjQwAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"paste_and_indent",
					null,
					"AQAAAI4MAAAAAAAAKCIAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAI4MAAAAAAAAjgwAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAACgiAAAAAAAAKyIAAAAAAAAAAAAAjgwAAAAAAACQDAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgiAAAAAAAAjgwAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAI4MAAAAAAAAjgwAAAAAAAACAAAALyooIgAAAAAAACgiAAAAAAAAAwAAAAoqLw",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoiAAAAAAAAkAwAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "/D/(github)-MAINS/2All-My-Lib/dllsolver/dllsolver.ahk",
			"settings":
			{
				"buffer_size": 7660,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "class Model\n{\n   __New(MaxCount, MsgNumber := 0x5555) {\n      this.max_count := MaxCount\n      this.msg_number := MsgNumber\n      this.gui_title := \"MVC Example\"\n      this.gui_width := 250\n      this.count := 0\n      SetTimer ObjBindMethod(this, \"Count_Monitor\")\n   }\n   \n   Count_Monitor() {\n      if this.count = this.max_count {\n         SetTimer , 0\n         this.Post_Message()\n      }\n   }\n   \n   Post_Message(wParam := 0, lParam := 0) {\n      SetTitleMatchMode 2\n      DetectHiddenWindows true\n      PostMessage this.msg_number, wParam, lParam, A_ScriptHwnd\n      DetectHiddenWindows false\n   }\n}\n\nclass View extends Gui\n{\n   __New(controller) {\n      super.__New(\"-MinimizeBox -MaximizeBox\", controller.model.gui_title)\n      \n      this.button := super.Add(\"Button\", \"x100 Default\", \"My Button\")\n      this.button.OnEvent(\"Click\", ObjBindMethod(controller, \"Button_Click\"))\n      \n      super.Show(\"w\" controller.model.gui_width)\n      super.OnEvent(\"Close\",  ObjBindMethod(controller, \"Gui_Close\"))\n      super.OnEvent(\"Escape\", ObjBindMethod(controller, \"Gui_Close\"))\n      \n      OnMessage(controller.model.msg_number, ObjBindMethod(this, \"Msg_Monitor\"), -1)\n   }\n   \n   Msg_Monitor(*) {\n      this.button.Text := \"Done\"\n      this.button.Enabled := false\n   }\n}\n\nclass Controller\n{\n   __New(model) {\n      this.model := model\n      OnMessage(this.model.msg_number, ObjBindMethod(this, \"Msg_Monitor\"))\n   }\n   \n   Msg_Monitor(*) {\n      MsgBox \"The button was clicked the maximum number of times (\" this.model.count \").`n`nThe script will now exit.\"\n      ExitApp\n   }\n   \n   Button_Click(GuiCtrl, Info) {\n      GuiCtrl.Gui.Opt(\"+OwnDialogs\")\n      MsgBox \"You now have clicked the button \" (++this.model.count) \" time(s).\"\n   }\n   \n   Gui_Close(Gui) {\n      Gui.Opt(\"+OwnDialogs\")\n      MsgBox \"The button was clicked \" this.model.count \" time(s) in total.`n`nThe script will now exit.\"\n      ExitApp\n   }\n}\n\nView(Controller(Model(3)))\n",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/mvc.ahk",
			"file_size": 1950,
			"file_write_time": 133211943808640609,
			"settings":
			{
				"buffer_size": 1950,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#include CoolDownTimer.ahk\n\nclass ParentModel {\n    __New(w, h, title) {\n        this.w := w\n        this.h := h\n        this.title := title\n   }\n}\nclass ParentController {\n    __New(model) {\n        this.model := model\n    }\n    Gui_Close(Gui) {\n        Gui.Destroy()\n    }\n}\nclass ParentView extends Gui {\n    __New(controller) {\n        super.__New(, controller.model.title)\n        super.Show(\"w\" controller.model.w \" h\" controller.model.h)\n        super.OnEvent(\"Close\",  ObjBindMethod(controller, \"Gui_Close\"))\n        super.OnEvent(\"Escape\", ObjBindMethod(controller, \"Gui_Close\"))\n    }\n}\n\nclass ChildModel {\n    __New(x, y, w, icon, parent) {\n        this.x := x\n        this.y := y\n        this.w := w\n        this.h := w\n        this.bar := {h:10, time:800, color:\"White\", backColor:\"Gray\"}\n        this.icon := {w:36, h:36, file:icon}\n        this.parent := parent\n    }\n}\nclass ChildController {\n    __New(model) {\n        this.model := model\n    }\n    LoadIcon(GuiCtrl, *) {\n        if icon := FileSelect(3, \"./\" , \"Select an Icon\", \"*.png; *.ico\")\n            GuiCtrl.Value := this.model.icon.file := icon\n   }\n}\nclass ChildView extends Gui {\n    __New(controller) {\n        super.__New(\"-Border -Caption -SysMenu +ToolWindow -0x800000 +E0x08000000 +Parent\" controller.model.parent.hwnd)\n        super.MarginX := (controller.model.w - controller.model.icon.w) // 2\n        super.MarginY := (controller.model.h - controller.model.icon.h - controller.model.bar.h) // 2\n        pic := super.Add(\"Picture\", \"xm ym w\" controller.model.icon.w \" h\" controller.model.icon.h, controller.model.icon.file)\n        bar := super.Add(\"Progress\", \"xm y\" (controller.model.h - controller.model.bar.h) \" w\" controller.model.icon.w \" h\" controller.model.bar.h \" c\" controller.model.bar.color \" Background\" controller.model.bar.backColor)\n        super.Show(\"x\" controller.model.x \" y\" controller.model.y \" w\" controller.model.w \" h\" controller.model.h)\n        pic.OnEvent(\"Click\", ObjBindMethod(CoolDownTimer(controller.model.bar.time, bar), \"Start\"))\n        pic.OnEvent(\"ContextMenu\", ObjBindMethod(controller, \"LoadIcon\"))\n   }\n}\n\nParentGui := ParentView(ParentController(ParentModel(300, 300, \"Parent\")))\nChildView(ChildController(ChildModel( 0,  0, 50, \"Icon.ico\", ParentGui)))\nChildView(ChildController(ChildModel(50,  0, 50, \"Icon.ico\", ParentGui)))\nChildView(ChildController(ChildModel( 0, 50, 50, \"Icon.ico\", ParentGui)))\nChildView(ChildController(ChildModel(50, 50, 50, \"Icon.ico\", ParentGui)))",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/mvc2.ahk",
			"file_size": 2502,
			"file_write_time": 133211945392460783,
			"settings":
			{
				"buffer_size": 2502,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"paste_and_indent",
					null,
					"AgAAAAAAAAAAAAAAxgkAAAAAAAAAAAAAxgkAAAAAAADGCQAAAAAAAJ4HAABjbGFzcyBNb2RlbAp7CiAgIF9fTmV3KE1heENvdW50LCBNc2dOdW1iZXIgOj0gMHg1NTU1KSB7CiAgICAgIHRoaXMubWF4X2NvdW50IDo9IE1heENvdW50CiAgICAgIHRoaXMubXNnX251bWJlciA6PSBNc2dOdW1iZXIKICAgICAgdGhpcy5ndWlfdGl0bGUgOj0gIk1WQyBFeGFtcGxlIgogICAgICB0aGlzLmd1aV93aWR0aCA6PSAyNTAKICAgICAgdGhpcy5jb3VudCA6PSAwCiAgICAgIFNldFRpbWVyIE9iakJpbmRNZXRob2QodGhpcywgIkNvdW50X01vbml0b3IiKQogICB9CiAgIAogICBDb3VudF9Nb25pdG9yKCkgewogICAgICBpZiB0aGlzLmNvdW50ID0gdGhpcy5tYXhfY291bnQgewogICAgICAgICBTZXRUaW1lciAsIDAKICAgICAgICAgdGhpcy5Qb3N0X01lc3NhZ2UoKQogICAgICB9CiAgIH0KICAgCiAgIFBvc3RfTWVzc2FnZSh3UGFyYW0gOj0gMCwgbFBhcmFtIDo9IDApIHsKICAgICAgU2V0VGl0bGVNYXRjaE1vZGUgMgogICAgICBEZXRlY3RIaWRkZW5XaW5kb3dzIHRydWUKICAgICAgUG9zdE1lc3NhZ2UgdGhpcy5tc2dfbnVtYmVyLCB3UGFyYW0sIGxQYXJhbSwgQV9TY3JpcHRId25kCiAgICAgIERldGVjdEhpZGRlbldpbmRvd3MgZmFsc2UKICAgfQp9CgpjbGFzcyBWaWV3IGV4dGVuZHMgR3VpCnsKICAgX19OZXcoY29udHJvbGxlcikgewogICAgICBzdXBlci5fX05ldygiLU1pbmltaXplQm94IC1NYXhpbWl6ZUJveCIsIGNvbnRyb2xsZXIubW9kZWwuZ3VpX3RpdGxlKQogICAgICAKICAgICAgdGhpcy5idXR0b24gOj0gc3VwZXIuQWRkKCJCdXR0b24iLCAieDEwMCBEZWZhdWx0IiwgIk15IEJ1dHRvbiIpCiAgICAgIHRoaXMuYnV0dG9uLk9uRXZlbnQoIkNsaWNrIiwgT2JqQmluZE1ldGhvZChjb250cm9sbGVyLCAiQnV0dG9uX0NsaWNrIikpCiAgICAgIAogICAgICBzdXBlci5TaG93KCJ3IiBjb250cm9sbGVyLm1vZGVsLmd1aV93aWR0aCkKICAgICAgc3VwZXIuT25FdmVudCgiQ2xvc2UiLCAgT2JqQmluZE1ldGhvZChjb250cm9sbGVyLCAiR3VpX0Nsb3NlIikpCiAgICAgIHN1cGVyLk9uRXZlbnQoIkVzY2FwZSIsIE9iakJpbmRNZXRob2QoY29udHJvbGxlciwgIkd1aV9DbG9zZSIpKQogICAgICAKICAgICAgT25NZXNzYWdlKGNvbnRyb2xsZXIubW9kZWwubXNnX251bWJlciwgT2JqQmluZE1ldGhvZCh0aGlzLCAiTXNnX01vbml0b3IiKSwgLTEpCiAgIH0KICAgCiAgIE1zZ19Nb25pdG9yKCopIHsKICAgICAgdGhpcy5idXR0b24uVGV4dCA6PSAiRG9uZSIKICAgICAgdGhpcy5idXR0b24uRW5hYmxlZCA6PSBmYWxzZQogICB9Cn0KCmNsYXNzIENvbnRyb2xsZXIKewogICBfX05ldyhtb2RlbCkgewogICAgICB0aGlzLm1vZGVsIDo9IG1vZGVsCiAgICAgIE9uTWVzc2FnZSh0aGlzLm1vZGVsLm1zZ19udW1iZXIsIE9iakJpbmRNZXRob2QodGhpcywgIk1zZ19Nb25pdG9yIikpCiAgIH0KICAgCiAgIE1zZ19Nb25pdG9yKCopIHsKICAgICAgTXNnQm94ICJUaGUgYnV0dG9uIHdhcyBjbGlja2VkIHRoZSBtYXhpbXVtIG51bWJlciBvZiB0aW1lcyAoIiB0aGlzLm1vZGVsLmNvdW50ICIpLmBuYG5UaGUgc2NyaXB0IHdpbGwgbm93IGV4aXQuIgogICAgICBFeGl0QXBwCiAgIH0KICAgCiAgIEJ1dHRvbl9DbGljayhHdWlDdHJsLCBJbmZvKSB7CiAgICAgIEd1aUN0cmwuR3VpLk9wdCgiK093bkRpYWxvZ3MiKQogICAgICBNc2dCb3ggIllvdSBub3cgaGF2ZSBjbGlja2VkIHRoZSBidXR0b24gIiAoKyt0aGlzLm1vZGVsLmNvdW50KSAiIHRpbWUocykuIgogICB9CiAgIAogICBHdWlfQ2xvc2UoR3VpKSB7CiAgICAgIEd1aS5PcHQoIitPd25EaWFsb2dzIikKICAgICAgTXNnQm94ICJUaGUgYnV0dG9uIHdhcyBjbGlja2VkICIgdGhpcy5tb2RlbC5jb3VudCAiIHRpbWUocykgaW4gdG90YWwuYG5gblRoZSBzY3JpcHQgd2lsbCBub3cgZXhpdC4iCiAgICAgIEV4aXRBcHAKICAgfQp9CgpWaWV3KENvbnRyb2xsZXIoTW9kZWwoMykpKQo",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAngcAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"paste_and_indent",
					null,
					"AgAAAAAAAAAAAAAAxgkAAAAAAAAAAAAAxgkAAAAAAADGCQAAAAAAAMYJAAAjaW5jbHVkZSBDb29sRG93blRpbWVyLmFoawoKY2xhc3MgUGFyZW50TW9kZWwgewogICAgX19OZXcodywgaCwgdGl0bGUpIHsKICAgICAgICB0aGlzLncgOj0gdwogICAgICAgIHRoaXMuaCA6PSBoCiAgICAgICAgdGhpcy50aXRsZSA6PSB0aXRsZQogICB9Cn0KY2xhc3MgUGFyZW50Q29udHJvbGxlciB7CiAgICBfX05ldyhtb2RlbCkgewogICAgICAgIHRoaXMubW9kZWwgOj0gbW9kZWwKICAgIH0KICAgIEd1aV9DbG9zZShHdWkpIHsKICAgICAgICBHdWkuRGVzdHJveSgpCiAgICB9Cn0KY2xhc3MgUGFyZW50VmlldyBleHRlbmRzIEd1aSB7CiAgICBfX05ldyhjb250cm9sbGVyKSB7CiAgICAgICAgc3VwZXIuX19OZXcoLCBjb250cm9sbGVyLm1vZGVsLnRpdGxlKQogICAgICAgIHN1cGVyLlNob3coInciIGNvbnRyb2xsZXIubW9kZWwudyAiIGgiIGNvbnRyb2xsZXIubW9kZWwuaCkKICAgICAgICBzdXBlci5PbkV2ZW50KCJDbG9zZSIsICBPYmpCaW5kTWV0aG9kKGNvbnRyb2xsZXIsICJHdWlfQ2xvc2UiKSkKICAgICAgICBzdXBlci5PbkV2ZW50KCJFc2NhcGUiLCBPYmpCaW5kTWV0aG9kKGNvbnRyb2xsZXIsICJHdWlfQ2xvc2UiKSkKICAgIH0KfQoKY2xhc3MgQ2hpbGRNb2RlbCB7CiAgICBfX05ldyh4LCB5LCB3LCBpY29uLCBwYXJlbnQpIHsKICAgICAgICB0aGlzLnggOj0geAogICAgICAgIHRoaXMueSA6PSB5CiAgICAgICAgdGhpcy53IDo9IHcKICAgICAgICB0aGlzLmggOj0gdwogICAgICAgIHRoaXMuYmFyIDo9IHtoOjEwLCB0aW1lOjgwMCwgY29sb3I6IldoaXRlIiwgYmFja0NvbG9yOiJHcmF5In0KICAgICAgICB0aGlzLmljb24gOj0ge3c6MzYsIGg6MzYsIGZpbGU6aWNvbn0KICAgICAgICB0aGlzLnBhcmVudCA6PSBwYXJlbnQKICAgIH0KfQpjbGFzcyBDaGlsZENvbnRyb2xsZXIgewogICAgX19OZXcobW9kZWwpIHsKICAgICAgICB0aGlzLm1vZGVsIDo9IG1vZGVsCiAgICB9CiAgICBMb2FkSWNvbihHdWlDdHJsLCAqKSB7CiAgICAgICAgaWYgaWNvbiA6PSBGaWxlU2VsZWN0KDMsICIuLyIgLCAiU2VsZWN0IGFuIEljb24iLCAiKi5wbmc7ICouaWNvIikKICAgICAgICAgICAgR3VpQ3RybC5WYWx1ZSA6PSB0aGlzLm1vZGVsLmljb24uZmlsZSA6PSBpY29uCiAgIH0KfQpjbGFzcyBDaGlsZFZpZXcgZXh0ZW5kcyBHdWkgewogICAgX19OZXcoY29udHJvbGxlcikgewogICAgICAgIHN1cGVyLl9fTmV3KCItQm9yZGVyIC1DYXB0aW9uIC1TeXNNZW51ICtUb29sV2luZG93IC0weDgwMDAwMCArRTB4MDgwMDAwMDAgK1BhcmVudCIgY29udHJvbGxlci5tb2RlbC5wYXJlbnQuaHduZCkKICAgICAgICBzdXBlci5NYXJnaW5YIDo9IChjb250cm9sbGVyLm1vZGVsLncgLSBjb250cm9sbGVyLm1vZGVsLmljb24udykgLy8gMgogICAgICAgIHN1cGVyLk1hcmdpblkgOj0gKGNvbnRyb2xsZXIubW9kZWwuaCAtIGNvbnRyb2xsZXIubW9kZWwuaWNvbi5oIC0gY29udHJvbGxlci5tb2RlbC5iYXIuaCkgLy8gMgogICAgICAgIHBpYyA6PSBzdXBlci5BZGQoIlBpY3R1cmUiLCAieG0geW0gdyIgY29udHJvbGxlci5tb2RlbC5pY29uLncgIiBoIiBjb250cm9sbGVyLm1vZGVsLmljb24uaCwgY29udHJvbGxlci5tb2RlbC5pY29uLmZpbGUpCiAgICAgICAgYmFyIDo9IHN1cGVyLkFkZCgiUHJvZ3Jlc3MiLCAieG0geSIgKGNvbnRyb2xsZXIubW9kZWwuaCAtIGNvbnRyb2xsZXIubW9kZWwuYmFyLmgpICIgdyIgY29udHJvbGxlci5tb2RlbC5pY29uLncgIiBoIiBjb250cm9sbGVyLm1vZGVsLmJhci5oICIgYyIgY29udHJvbGxlci5tb2RlbC5iYXIuY29sb3IgIiBCYWNrZ3JvdW5kIiBjb250cm9sbGVyLm1vZGVsLmJhci5iYWNrQ29sb3IpCiAgICAgICAgc3VwZXIuU2hvdygieCIgY29udHJvbGxlci5tb2RlbC54ICIgeSIgY29udHJvbGxlci5tb2RlbC55ICIgdyIgY29udHJvbGxlci5tb2RlbC53ICIgaCIgY29udHJvbGxlci5tb2RlbC5oKQogICAgICAgIHBpYy5PbkV2ZW50KCJDbGljayIsIE9iakJpbmRNZXRob2QoQ29vbERvd25UaW1lcihjb250cm9sbGVyLm1vZGVsLmJhci50aW1lLCBiYXIpLCAiU3RhcnQiKSkKICAgICAgICBwaWMuT25FdmVudCgiQ29udGV4dE1lbnUiLCBPYmpCaW5kTWV0aG9kKGNvbnRyb2xsZXIsICJMb2FkSWNvbiIpKQogICB9Cn0KClBhcmVudEd1aSA6PSBQYXJlbnRWaWV3KFBhcmVudENvbnRyb2xsZXIoUGFyZW50TW9kZWwoMzAwLCAzMDAsICJQYXJlbnQiKSkpCkNoaWxkVmlldyhDaGlsZENvbnRyb2xsZXIoQ2hpbGRNb2RlbCggMCwgIDAsIDUwLCAiSWNvbi5pY28iLCBQYXJlbnRHdWkpKSkKQ2hpbGRWaWV3KENoaWxkQ29udHJvbGxlcihDaGlsZE1vZGVsKDUwLCAgMCwgNTAsICJJY29uLmljbyIsIFBhcmVudEd1aSkpKQpDaGlsZFZpZXcoQ2hpbGRDb250cm9sbGVyKENoaWxkTW9kZWwoIDAsIDUwLCA1MCwgIkljb24uaWNvIiwgUGFyZW50R3VpKSkpCkNoaWxkVmlldyhDaGlsZENvbnRyb2xsZXIoQ2hpbGRNb2RlbCg1MCwgNTAsIDUwLCAiSWNvbi5pY28iLCBQYXJlbnRHdWkpKSk",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAxgkAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"contents": "class CoolDownTimer {\n    __New(coolDowninMS,progressBar) {\n        this.CooldownMS := coolDowninMS\n        this.step := 1\n        this.interval := this.CooldownMS / 100\n        this.pBar:= progressBar\n        this.intervalCount := 0\n        this.startMS := 0\n        this.count := 0\n        this.timer := ObjBindMethod(this, \"Tick\")\n    }\n    Start(GuiCrl,info) {\n        SetTimer this.timer, this.interval      \n\n        this.pBar.Value := 100\n        this.startMS := A_TickCount\n    }\n    Stop() {\n\n        this.pBar.Value := 0\n        SetTimer this.timer, 0\n        this.intervalCount := 0\n    }\n    Tick() {\n\n        this.count := A_TickCount - this.startMS\n        this.pBar.Value := Round(100-(this.count/this.CooldownMS * 100))\n        if this.count >= this.CooldownMS{\n            this.stop\n            }\n    }\n    SetCD(newTimeInMS){\n        this.CooldownMS := newTimeInMS\n    }\n}",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/cooldowntimer.ahk",
			"file_size": 890,
			"file_write_time": 133211945086903507,
			"settings":
			{
				"buffer_size": 890,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"paste_and_indent",
					null,
					"AgAAAAAAAAAAAAAAegMAAAAAAAAAAAAAegMAAAAAAAB6AwAAAAAAAMYJAAAjaW5jbHVkZSBDb29sRG93blRpbWVyLmFoawoKY2xhc3MgUGFyZW50TW9kZWwgewogICAgX19OZXcodywgaCwgdGl0bGUpIHsKICAgICAgICB0aGlzLncgOj0gdwogICAgICAgIHRoaXMuaCA6PSBoCiAgICAgICAgdGhpcy50aXRsZSA6PSB0aXRsZQogICB9Cn0KY2xhc3MgUGFyZW50Q29udHJvbGxlciB7CiAgICBfX05ldyhtb2RlbCkgewogICAgICAgIHRoaXMubW9kZWwgOj0gbW9kZWwKICAgIH0KICAgIEd1aV9DbG9zZShHdWkpIHsKICAgICAgICBHdWkuRGVzdHJveSgpCiAgICB9Cn0KY2xhc3MgUGFyZW50VmlldyBleHRlbmRzIEd1aSB7CiAgICBfX05ldyhjb250cm9sbGVyKSB7CiAgICAgICAgc3VwZXIuX19OZXcoLCBjb250cm9sbGVyLm1vZGVsLnRpdGxlKQogICAgICAgIHN1cGVyLlNob3coInciIGNvbnRyb2xsZXIubW9kZWwudyAiIGgiIGNvbnRyb2xsZXIubW9kZWwuaCkKICAgICAgICBzdXBlci5PbkV2ZW50KCJDbG9zZSIsICBPYmpCaW5kTWV0aG9kKGNvbnRyb2xsZXIsICJHdWlfQ2xvc2UiKSkKICAgICAgICBzdXBlci5PbkV2ZW50KCJFc2NhcGUiLCBPYmpCaW5kTWV0aG9kKGNvbnRyb2xsZXIsICJHdWlfQ2xvc2UiKSkKICAgIH0KfQoKY2xhc3MgQ2hpbGRNb2RlbCB7CiAgICBfX05ldyh4LCB5LCB3LCBpY29uLCBwYXJlbnQpIHsKICAgICAgICB0aGlzLnggOj0geAogICAgICAgIHRoaXMueSA6PSB5CiAgICAgICAgdGhpcy53IDo9IHcKICAgICAgICB0aGlzLmggOj0gdwogICAgICAgIHRoaXMuYmFyIDo9IHtoOjEwLCB0aW1lOjgwMCwgY29sb3I6IldoaXRlIiwgYmFja0NvbG9yOiJHcmF5In0KICAgICAgICB0aGlzLmljb24gOj0ge3c6MzYsIGg6MzYsIGZpbGU6aWNvbn0KICAgICAgICB0aGlzLnBhcmVudCA6PSBwYXJlbnQKICAgIH0KfQpjbGFzcyBDaGlsZENvbnRyb2xsZXIgewogICAgX19OZXcobW9kZWwpIHsKICAgICAgICB0aGlzLm1vZGVsIDo9IG1vZGVsCiAgICB9CiAgICBMb2FkSWNvbihHdWlDdHJsLCAqKSB7CiAgICAgICAgaWYgaWNvbiA6PSBGaWxlU2VsZWN0KDMsICIuLyIgLCAiU2VsZWN0IGFuIEljb24iLCAiKi5wbmc7ICouaWNvIikKICAgICAgICAgICAgR3VpQ3RybC5WYWx1ZSA6PSB0aGlzLm1vZGVsLmljb24uZmlsZSA6PSBpY29uCiAgIH0KfQpjbGFzcyBDaGlsZFZpZXcgZXh0ZW5kcyBHdWkgewogICAgX19OZXcoY29udHJvbGxlcikgewogICAgICAgIHN1cGVyLl9fTmV3KCItQm9yZGVyIC1DYXB0aW9uIC1TeXNNZW51ICtUb29sV2luZG93IC0weDgwMDAwMCArRTB4MDgwMDAwMDAgK1BhcmVudCIgY29udHJvbGxlci5tb2RlbC5wYXJlbnQuaHduZCkKICAgICAgICBzdXBlci5NYXJnaW5YIDo9IChjb250cm9sbGVyLm1vZGVsLncgLSBjb250cm9sbGVyLm1vZGVsLmljb24udykgLy8gMgogICAgICAgIHN1cGVyLk1hcmdpblkgOj0gKGNvbnRyb2xsZXIubW9kZWwuaCAtIGNvbnRyb2xsZXIubW9kZWwuaWNvbi5oIC0gY29udHJvbGxlci5tb2RlbC5iYXIuaCkgLy8gMgogICAgICAgIHBpYyA6PSBzdXBlci5BZGQoIlBpY3R1cmUiLCAieG0geW0gdyIgY29udHJvbGxlci5tb2RlbC5pY29uLncgIiBoIiBjb250cm9sbGVyLm1vZGVsLmljb24uaCwgY29udHJvbGxlci5tb2RlbC5pY29uLmZpbGUpCiAgICAgICAgYmFyIDo9IHN1cGVyLkFkZCgiUHJvZ3Jlc3MiLCAieG0geSIgKGNvbnRyb2xsZXIubW9kZWwuaCAtIGNvbnRyb2xsZXIubW9kZWwuYmFyLmgpICIgdyIgY29udHJvbGxlci5tb2RlbC5pY29uLncgIiBoIiBjb250cm9sbGVyLm1vZGVsLmJhci5oICIgYyIgY29udHJvbGxlci5tb2RlbC5iYXIuY29sb3IgIiBCYWNrZ3JvdW5kIiBjb250cm9sbGVyLm1vZGVsLmJhci5iYWNrQ29sb3IpCiAgICAgICAgc3VwZXIuU2hvdygieCIgY29udHJvbGxlci5tb2RlbC54ICIgeSIgY29udHJvbGxlci5tb2RlbC55ICIgdyIgY29udHJvbGxlci5tb2RlbC53ICIgaCIgY29udHJvbGxlci5tb2RlbC5oKQogICAgICAgIHBpYy5PbkV2ZW50KCJDbGljayIsIE9iakJpbmRNZXRob2QoQ29vbERvd25UaW1lcihjb250cm9sbGVyLm1vZGVsLmJhci50aW1lLCBiYXIpLCAiU3RhcnQiKSkKICAgICAgICBwaWMuT25FdmVudCgiQ29udGV4dE1lbnUiLCBPYmpCaW5kTWV0aG9kKGNvbnRyb2xsZXIsICJMb2FkSWNvbiIpKQogICB9Cn0KClBhcmVudEd1aSA6PSBQYXJlbnRWaWV3KFBhcmVudENvbnRyb2xsZXIoUGFyZW50TW9kZWwoMzAwLCAzMDAsICJQYXJlbnQiKSkpCkNoaWxkVmlldyhDaGlsZENvbnRyb2xsZXIoQ2hpbGRNb2RlbCggMCwgIDAsIDUwLCAiSWNvbi5pY28iLCBQYXJlbnRHdWkpKSkKQ2hpbGRWaWV3KENoaWxkQ29udHJvbGxlcihDaGlsZE1vZGVsKDUwLCAgMCwgNTAsICJJY29uLmljbyIsIFBhcmVudEd1aSkpKQpDaGlsZFZpZXcoQ2hpbGRDb250cm9sbGVyKENoaWxkTW9kZWwoIDAsIDUwLCA1MCwgIkljb24uaWNvIiwgUGFyZW50R3VpKSkpCkNoaWxkVmlldyhDaGlsZENvbnRyb2xsZXIoQ2hpbGRNb2RlbCg1MCwgNTAsIDUwLCAiSWNvbi5pY28iLCBQYXJlbnRHdWkpKSk",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAxgkAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"contents": ";{[Function] GuiReSizer\n; Fanatic Guru\n; Version 2023 02 15\n;\n; Update 2023 02 15:  Add more Min Max properties and renamed some properties\n;\n; #Requires AutoHotkey 2.0+\n;\n; Function to Handle the Resizing of Gui and\n; Move and Resize Controls\n;\n;------------------------------------------------\n;\n; Method:\n;   GuiReSizer(GuiObj, WindowMinMax, Width, Height)\n;\n;   Parameters:\n\n;\t1) {GuiObj} \t\tGui Object\n;   2) {WindowMinMax}\tWindow status, 0 = neither minimized nor maximized, 1 = maximized, -1 = minimized\n;   3) {Width}\t\t\tWidth of GuiObj\n;   4) {Height}\t\t\tHeight of GuiObj\n;\n;   \tNormally parameters are passed by a callback from {gui}.OnEvent(\"Size\", GuiReSizer)\n;\n;\tControl Properties:\n; \t\tX\t\t\tX positional offset from margins or anchor object (percentage allowed)\n;\t\tY\t\t\tY positional offset from margins or anchor object (percentage allowed)\n;\t\tOriginX\t\tcontrol origin X defaults to 0 or left side of control, this relocates the origin (percentage allowed)\n;\t\tOriginY\t\tcontrol origin Y defaults to 0 or top side of control, this relocates the origin (percentage allowed)\n;\t\tWidth\t\twidth of control (percentage allowed)\n;\t\tHeight\t\theight of control (percentage allowed)\n;\t\tMinX\t\tmininum X offset\n;\t\tMaxX\t\tmaximum X offset\n;\t\tMinY\t\tminimum Y offset\n;\t\tMaxY\t\tmaximum Y offset\n;\t\tMinWidth\tminimum control width\n;\t\tMaxWidth\tmaximum control width\n;\t\tMinHeight\tminimum control height\n;\t\tMaxHeight\tmaximum control height\n;\t\tAnchor\t\tnormally controls are position in relation to the margins, this positions in relation to another control\n;\t\tFunction\tcustom function that can be called for this control\n;\t\tCleanup\t\tredraw this control each time to cleanup artifacts, normally not requires and causes flickering\n;\n;\t\tWhere pecentage is allowed then a number greater than -1 but less than 1 can be entered.\n;\t\t.5 would be 50% to the right or below, -.25 would be 25% to the left or above.\n;\t\tAn Origin of .5 would be 50% or the center of the control along that axis.\n;\n;\tGui Properties:\n;\t\tInit\t\t{Gui}.Init := true, will cause all controls of the Gui to be redrawn on next function call\n;\nGuiReSizer(GuiObj, WindowMinMax, Width, Height)\n{\n\t; On Initial display of Gui use redraw to cleanup first positioning\n\ttry\n\t\tInit := GuiObj.Init\n\tcatch\n\t\tInit := true\n\n\tif WindowMinMax = -1\n        return\n\n\tFor Hwnd, CtrlObj in GuiObj\n\t{\n\t\tif CtrlObj.HasProp(\"Anchor\")\n\t\t{\n\t\t\tCtrlObj.Anchor.GetPos(&AnchorX, &AnchorY, &AnchorW, &AnchorH)\n\t\t\tAnchored := true\n\t\t}\n\t\telse\n\t\t\tAnchored := false\n\n\t\tCtrlObj.GetPos(&CtrlX, &CtrlY, &CtrlW, &CtrlH)\n\n\t\tif CtrlObj.HasProp(\"Width\")\n\t\t{\n\t\t\t; Check for Propeties: Min Max\n\t\t\tCtrlObj.HasProp(\"MinWidth\") ? MinW := CtrlObj.MinWidth : MinW := 0\n\t\t\tCtrlObj.HasProp(\"MaxWidth\") ? MaxW := CtrlObj.MaxWidth : MaxW := 999999\n\n\t\t\t; Check for Percentage\n\t\t\tIf CtrlObj.Width > -1 and CtrlObj.Width < 1\n\t\t\t\tCtrlW := Width * CtrlObj.Width\n\t\t\telse\n\t\t\t\tCtrlW := CtrlObj.Width\n\t\t\tif CtrlW < 0\n\t\t\t\tCtrlW := Width - CtrlX + CtrlW\n\t\t\tCtrlW := MinMax(CtrlW, MinW, MaxW)\n\t\t}\n\n\t\tif CtrlObj.HasProp(\"OriginX\")\n\t\t{\n\t\t\tIf CtrlObj.OriginX > -1 and CtrlObj.OriginX < 1\n\t\t\t\tOriginX := CtrlW * CtrlObj.OriginX\n\t\t\telse\n\t\t\t\tOriginX := CtrlObj.OriginX\n\t\t}\n\t\telse\n\t\t\tOriginX := 0\n\n\t\tif CtrlObj.HasProp(\"X\")\n\t\t{\n\t\t\t; Check for Propeties: Min Max\n\t\t\tCtrlObj.HasProp(\"MinX\") ? MinX := CtrlObj.MinX : MinX := -999999\n\t\t\tCtrlObj.HasProp(\"MaxX\") ? MaxX := CtrlObj.MaxX : MaxX := 999999\n\n\t\t\tIf CtrlObj.X > -1 and CtrlObj.X < 1\n\t\t\t\tX := Width * CtrlObj.X\n\t\t\telse\n\t\t\t\tX := CtrlObj.X\n\n\t\t\t; Adjust X for Control Width and Which Side\n\t\t\tif Anchored and X < 0\n\t\t\t\tCtrlX := AnchorX - CtrlW + X + OriginX\n\t\t\telse if Anchored and X => 0\n\t\t\t\tCtrlX := AnchorX + AnchorW + X - OriginX\n\t\t\telse if !Anchored and X < 0\n\t\t\t\tCtrlX := Width - CtrlW + X + OriginX\n\t\t\telse ; !Anchored and X => 0\n\t\t\t\tCtrlX := X - OriginX\n\t\t\tCtrlX := MinMax(CtrlX, MinX, MaxX)\n\t\t}\n\n\t\tif CtrlObj.HasProp(\"Height\")\n\t\t{\n\t\t\t; Check for Propeties: Min Max\n\t\t\tCtrlObj.HasProp(\"MinHeight\") ? MinH := CtrlObj.MinHeight : MinH := 0\n\t\t\tCtrlObj.HasProp(\"MaxHeight\") ? MaxH := CtrlObj.MaxHeight : MaxH := 999999\n\n\t\t\t; Check for Percentage\n\t\t\tIf CtrlObj.Height > -1 and CtrlObj.Height < 1\n\t\t\t\tCtrlH := Height * CtrlObj.Height\n\t\t\telse\n\t\t\t\tCtrlH := CtrlObj.Height\n\t\t\tif CtrlH < 0\n\t\t\t\tCtrlH := Height - CtrlY + CtrlH\n\t\t\tCtrlH := MinMax(CtrlH, MinH, MaxH)\n\t\t}\n\n\t\tif CtrlObj.HasProp(\"OriginY\")\n\t\t{\n\t\t\tIf CtrlObj.OriginY > -1 and CtrlObj.OriginY < 1\n\t\t\t\tOriginY := CtrlH * CtrlObj.OriginY\n\t\t\telse\n\t\t\t\tOriginY := CtrlObj.OriginY\n\t\t}\n\t\telse\n\t\t\tOriginY := 0\n\n\t\tif CtrlObj.HasProp(\"Y\")\n\t\t{\n\t\t\t; Check for Propeties: Min Max\n\t\t\tCtrlObj.HasProp(\"MinY\") ? MinY := CtrlObj.MinY : MinY := -999999\n\t\t\tCtrlObj.HasProp(\"MaxY\") ? MaxY := CtrlObj.MaxY : MaxY := 999999\n\n\t\t\t; Check for Percentage\n\t\t\tIf CtrlObj.Y > -1 and CtrlObj.Y < 1\n\t\t\t\tY := Height * CtrlObj.Y\n\t\t\telse\n\t\t\t\tY := CtrlObj.Y\n\n\t\t\t; Adjust Y for Control Height and Which Side\n\t\t\tif Anchored and Y < 0\n\t\t\t\tCtrlY := AnchorY - CtrlH + Y + OriginY\n\t\t\telse if Anchored and Y => 0\n\t\t\t\tCtrlY := AnchorY + AnchorH + Y - OriginY\n\t\t\telse if !Anchored and Y < 0\n\t\t\t\tCtrlY := Height - CtrlH + Y + OriginY\n\t\t\telse ; !Anchored and Y => 0\n\t\t\t\tCtrlY := Y - OriginY\n\t\t\tCtrlY := MinMax(CtrlY, MinY, MaxY)\n\t\t}\n\n\t\t; Move and Size\n\t\tCtrlObj.Move(CtrlX, CtrlY, CtrlW, CtrlH)\n\t\tif Init or (CtrlObj.HasProp(\"Cleanup\") and CtrlObj.Cleanup = true) ; Cleanup on Init\n\t\t\tCtrlObj.Redraw()\n\n\t\tif CtrlObj.HasProp(\"Function\")\n\t\t\tCtrlObj.Function(GuiObj) ; CtrlObj is hidden 'this' first parameter\n\t}\n\n\tGuiObj.Init := false\n\tMinMax(Num, MinNum, MaxNum) => Min(Max(Num, MinNum), MaxNum)\n}\n",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/(guiresizer.ahk",
			"file_size": 5530,
			"file_write_time": 133211937810795232,
			"settings":
			{
				"buffer_size": 5530,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "; On-Screen Keyboard (based on the v1 script by Jon)\n; https://www.autohotkey.com\n; This script creates a mock keyboard at the bottom of your screen that shows\n; the keys you are pressing in real time. I made it to help me to learn to\n; touch-type (to get used to not looking at the keyboard). The size of the\n; on-screen keyboard can be customized at the top of the script. Also, you\n; can double-click the tray icon to show or hide the keyboard.\n\n;---- Configuration Section: Customize the size of the on-screen keyboard and\n; other options here.\n\n; Changing this font size will make the entire on-screen keyboard get\n; larger or smaller:\nk_FontSize := 10\nk_FontName := \"Verdana\"  ; This can be blank to use the system's default font.\nk_FontStyle := \"Bold\"    ; Example of an alternative: Italic Underline\n\n; Names for the tray menu items:\nk_MenuItemHide := \"Hide on-screen &keyboard\"\nk_MenuItemShow := \"Show on-screen &keyboard\"\n\n; To have the keyboard appear on a monitor other than the primary, specify\n; a number such as 2 for the following variable. Leave it blank to use\n; the primary:\nk_Monitor := \"\"\n\n;---- End of configuration section. Don't change anything below this point\n; unless you want to alter the basic nature of the script.\n\n;---- Create a Gui window for the on-screen keyboard:\nMyGui := Gui(\"-Caption +ToolWindow +AlwaysOnTop +Disabled\")\nMyGui.SetFont(\"s\" k_FontSize \" \" k_FontStyle, k_FontName)\nMyGui.MarginY := 0, MyGui.MarginX := 0\n\n;---- Alter the tray icon menu:\nA_TrayMenu.Delete\nA_TrayMenu.Add k_MenuItemHide, k_ShowHide\nA_TrayMenu.Add \"&Exit\", (*) => ExitApp()\nA_TrayMenu.Default := k_MenuItemHide\n\n;---- Add a button for each key:\n\n; The keyboard layout:\nk_Layout := [\n    [\"``\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"-\", \"=\", \"Backspace:3\"],\n    [\"Tab:3\", \"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\", \"[\", \"]\", \"\\\"],\n    [\"CapsLock:3\", \"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \";\", \"'\", \"Enter:2\"],\n    [\"LShift:3\", \"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\", \",\", \".\", \"/\", \"Shift:3\"],\n    [\"LCtrl:2\", \"LWin:2\", \"LAlt:2\", \"Space:2\", \"RAlt:2\", \"RWin:2\", \"AppsKey:2\", \"RCtrl:2\"]\n]\n\n; Traverse the keys of the keyboard layout:\nfor n, k_Row in k_Layout\n    for i, k_Key in k_Row\n    {\n        k_KeyWidthMultiplier := 1\n        ; Get custom key width multiplier:\n        if RegExMatch(k_Key, \"(.+):(\\d)\", &m)\n        {\n            k_Key := m[1]\n            k_KeyWidthMultiplier := m[2]\n        }\n        ; Get localized key name:\n        k_KeyNameText := GetKeyNameText(k_Key, 0, 1)\n        ; Windows key names start with left or right so replace it:\n        if (k_Key = \"LWin\" || k_Key = \"RWin\")\n            k_KeyNameText := \"Win\"\n         ; Truncate the key name:\n        if (StrLen(k_Key) > 1)\n            k_KeyNameText := Trim(SubStr(k_KeyNameText, 1, 5))\n        else\n            k_KeyNameText := k_Key\n        ; Convert to uppercase:\n        k_KeyNameText := StrUpper(k_KeyNameText)\n        ; Calculate object dimensions based on chosen font size:\n        k_KeyHeight := k_FontSize * 3\n        opt := \"h\" k_KeyHeight \" w\" k_KeyHeight * k_KeyWidthMultiplier \" -Wrap x+m\" \n        if (i = 1)\n            opt .= \" y+m xm\"\n        ; Add the button:\n        Btn := MyGui.Add(\"Button\", opt, k_KeyNameText)\n        ; When a key is pressed by the user, click the corresponding button on-screen:\n        Hotkey(\"~*\" k_Key, k_KeyPress.bind(Btn))\n    }\n\n;---- Position the keyboard at the bottom of the screen (taking into account\n; the position of the taskbar):\nMyGui.Show(\"Hide\") ; Required to get the window's calculated width and height.\n; Calculate window's X-position:\nMonitorGetWorkArea(k_Monitor, &WL,, &WR, &WB)\nMyGui.GetPos(,, &k_width, &k_height)\nk_xPos := (WR - WL - k_width) / 2 ; Calculate position to center it horizontally.\n; The following is done in case the window will be on a non-primary monitor\n; or if the taskbar is anchored on the left side of the screen:\nk_xPos += WL\n; Calculate window's Y-position:\nk_yPos := WB - k_height\n\n;---- Show the window:\nMyGui.Show(\"x\" k_xPos \" y\" k_yPos \" NA\")\n\n;---- Function definitions:\nk_KeyPress(BtnCtrl, *)\n{ \n    BtnCtrl.Opt(\"Default\") ; Highlight the last pressed key.\n    ControlClick(, BtnCtrl,,,, \"D\")\n    KeyWait(SubStr(A_ThisHotkey, 3))\n    ControlClick(, BtnCtrl,,,, \"U\")\n}\n\nk_ShowHide(*)\n{\n    static isVisible := true\n    if isVisible\n    {\n        MyGui.Hide\n        A_TrayMenu.Rename k_MenuItemHide, k_MenuItemShow\n        isVisible := false\n    }\n    else\n    {\n        MyGui.Show\n        A_TrayMenu.Rename k_MenuItemShow, k_MenuItemHide\n        isVisible := true\n    }\n}\n\nGetKeyNameText(Key, Extended := false, DoNotCare := false)\n{\n    Params := (GetKeySC(Key) << 16) | (Extended << 24) | (DoNotCare << 25)\n    KeyNameText := Buffer(64, 0)\n    DllCall(\"User32.dll\\GetKeyNameText\", \"Int\", Params, \"Ptr\", KeyNameText, \"Int\", 32)\n    return StrGet(KeyNameText)\n}\n",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/KeyboardOnScreen.ahk",
			"file_size": 5008,
			"file_write_time": 133211919903385786,
			"settings":
			{
				"buffer_size": 4871,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"insert",
					{
						"characters": "u"
					},
					"AQAAADgAAAAAAAAAOQAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgAAAAAAAAAOAAAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"left_delete",
					null,
					"AQAAADgAAAAAAAAAOAAAAAAAAAABAAAAdQ",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkAAAAAAAAAOQAAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": "hh"
					},
					"AgAAAKMAAAAAAAAApAAAAAAAAAAAAAAApAAAAAAAAAClAAAAAAAAAAAAAAA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMAAAAAAAAAowAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					2,
					"left_delete",
					null,
					"AgAAAKQAAAAAAAAApAAAAAAAAAABAAAAaKMAAAAAAAAAowAAAAAAAAABAAAAaA",
					"DwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKUAAAAAAAAApQAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"contents": "MyGui := Gui()\nMyGui.Opt(\"+AlwaysOnTop -Caption +ToolWindow\")  ; +ToolWindow avoids a taskbar button and an alt-tab menu item.\nMyGui.BackColor := \"EEAA99\"  ; Can be any RGB color (it will be made transparent below).\nMyGui.SetFont(\"s32\")  ; Set a large font size (32-point).\nCoordText := MyGui.Add(\"Text\", \"cLime\", \"XXXXX YYYYY\")  ; XX & YY serve to auto-size the window.\n; Make all pixels of this color transparent and make the text itself translucent (150):\nWinSetTransColor(MyGui.BackColor \" 150\", MyGui)\nSetTimer(UpdateOSD, 200)\nUpdateOSD()  ; Make the first update immediate rather than waiting for the timer.\nMyGui.Show(\"x0 y400 NoActivate\")  ; NoActivate avoids deactivating the currently active window.\n\nUpdateOSD(*)\n{\n    MouseGetPos &MouseX, &MouseY\n    CoordText.Value := \"X\" MouseX \", Y\" MouseY\n}",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Gui-Script (2).ahk",
			"file_size": 825,
			"file_write_time": 133211914185526588,
			"settings":
			{
				"buffer_size": 807,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "MyGui := Gui(\"+Resize\")\nMyBtn := MyGui.Add(\"Button\", \"default\", \"&Load New Image\")\nMyBtn.OnEvent(\"Click\", LoadNewImage)\nMyRadio := MyGui.Add(\"Radio\", \"ym+5 x+10 checked\", \"Load &actual size\")\nMyGui.Add(\"Radio\", \"ym+5 x+10\", \"Load to &fit screen\")\nMyPic := MyGui.Add(\"Pic\", \"xm\")\nMyGui.Show()\n\nLoadNewImage(*)\n{\n    Image := FileSelect(,, \"Select an image:\", \"Images (*.gif; *.jpg; *.bmp; *.png; *.tif; *.ico; *.cur; *.ani; *.exe; *.dll)\")\n    if Image = \"\"\n        return\n    if (MyRadio.Value)  ; Display image at its actual size.\n    {\n        Width := 0\n        Height := 0\n    }\n    else ; Second radio is selected: Resize the image to fit the screen.\n    {\n        Width := A_ScreenWidth - 28  ; Minus 28 to allow room for borders and margins inside.\n        Height := -1  ; \"Keep aspect ratio\" seems best.\n    }\n    MyPic.Value := Format(\"*w{1} *h{2} {3}\", Width, Height, Image)  ; Load the image.\n    MyGui.Title := Image\n    MyGui.Show(\"xCenter y0 AutoSize\")  ; Resize the window to match the picture size.\n}",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Gui-Script (1).ahk",
			"file_size": 1045,
			"file_write_time": 133211914093753407,
			"settings":
			{
				"buffer_size": 1016,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "; Create the MyGui window:\nMyGui := Gui(\"+Resize\", \"Untitled\")  ; Make the window resizable.\n\n; Create the submenus for the menu bar:\nFileMenu := Menu()\nFileMenu.Add(\"&New\", MenuFileNew)\nFileMenu.Add(\"&Open\", MenuFileOpen)\nFileMenu.Add(\"&Save\", MenuFileSave)\nFileMenu.Add(\"Save &As\", MenuFileSaveAs)\nFileMenu.Add() ; Separator line.\nFileMenu.Add(\"E&xit\", MenuFileExit)\nHelpMenu := Menu()\nHelpMenu.Add(\"&About\", MenuHelpAbout)\n\n; Create the menu bar by attaching the submenus to it:\nMyMenuBar := MenuBar()\nMyMenuBar.Add(\"&File\", FileMenu)\nMyMenuBar.Add(\"&Help\", HelpMenu)\n\n; Attach the menu bar to the window:\nMyGui.MenuBar := MyMenuBar\n\n; Create the main Edit control:\nMainEdit := MyGui.Add(\"Edit\", \"WantTab W600 R20\")\n\n; Apply events:\nMyGui.OnEvent(\"DropFiles\", Gui_DropFiles)\nMyGui.OnEvent(\"Size\", Gui_Size)\n\nMenuFileNew()  ; Apply default settings.\nMyGui.Show()  ; Display the window.\n\nMenuFileNew(*)\n{\n    MainEdit.Value := \"\"  ; Clear the Edit control.\n    FileMenu.Disable(\"3&\")  ; Gray out &Save.\n    MyGui.Title := \"Untitled\"\n}\n\nMenuFileOpen(*)\n{\n    MyGui.Opt(\"+OwnDialogs\")  ; Force the user to dismiss the FileSelect dialog before returning to the main window.\n    SelectedFileName := FileSelect(3,, \"Open File\", \"Text Documents (*.txt)\")\n    if SelectedFileName = \"\" ; No file selected.\n        return\n    global CurrentFileName := readContent(SelectedFileName)\n}\n\nMenuFileSave(*)\n{\n    saveContent(CurrentFileName)\n}\n\nMenuFileSaveAs(*)\n{\n    MyGui.Opt(\"+OwnDialogs\")  ; Force the user to dismiss the FileSelect dialog before returning to the main window.\n    SelectedFileName := FileSelect(\"S16\",, \"Save File\", \"Text Documents (*.txt)\")\n    if SelectedFileName = \"\" ; No file selected.\n        return\n    global CurrentFileName := saveContent(SelectedFileName)\n}\n\nMenuFileExit(*)  ; User chose \"Exit\" from the File menu.\n{\n    WinClose()\n}\n\nMenuHelpAbout(*)\n{\n    About := Gui(\"+owner\" MyGui.Hwnd)  ; Make the main window the owner of the \"about box\".\n    MyGui.Opt(\"+Disabled\")  ; Disable main window.\n    About.Add(\"Text\",, \"Text for about box.\")\n    About.Add(\"Button\", \"Default\", \"OK\").OnEvent(\"Click\", About_Close)\n    About.OnEvent(\"Close\", About_Close)\n    About.OnEvent(\"Escape\", About_Close)\n    About.Show()\n\n    About_Close(*)\n    {\n        MyGui.Opt(\"-Disabled\")  ; Re-enable the main window (must be done prior to the next step).\n        About.Destroy()  ; Destroy the about box.\n    }\n}\n\nreadContent(FileName)\n{\n    try\n        FileContent := FileRead(FileName)  ; Read the file's contents into the variable.\n    catch\n    {\n        MsgBox(\"Could not open '\" FileName \"'.\")\n        return\n    }\n    MainEdit.Value := FileContent  ; Put the text into the control.\n    FileMenu.Enable(\"3&\")  ; Re-enable &Save.\n    MyGui.Title := FileName  ; Show file name in title bar.\n    return FileName\n}\n\nsaveContent(FileName)\n{\n    try\n    {\n        if FileExist(FileName)\n            FileDelete(FileName)\n        FileAppend(MainEdit.Value, FileName)  ; Save the contents to the file.\n    }\n    catch\n    {\n        MsgBox(\"The attempt to overwrite '\" FileName \"' failed.\")\n        return\n    }\n    ; Upon success, Show file name in title bar (in case we were called by MenuFileSaveAs):\n    MyGui.Title := FileName\n    return FileName\n}\n\nGui_DropFiles(thisGui, Ctrl, FileArray, *)  ; Support drag & drop.\n{\n    CurrentFileName := readContent(FileArray[1])  ; Read the first file only (in case there's more than one).\n}\n\nGui_Size(thisGui, MinMax, Width, Height)\n{\n    if MinMax = -1  ; The window has been minimized. No action needed.\n        return\n    ; Otherwise, the window has been resized or maximized. Resize the Edit control to match.\n    MainEdit.Move(,, Width-20, Height-20)\n}",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Gui-Script.ahk",
			"file_size": 3830,
			"file_write_time": 133211914024364488,
			"settings":
			{
				"buffer_size": 3699,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#SingleInstance\nPersistent\ntray := A_TrayMenu ; For convenience.\ntray.delete ; Delete the standard items.\ntray.add ; separator\ntray.add \"TestToggleCheck\", TestToggleCheck\ntray.add \"TestToggleEnable\", TestToggleEnable\ntray.add \"TestDefault\", TestDefault\ntray.add \"TestAddStandard\", TestAddStandard\ntray.add \"TestDelete\", TestDelete\ntray.add \"TestDeleteAll\", TestDeleteAll\ntray.add \"TestRename\", TestRename\ntray.add \"Test\", Test\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\nTestToggleCheck(*)\n{\n    tray.ToggleCheck \"TestToggleCheck\"\n    tray.Enable \"TestToggleEnable\" ; Also enables the next test since it can't undo the disabling of itself.\n    tray.add \"TestDelete\", TestDelete ; Similar to above.\n}\n\nTestToggleEnable(*)\n{\n    tray.ToggleEnable \"TestToggleEnable\"\n}\n\nTestDefault(*)\n{\n    if tray.default = \"TestDefault\"\n        tray.default := \"\"\n    else\n        tray.default := \"TestDefault\"\n}\n\nTestAddStandard(*)\n{\n    tray.addStandard\n}\n\nTestDelete(*)\n{\n    tray.delete \"TestDelete\"\n}\n\nTestDeleteAll(*)\n{\n    tray.delete\n}\n\nTestRename(*)\n{\n    static OldName := \"\", NewName := \"\"\n    if NewName != \"renamed\"\n    {\n        OldName := \"TestRename\"\n        NewName := \"renamed\"\n    }\n    else\n    {\n        OldName := \"renamed\"\n        NewName := \"TestRename\"\n    }\n    tray.rename OldName, NewName\n}\n\nTest(Item, *)\n{\n    MsgBox 'You selected \"' Item '\"'\n}",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Menu-Script (2).ahk",
			"file_size": 1427,
			"file_write_time": 133211903885901878,
			"settings":
			{
				"buffer_size": 1354,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "FileMenu := Menu()\nFileMenu.Add(\"Script Icon\", MenuHandler)\nFileMenu.Add(\"Suspend Icon\", MenuHandler)\nFileMenu.Add(\"Pause Icon\", MenuHandler)\nFileMenu.SetIcon(\"Script Icon\", A_AhkPath, 2) ; 2nd icon group from the file\nFileMenu.SetIcon(\"Suspend Icon\", A_AhkPath, -206) ; icon with resource ID 206\nFileMenu.SetIcon(\"Pause Icon\", A_AhkPath, -207) ; icon with resource ID 207\nMyMenuBar := MenuBar()\nMyMenuBar.Add(\"&File\", FileMenu)\nMyGui := Gui()\nMyGui.MenuBar := MyMenuBar\nMyGui.Add(\"Button\",, \"Exit This Example\").OnEvent(\"Click\", (*) => WinClose())\nMyGui.Show\n\nMenuHandler(*) {\n    ; For this example, the menu items don't do anything.\n}",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Menu-Script (3)-ICON.ahk",
			"file_size": 656,
			"file_write_time": 133211904007422687,
			"settings":
			{
				"buffer_size": 637,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Rect := Buffer(16)  ; Set capacity to hold four 4-byte integers.\nNumPut( \"Int\", 0                  ; left\n      , \"Int\", 0                  ; top\n      , \"Int\", A_ScreenWidth//2   ; right\n      , \"Int\", A_ScreenHeight//2  ; bottom\n      , Rect)\nhDC := DllCall(\"GetDC\", \"Ptr\", 0, \"Ptr\")  ; Pass zero to get the desktop's device context.\nhBrush := DllCall(\"CreateSolidBrush\", \"UInt\", 0x0000FF, \"Ptr\")  ; Create a red brush (0x0000FF is in BGR format).\nDllCall(\"FillRect\", \"Ptr\", hDC, \"Ptr\", Rect, \"Ptr\", hBrush)  ; Fill the specified rectangle using the brush above.\nDllCall(\"ReleaseDC\", \"Ptr\", 0, \"Ptr\", hDC)  ; Clean-up.\nDllCall(\"DeleteObject\", \"Ptr\", hBrush)  ; Clean-up.",
			"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/2.DllCall-Script.ahk",
			"file_size": 685,
			"file_write_time": 133211861668958535,
			"settings":
			{
				"buffer_size": 672,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/AHKCommandPicker.ahk",
			"settings":
			{
				"buffer_size": 66408,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/GDIP.ahk",
			"settings":
			{
				"buffer_size": 115637,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/globalcoder-captain.ahk",
			"settings":
			{
				"buffer_size": 4096,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/JSON.ahk",
			"settings":
			{
				"buffer_size": 11407,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/Minerva-PowerToys.ahk",
			"settings":
			{
				"buffer_size": 1767,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/JXON.ahk",
			"settings":
			{
				"buffer_size": 6086,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/Minerva-Statistics.ahk",
			"settings":
			{
				"buffer_size": 1102,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/Minerva-Handlers.ahk",
			"settings":
			{
				"buffer_size": 1795,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/WatchFolder.ahk",
			"settings":
			{
				"buffer_size": 12550,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/read-ini.ahk",
			"settings":
			{
				"buffer_size": 1236,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "3"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"EAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/D/(github)/ahkzeanah/AHKZeanah/sandbox/UIAForm/UIAForm/UIAForm.ahk",
			"settings":
			{
				"buffer_size": 3925,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"DgAAAAAAAAAAAAAAAAAAAAAAAABQBwAAI1NpbmdsZUluc3RhbmNlIGZvcmNlCiNpbmNsdWRlIDxVSUEtdjJcTGliXFVJQT4KI2luY2x1ZGUgPFVJQS12MlxMaWJcVUlBX0Jyb3dzZXI+CgpeNjo6CnsKCWJyb3dzZXIgOj0gVUlBX0Jyb3dzZXIoJ0EnKQoJCgljYXNoUmVxdWVzdCA6PSBVSUEuQ3JlYXRlQ2FjaGVSZXF1ZXN0KFsnbmFtZScsICd0eXBlJ10sIHVuc2V0LCAnZGVzY2VuZGFudHMnKQoJY2FjaGUgOj0gYnJvd3Nlci5CdWlsZFVwZGF0ZWRDYWNoZShjYXNoUmVxdWVzdCkKCgk7IFRvb2xUaXAgYnJvd3Nlci5HZXRDdXJyZW50VVJMKCkKCglpZiBicm93c2VyLkVsZW1lbnRFeGlzdCh7bWF0Y2htb2RlOidSZWdFeCcsbmFtZTonaSlcYihmaXJzdFxzKT9uYW1lfG5vbWVcYicsVHlwZTonZWRpdCd9KQoJewoJCWJyb3dzZXIuRmluZEVsZW1lbnQoe21hdGNobW9kZTonUmVnRXgnLAoJCSAgICAgICAgICAgICAgICAgICAgIG5hbWU6J2kpKGZpcnN0XHMrKT9uYW1lfG5vbWUnLAoJCSAgICAgICAgICAgICAgICAgICAgIFR5cGU6J2VkaXQnfSkuU2V0VmFsdWUoJ015IGZpcnN0IG5hbWUnKQoJCWJyb3dzZXIuRmluZEVsZW1lbnQoe21hdGNobW9kZTonUmVnRXgnLAoJCSAgICAgICAgICAgICAgICAgICAgIG5hbWU6J2kpKGxhc3R8ZmFtaWx5fHN1cikoXHMrKT9uYW1lfGNvZ25vbWUnLAoJCSAgICAgICAgICAgICAgICAgICAgIFR5cGU6J2VkaXQnfSkuU2V0VmFsdWUoJ015IHN1cm5hbWUnKQoJfQoKCWVsZW1lbnRzIDo9IE1hcCgKCQknZnVsbChccyspP25hbWUnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsICdNeSBmdWxsIG5hbWUnLAoJCScocG9zdChhbCk/fHppcCkoXHMrKT8oY29kZXx6b25lKT8nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgJ015IFpJUCBDb2RlJywKCQkndXNlcihccyspP25hbWUnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsICdNeV91c2VybmFtZScsCgkJJyhyZS1lbnRlcnxjb25maXJtKVxzK2UtP21haWwnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLCAnZW1haWxAZW1haWwuY29tJywKCQknKChyZS1lbnRlcnxjb25maXJtKVxzKyk/cGFzc3dvcmQnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsICdQYXNzd29yZDEyMycsCgkJJ2NpdHknICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLCAnQ2l0eSBOYW1lJywKCQknKCh0ZWxlKT8ocGhvbmV8Zm9ubyl8bW9iaWxlfGNlbGx1bGFyZXxjb250YWN0XHMrKG5vXC4/fG51bWJlcikpJyAsICdNeSBwaG9uZSBudW1iZXInLAoJCSdzdHJlZXRccythZGRyZXNzfGluZGlyaXp6bycgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgJ015IFN0cmVldCBhZGRyZXNzJywKCQknY29tcGFueXxvcmdhbmkoc3x6KWF0aW9uJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAsICdNeSBjb21wYW55IG5hbWUnLAoJCScoeW91clxzKyk/ZS0/bWFpbChccythZGRyZXNzKT8nICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICwgJ2VtYWlsQGVtYWlsLmNvbScsCgkpCgoJZm9yIHJlZ2V4LHZhbHVlIGluIGVsZW1lbnRzCgkJdHJ5IGNhY2hlLkZpbmRDYWNoZWRFbGVtZW50KHttYXRjaG1vZGU6J1JlZ0V4JywKCQkgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpKScgcmVnZXgsCgkJICAgICAgICAgICAgICAgICAgICAgICAgICAgICBUeXBlOidlZGl0J30pLlNldFZhbHVlKHZhbHVlKQoJCWNhdGNoIEVycm9yIGFzIGUKCQkJT3V0cHV0RGVidWcgZS5XaGF0ICcoJyBlLkV4dHJhICcpOmBuJyBlLk1lc3NhZ2UgJ2BuJwp9AAAAAAAAAABVDwAAAAAAAAAAAAAAAAAAAAAAAFUPAAAAAAAAAAAAAAAAAAAAAAAAVQ8AAAAAAAAAAAAAAAAAAAAAAABVDwAAAAAAAAAAAAAAAAAAAAAAAFUPAAAAAAAAAAAAAAAAAAAAAAAAVQ8AAAAAAAAAAAAAAAAAAAAAAABVDwAAAAAAAAAAAAAAAAAAAAAAAFUPAAAAAAAAAAAAAAAAAAAAAAAAVQ8AAAAAAAAAAAAAAAAAAAAAAABVDwAAAAAAAAAAAAAAAAAAAAAAAFUPAAAAAAAAAAAAAAAAAAAAAAAAVQ8AAAAAAAAAAAAAAAAAAAAAAABVDwAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/D/(github)/ahkzeanah/AHKZeanah/UIAForm.ahk",
			"settings":
			{
				"buffer_size": 1872,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/windowsmenu.ahk",
			"settings":
			{
				"buffer_size": 4127,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/2_gui_test.ahk",
			"settings":
			{
				"buffer_size": 3851,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/autokill.ahk",
			"settings":
			{
				"buffer_size": 1054,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/cv2.ah2",
			"settings":
			{
				"buffer_size": 8914,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/example.ahk",
			"settings":
			{
				"buffer_size": 587,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/Filefromsnipe.txt",
			"settings":
			{
				"buffer_size": 939,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/fib-example.ahk",
			"settings":
			{
				"buffer_size": 2160,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder (2).ahk",
			"settings":
			{
				"buffer_size": 76495,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder (3).ahk",
			"settings":
			{
				"buffer_size": 67811,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder (4).ahk",
			"settings":
			{
				"buffer_size": 67811,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-3keyexample.ahk",
			"settings":
			{
				"buffer_size": 519,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-backup.ahk",
			"settings":
			{
				"buffer_size": 73442,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-bk.ahk",
			"settings":
			{
				"buffer_size": 89187,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-cam.ahk",
			"settings":
			{
				"buffer_size": 62292,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-database.ahk",
			"settings":
			{
				"buffer_size": 13538,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-misc.ahk",
			"settings":
			{
				"buffer_size": 251,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-osd.ahk",
			"settings":
			{
				"buffer_size": 103262,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-pass.ahk",
			"settings":
			{
				"buffer_size": 20,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder.ahk",
			"settings":
			{
				"buffer_size": 67818,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					12,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAEWKAAAAAAAARooAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFigAAAAAAAEWKAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAAEWKAAAAAAAARYoAAAAAAAABAAAAeA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGigAAAAAAAEaKAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "z_"
					},
					"AgAAAEWKAAAAAAAARooAAAAAAAAAAAAARooAAAAAAABHigAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFigAAAAAAAEWKAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "old"
					},
					"AwAAAJenAAAAAAAAmKcAAAAAAAAAAAAAmKcAAAAAAACZpwAAAAAAAAAAAACZpwAAAAAAAJqnAAAAAAAAAAAAAA",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACXpwAAAAAAAJenAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					2,
					"left_delete",
					null,
					"AgAAAEaKAAAAAAAARooAAAAAAAABAAAAX0WKAAAAAAAARYoAAAAAAAABAAAAeg",
					"DgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHigAAAAAAAEeKAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-references.ahk",
			"settings":
			{
				"buffer_size": 2437,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-shinsoverlay-example.ahk",
			"settings":
			{
				"buffer_size": 14172,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-shinsoverlay-example2.ahk",
			"settings":
			{
				"buffer_size": 715,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-scratch.ahk",
			"settings":
			{
				"buffer_size": 12948,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-windows.ahk",
			"settings":
			{
				"buffer_size": 978,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-winkey-showtaskbar.ahk",
			"settings":
			{
				"buffer_size": 3733,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/hellbent.ahk",
			"settings":
			{
				"buffer_size": 38636,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/IntelliSense.ahk",
			"settings":
			{
				"buffer_size": 5904,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/keylist.ahk",
			"settings":
			{
				"buffer_size": 990,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/logTimer.ahk",
			"settings":
			{
				"buffer_size": 5277,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/maincv2.ah2",
			"settings":
			{
				"buffer_size": 8914,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/menu-search.ahk",
			"settings":
			{
				"buffer_size": 3840,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/menuglobalcoder.ahk",
			"settings":
			{
				"buffer_size": 3214,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/readself.ahk",
			"settings":
			{
				"buffer_size": 128,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/recorder.ahk",
			"settings":
			{
				"buffer_size": 50130,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/shin-scan-example1.ahk",
			"settings":
			{
				"buffer_size": 600,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/shin-game-BallClicker.ahk",
			"settings":
			{
				"buffer_size": 7440,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/shinEverythingExample.ahk",
			"settings":
			{
				"buffer_size": 13563,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/shinGeneralExample.ahk",
			"settings":
			{
				"buffer_size": 3649,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/shinMouseDots.ahk",
			"settings":
			{
				"buffer_size": 2277,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/shinPolygons.ahk",
			"settings":
			{
				"buffer_size": 2079,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/ShinsGameClass.ahk",
			"settings":
			{
				"buffer_size": 39096,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/ShinsImageScanClass.ahk",
			"settings":
			{
				"buffer_size": 93359,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/ShinsOverlayClass.ahk",
			"settings":
			{
				"buffer_size": 41311,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/sql_command_file.txt",
			"settings":
			{
				"buffer_size": 88,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/sqlite-ex.ahk",
			"settings":
			{
				"buffer_size": 1353,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/sqlite-ex2.ahk",
			"settings":
			{
				"buffer_size": 1236,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDB_sample-myexample.ahk",
			"settings":
			{
				"buffer_size": 13538,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDB_sample-workshop.ahk",
			"settings":
			{
				"buffer_size": 11010,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDB_sample.ahk",
			"settings":
			{
				"buffer_size": 11803,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDB_sample4.ahk",
			"settings":
			{
				"buffer_size": 3623,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDB_sample2.ahk",
			"settings":
			{
				"buffer_size": 14446,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDB_sampleCheck.ahk",
			"settings":
			{
				"buffer_size": 897,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDBv2_sample.ah2",
			"settings":
			{
				"buffer_size": 11729,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/sqliteex2.ah2",
			"settings":
			{
				"buffer_size": 3960,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/sqliteex.ahk",
			"settings":
			{
				"buffer_size": 6641,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/stringer.ahk",
			"settings":
			{
				"buffer_size": 2798,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/teams-funcs.ahk",
			"settings":
			{
				"buffer_size": 1085,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/testtextfind.ahk",
			"settings":
			{
				"buffer_size": 759,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/textfinderex.ahk",
			"settings":
			{
				"buffer_size": 109999,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/sqliteex2.ahk",
			"settings":
			{
				"buffer_size": 3960,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/0_globalcoder.ahk",
			"settings":
			{
				"buffer_size": 97062,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"left_delete",
					null,
					"AQAAABAUAAAAAAAAEBQAAAAAAAABAAAAPA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAERQAAAAAAAARFAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"left_delete",
					null,
					"AQAAABcUAAAAAAAAFxQAAAAAAAABAAAAPg",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAGBQAAAAAAAAYFAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": ".ahk"
					},
					"BAAAABcUAAAAAAAAGBQAAAAAAAAAAAAAGBQAAAAAAAAZFAAAAAAAAAAAAAAZFAAAAAAAABoUAAAAAAAAAAAAABoUAAAAAAAAGxQAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFxQAAAAAAAAXFAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "d:/li"
					},
					"BQAAABAUAAAAAAAAERQAAAAAAAAAAAAAERQAAAAAAAASFAAAAAAAAAAAAAASFAAAAAAAABMUAAAAAAAAAAAAABMUAAAAAAAAFBQAAAAAAAAAAAAAFBQAAAAAAAAVFAAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAEBQAAAAAAAAQFAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "b/"
					},
					"AgAAABUUAAAAAAAAFhQAAAAAAAAAAAAAFhQAAAAAAAAXFAAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAFRQAAAAAAAAVFAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"left_delete",
					null,
					"AQAAAGFhAQAAAAAAYWEBAAAAAAABAAAAPA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYmEBAAAAAABiYQEAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"left_delete",
					null,
					"AQAAAGVhAQAAAAAAZWEBAAAAAAABAAAAPg",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZmEBAAAAAABmYQEAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAAHhhAQAAAAAAeGEBAAAAAAABAAAAPg",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeWEBAAAAAAB5YQEAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": ".ahk"
					},
					"BAAAAHhhAQAAAAAAeWEBAAAAAAAAAAAAeWEBAAAAAAB6YQEAAAAAAAAAAAB6YQEAAAAAAHthAQAAAAAAAAAAAHthAQAAAAAAfGEBAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAeGEBAAAAAAB4YQEAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": ".ahk"
					},
					"BAAAAGVhAQAAAAAAZmEBAAAAAAAAAAAAZmEBAAAAAABnYQEAAAAAAAAAAABnYQEAAAAAAGhhAQAAAAAAAAAAAGhhAQAAAAAAaWEBAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZWEBAAAAAABlYQEAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"left_delete",
					null,
					"AQAAAHNhAQAAAAAAc2EBAAAAAAABAAAAPA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAdGEBAAAAAAB0YQEAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "d:/lib"
					},
					"DAAAAHNhAQAAAAAAdGEBAAAAAAAAAAAAYWEBAAAAAABiYQEAAAAAAAAAAAB1YQEAAAAAAHZhAQAAAAAAAAAAAGJhAQAAAAAAY2EBAAAAAAAAAAAAd2EBAAAAAAB4YQEAAAAAAAAAAABjYQEAAAAAAGRhAQAAAAAAAAAAAHlhAQAAAAAAemEBAAAAAAAAAAAAZGEBAAAAAABlYQEAAAAAAAAAAAB7YQEAAAAAAHxhAQAAAAAAAAAAAGVhAQAAAAAAZmEBAAAAAAAAAAAAfWEBAAAAAAB+YQEAAAAAAAAAAABmYQEAAAAAAGdhAQAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAYWEBAAAAAABhYQEAAAAAAAAAAAAAAPC/c2EBAAAAAABzYQEAAAAAAAAAAAAAgFJA"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AgAAAH9hAQAAAAAAgGEBAAAAAAAAAAAAZ2EBAAAAAABoYQEAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAACAAAAZ2EBAAAAAABnYQEAAAAAAAAAAAAAAPC/f2EBAAAAAAB/YQEAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAL1hAQAAAAAAvmEBAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAvWEBAAAAAAC9YQEAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOphAQAAAAAA62EBAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6mEBAAAAAADqYQEAAAAAAAAAAAAAAAAA"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAABNiAQAAAAAAFGIBAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAE2IBAAAAAAATYgEAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADtiAQAAAAAAPGIBAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAO2IBAAAAAAA7YgEAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGdiAQAAAAAAaGIBAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAZ2IBAAAAAABnYgEAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAI5iAQAAAAAAj2IBAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAjmIBAAAAAACOYgEAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJRhAQAAAAAAlWEBAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlGEBAAAAAACUYQEAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOU+AAAAAAAA5j4AAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA5T4AAAAAAADlPgAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "\n\n#in"
					},
					"BQAAAJATAAAAAAAAkRMAAAAAAAAAAAAAkRMAAAAAAACSEwAAAAAAAAAAAACSEwAAAAAAAJMTAAAAAAAAAAAAAJMTAAAAAAAAlBMAAAAAAAAAAAAAlBMAAAAAAACVEwAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAkBMAAAAAAACQEwAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "clude"
					},
					"BQAAAJUTAAAAAAAAlhMAAAAAAAAAAAAAlhMAAAAAAACXEwAAAAAAAAAAAACXEwAAAAAAAJgTAAAAAAAAAAAAAJgTAAAAAAAAmRMAAAAAAAAAAAAAmRMAAAAAAACaEwAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAlRMAAAAAAACVEwAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " d:/"
					},
					"BAAAAJoTAAAAAAAAmxMAAAAAAAAAAAAAmxMAAAAAAACcEwAAAAAAAAAAAACcEwAAAAAAAJ0TAAAAAAAAAAAAAJ0TAAAAAAAAnhMAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmhMAAAAAAACaEwAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "lib/"
					},
					"BAAAAJ4TAAAAAAAAnxMAAAAAAAAAAAAAnxMAAAAAAACgEwAAAAAAAAAAAACgEwAAAAAAAKETAAAAAAAAAAAAAKETAAAAAAAAohMAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAnhMAAAAAAACeEwAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					2,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AgAAAKITAAAAAAAApBMAAAAAAAAAAAAAoxMAAAAAAAClEwAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAohMAAAAAAACiEwAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "functions"
					},
					"CQAAAKQTAAAAAAAApRMAAAAAAAAAAAAApRMAAAAAAACmEwAAAAAAAAAAAACmEwAAAAAAAKcTAAAAAAAAAAAAAKcTAAAAAAAAqBMAAAAAAAAAAAAAqBMAAAAAAACpEwAAAAAAAAAAAACpEwAAAAAAAKoTAAAAAAAAAAAAAKoTAAAAAAAAqxMAAAAAAAAAAAAAqxMAAAAAAACsEwAAAAAAAAAAAACsEwAAAAAAAK0TAAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApBMAAAAAAACkEwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": ".ahk"
					},
					"BAAAAK8TAAAAAAAAsBMAAAAAAAAAAAAAsBMAAAAAAACxEwAAAAAAAAAAAACxEwAAAAAAALITAAAAAAAAAAAAALITAAAAAAAAsxMAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAArxMAAAAAAACvEwAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAGBzAAAAAAAAY3MAAAAAAAAAAAAAj3IAAAAAAACRcgAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYHMAAAAAAACPcgAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAALapAAAAAAAAuakAAAAAAAAAAAAAYaQAAAAAAABjpAAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAYaQAAAAAAAC2qQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAEEhAQAAAAAARCEBAAAAAAAAAAAAj64AAAAAAACRrgAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAj64AAAAAAABBIQEAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					2,
					"left_delete",
					null,
					"AgAAAEUhAQAAAAAARSEBAAAAAAABAAAAL0QhAQAAAAAARCEBAAAAAAABAAAAKg",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAARiEBAAAAAABGIQEAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAJ8xAQAAAAAAojEBAAAAAAAAAAAAxtAAAAAAAADI0AAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAxtAAAAAAAACfMQEAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAABw7AQAAAAAAHzsBAAAAAAAAAAAA6TQBAAAAAADrNAEAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6TQBAAAAAAAcOwEAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAMAgAAAAAAAAwSAAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAwCAAAAAAAADAIAAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOFrAAAAAAAA4msAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4WsAAAAAAADhawAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAAU0AQAAAAAACDQBAAAAAAAAAAAApzEBAAAAAACpMQEAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAApzEBAAAAAAAFNAEAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"left_delete",
					null,
					"AQAAAMbQAAAAAAAAxtAAAAAAAAABAAAAfQ",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAx9AAAAAAAADH0AAAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAANsTAAAAAAAA3hMAAAAAAAAAAAAAtBMAAAAAAAC2EwAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtBMAAAAAAADbEwAAAAAAAAAAAAAAAPC/"
				],
				[
					196,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAId9AAAAAAAAin0AAAAAAAAAAAAA4HwAAAAAAADifAAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4HwAAAAAAACHfQAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAAk/AQAAAAAADD8BAAAAAAAAAAAA6D4BAAAAAADqPgEAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA6D4BAAAAAAAJPwEAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALYTAAAAAAAAtxMAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAthMAAAAAAAC2EwAAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"left_delete",
					null,
					"AQAAALQTAAAAAAAAtBMAAAAAAAACAAAALyo",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAthMAAAAAAAC0EwAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALUTAAAAAAAAthMAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAtRMAAAAAAAC1EwAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"left_delete",
					null,
					"AQAAAN4TAAAAAAAA3hMAAAAAAAACAAAAKi8",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4BMAAAAAAADeEwAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "8?"
					},
					"AgAAALgaAQAAAAAAuRoBAAAAAAAAAAAAuRoBAAAAAAC6GgEAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuBoBAAAAAAC4GgEAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					2,
					"left_delete",
					null,
					"AgAAALkaAQAAAAAAuRoBAAAAAAABAAAAP7gaAQAAAAAAuBoBAAAAAAABAAAAOA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuhoBAAAAAAC6GgEAAAAAAAAAAAAAAPC/"
				],
				[
					228,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAALgaAQAAAAAAuRoBAAAAAAAAAAAAuRoBAAAAAAC6GgEAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuBoBAAAAAAC4GgEAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					1,
					"insert",
					{
						"characters": "*/"
					},
					"AgAAACEeAQAAAAAAIh4BAAAAAAAAAAAAIh4BAAAAAAAjHgEAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIR4BAAAAAAAhHgEAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					2,
					"left_delete",
					null,
					"AgAAACIeAQAAAAAAIh4BAAAAAAABAAAALyEeAQAAAAAAIR4BAAAAAAABAAAAKg",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIx4BAAAAAAAjHgEAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"insert",
					{
						"characters": "/*"
					},
					"AgAAACIeAQAAAAAAIx4BAAAAAAAAAAAAIx4BAAAAAAAkHgEAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAIh4BAAAAAAAiHgEAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					2,
					"left_delete",
					null,
					"AgAAALkaAQAAAAAAuRoBAAAAAAABAAAAKrgaAQAAAAAAuBoBAAAAAAABAAAALw",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuhoBAAAAAAC6GgEAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert",
					{
						"characters": "*/"
					},
					"AgAAALgaAQAAAAAAuRoBAAAAAAAAAAAAuRoBAAAAAAC6GgEAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAuBoBAAAAAAC4GgEAAAAAAAAAAAAAAPC/"
				],
				[
					244,
					1,
					"cut",
					null,
					"AQAAACIeAQAAAAAAIh4BAAAAAAACAAAALyo",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAJB4BAAAAAAAiHgEAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"paste_and_indent",
					null,
					"AQAAABEiAQAAAAAAEyIBAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAESIBAAAAAAARIgEAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					2,
					"left_delete",
					null,
					"AgAAAOs+AQAAAAAA6z4BAAAAAAABAAAAKuo+AQAAAAAA6j4BAAAAAAABAAAALw",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA7D4BAAAAAADsPgEAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					2,
					"left_delete",
					null,
					"AgAAAA0/AQAAAAAADT8BAAAAAAABAAAALww/AQAAAAAADD8BAAAAAAABAAAAKg",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAADj8BAAAAAAAOPwEAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"cut",
					null,
					"AQAAAN58AAAAAAAA3nwAAAAAAAACAAAALyo",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAA4HwAAAAAAADefAAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					1,
					"paste_and_indent",
					null,
					"AQAAAIV9AAAAAAAAh30AAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAhX0AAAAAAACFfQAAAAAAAAAAAAAAAPC/"
				],
				[
					347,
					1,
					"cut",
					null,
					"AQAAAAMLAQAAAAAAAwsBAAAAAADqBgAATWFrZUd1aToKICAgIEd1aSwgK1JlU2l6ZSArTWluU2l6ZQogICAgR3VpIEZvbnQsIHMxMCwgQ29uc29sYXMKICAgIEd1aSBBZGQsIFRhYjIsIHIyNSB3NDMwIHZUYWJTZWxlY3Rpb24sIFJlZ0V4TWF0Y2h8UmVnRXhSZXBsYWNlCiAgICAKICAgIEd1aSBUYWIsIFJlZ0V4TWF0Y2gKICAgICAgICBHdWkgQWRkLCBUZXh0LCAsIFRleHQgdG8gYmUgc2VhcmNoZWQ6CiAgICAgICAgR3VpIEFkZCwgRWRpdCwgcjEwIHc0MDAgdm1IYXlzdGFjayBnVXBkYXRlTWF0Y2gKICAgICAgICBHdWkgQWRkLCBUZXh0LCBTZWN0aW9uIHZtVHh0UmVnRXgsIFJlZ3VsYXIgRXhwcmVzc2lvbjogIE9wdGlvbgogICAgICAgIEd1aSBBZGQsIENoZWNrYm94LCB4KzIgdm1MRiBnVXBkYXRlTWF0Y2gsIGBgbgogICAgICAgIEd1aSBBZGQsIENoZWNrYm94LCB4KzIgdm1DUiBnVXBkYXRlTWF0Y2gsIGBgcgogICAgICAgIEd1aSBBZGQsIENoZWNrYm94LCB4KzIgdm1BbnlDUkxGIGdVcGRhdGVNYXRjaCwgYGBhCiAgICAgICAgR3VpIEFkZCwgRWRpdCwgeHMgcjUgdzMwNSB2bU5lZWRsZSBnVXBkYXRlTWF0Y2gKICAgICAgICBHdWkgQWRkLCBUZXh0LCB4KzE1IHlzIHZtVHh0U3RhcnQsIFN0YXJ0OiAoMSkKICAgICAgICBHdWkgQWRkLCBFZGl0LCByMSB3NzUgdm1TdGFydFBvcyBnVXBkYXRlTWF0Y2gsIDEKICAgICAgICBHdWkgQWRkLCBUZXh0LCB4cyB2bVR4dFJlc3VsdCwgUmVzdWx0czoKICAgICAgICBHdWkgQWRkLCBFZGl0LCByMTQgdzQwMCArcmVhZG9ubHkgLVRhYlN0b3Agdm1SZXN1bHQKICAgICAgICAKICAgIEd1aSBUYWIsIFJlZ0V4UmVwbGFjZQogICAgICAgIEd1aSBBZGQsIFRleHQsICwgVGV4dCB0byBiZSBzZWFyY2hlZDoKICAgICAgICBHdWkgQWRkLCBFZGl0LCByMTAgdzQwMCB2ckhheXN0YWNrIGdVcGRhdGVSZXBsYWNlLCAKICAgICAgICBHdWkgQWRkLCBUZXh0LCBTZWN0aW9uIHZyVHh0UmVnRXgsIFJlZ3VsYXIgRXhwcmVzc2lvbjogIE9wdGlvbgogICAgICAgIEd1aSBBZGQsIENoZWNrYm94LCB4KzIgdnJMRiBnVXBkYXRlUmVwbGFjZSwgYGBuCiAgICAgICAgR3VpIEFkZCwgQ2hlY2tib3gsIHgrMiB2ckNSIGdVcGRhdGVSZXBsYWNlLCBgYHIKICAgICAgICBHdWkgQWRkLCBDaGVja2JveCwgeCsyIHZyQW55Q1JMRiBnVXBkYXRlUmVwbGFjZSwgYGBhCiAgICAgICAgR3VpIEFkZCwgRWRpdCwgeHMgcjUgdzMwNSB2ck5lZWRsZSBnVXBkYXRlUmVwbGFjZSwgCiAgICAgICAgR3VpIEFkZCwgVGV4dCwgdnJUeHRSZXBsYWNlLCBSZXBsYWNlbWVudCBUZXh0OgogICAgICAgIEd1aSBBZGQsIEVkaXQsIHIyIHczMDUgdnJSZXBsYWNlbWVudCBnVXBkYXRlcmVwbGFjZSwKICAgICAgICBHdWkgQWRkLCBUZXh0LCAgdnJUeHRSZXN1bHQsIFJlc3VsdHM6CiAgICAgICAgR3VpIEFkZCwgRWRpdCwgcjEwIHc0MDAgK3JlYWRvbmx5IC1UYWJTdG9wIHZyUmVzdWx0CiAgICAgICAgR3VpIEFkZCwgVGV4dCwgeXMgeHMrMzIwIFNlY3Rpb24gdnJUeHRTdGFydCwgU3RhcnQ6ICgxKQogICAgICAgIEd1aSBBZGQsIEVkaXQsIHIxIHc3NSB2clN0YXJ0UG9zIGdVcGRhdGVSZXBsYWNlLCAxCiAgICAgICAgR3VpIEFkZCwgVGV4dCwgeHMgeSsxNSB2clR4dExpbWl0LCBMaW1pdDogKC0xKQogICAgICAgIEd1aSBBZGQsIEVkaXQsIHIxIHc3NSB2ckxpbWl0IGdVcGRhdGVSZXBsYWNlLCAtMQpyZXR1cm4KCklzSW50KHN0cikgewogICAgaWYgc3RyIGlzIGludGVnZXIKICAgICAgICByZXR1cm4gdHJ1ZQogICAgZWxzZQogICAgICAgIHJldHVybiBmYWxzZQp9",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAwsBAAAAAADtEQEAAAAAAAAAAAAAAPC/"
				],
				[
					350,
					1,
					"paste_and_indent",
					null,
					"AQAAAJiuAAAAAAAAgrUAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAmK4AAAAAAACYrgAAAAAAAAAAAAAAAPC/"
				],
				[
					364,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAACN9AAAAAAAAJH0AAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAI30AAAAAAAAjfQAAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADx9AAAAAAAAPX0AAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAPH0AAAAAAAA8fQAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/C/Users/donov/OneDrive/Desktop/bing.ahk",
			"settings":
			{
				"buffer_size": 2014,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAM4BAAAAAAAAzwEAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4BAAAAAAAAzgEAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"cut",
					null,
					"AQAAAL0CAAAAAAAAvQIAAAAAAABQAAAAOyBBZGQgYSB0ZXh0IGNvbnRyb2wgZm9yIGFnZSBsYWJlbApteUd1aS5BZGQoIlRleHQiLCAieDEwIHk0MCB3MTAwIGgyMCIsICJBZ2U6Iik",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAA0DAAAAAAAAvQIAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"paste_and_indent",
					null,
					"AQAAAGkCAAAAAAAAuQIAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGkCAAAAAAAAaQIAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALkCAAAAAAAAugIAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkCAAAAAAAAuQIAAAAAAAAAAAAAAADwvw"
				],
				[
					25,
					3,
					"left_delete",
					null,
					"AwAAAA8DAAAAAAAADwMAAAAAAAABAAAACg4DAAAAAAAADgMAAAAAAAABAAAACg0DAAAAAAAADQMAAAAAAAABAAAACg",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABADAAAAAAAAEAMAAAAAAAAAAAAAAADwvw"
				],
				[
					30,
					2,
					"left_delete",
					null,
					"AgAAAK4DAAAAAAAArgMAAAAAAAAHAAAARGVmYXVsdK0DAAAAAAAArQMAAAAAAAABAAAAIA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALUDAAAAAAAArgMAAAAAAAAAAAAAAADwvw"
				],
				[
					37,
					1,
					"left_delete",
					null,
					"AQAAAK4DAAAAAAAArgMAAAAAAAAHAAAAZ1N1Ym1pdA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4DAAAAAAAAtQMAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": ".on"
					},
					"AwAAALoDAAAAAAAAuwMAAAAAAAAAAAAAuwMAAAAAAAC8AwAAAAAAAAAAAAC8AwAAAAAAAL0DAAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoDAAAAAAAAugMAAAAAAAAAAAAAAADwvw"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "eve"
					},
					"AwAAAL0DAAAAAAAAvgMAAAAAAAAAAAAAvgMAAAAAAAC/AwAAAAAAAAAAAAC/AwAAAAAAAMADAAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0DAAAAAAAAvQMAAAAAAAAAAAAAAADwvw"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "nt"
					},
					"AgAAAMADAAAAAAAAwQMAAAAAAAAAAAAAwQMAAAAAAADCAwAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMADAAAAAAAAwAMAAAAAAAAAAAAAAADwvw"
				],
				[
					45,
					1,
					"left_delete",
					null,
					"AQAAAL0DAAAAAAAAvQMAAAAAAAABAAAAZQ",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4DAAAAAAAAvgMAAAAAAAAAAAAAAADwvw"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": "E"
					},
					"AQAAAL0DAAAAAAAAvgMAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0DAAAAAAAAvQMAAAAAAAAAAAAAAADwvw"
				],
				[
					48,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMIDAAAAAAAAxAMAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIDAAAAAAAAwgMAAAAAAAAAAAAAAADwvw"
				],
				[
					49,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMMDAAAAAAAAxQMAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMMDAAAAAAAAwwMAAAAAAAAAAAAAAADwvw"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "click"
					},
					"BQAAAMQDAAAAAAAAxQMAAAAAAAAAAAAAxQMAAAAAAADGAwAAAAAAAAAAAADGAwAAAAAAAMcDAAAAAAAAAAAAAMcDAAAAAAAAyAMAAAAAAAAAAAAAyAMAAAAAAADJAwAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQDAAAAAAAAxAMAAAAAAAAAAAAAAADwvw"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMkDAAAAAAAAygMAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkDAAAAAAAAyQMAAAAAAAAAAAAAAADwvw"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " submit"
					},
					"BwAAAMoDAAAAAAAAywMAAAAAAAAAAAAAywMAAAAAAADMAwAAAAAAAAAAAADMAwAAAAAAAM0DAAAAAAAAAAAAAM0DAAAAAAAAzgMAAAAAAAAAAAAAzgMAAAAAAADPAwAAAAAAAAAAAADPAwAAAAAAANADAAAAAAAAAAAAANADAAAAAAAA0QMAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoDAAAAAAAAygMAAAAAAAAAAAAAAADwvw"
				],
				[
					57,
					1,
					"cut",
					null,
					"AQAAANIDAAAAAAAA0gMAAAAAAAACAAAAKQo",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANIDAAAAAAAA1AMAAAAAAAAAAAAAAADwvw"
				],
				[
					62,
					1,
					"paste_and_indent",
					null,
					"AQAAAMkDAAAAAAAAywMAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkDAAAAAAAAyQMAAAAAAAAAAAAAAADwvw"
				],
				[
					63,
					1,
					"left_delete",
					null,
					"AQAAAMoDAAAAAAAAygMAAAAAAAABAAAACg",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsDAAAAAAAAywMAAAAAAAAAAAAAAADwvw"
				],
				[
					64,
					1,
					"right_delete",
					null,
					"AQAAAMoDAAAAAAAAygMAAAAAAAABAAAALA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoDAAAAAAAAygMAAAAAAAAAAAAAAADwvw"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAMoDAAAAAAAAywMAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMoDAAAAAAAAygMAAAAAAAAAAAAAAADwvw"
				],
				[
					66,
					1,
					"right_delete",
					null,
					"AQAAAMsDAAAAAAAAywMAAAAAAAABAAAAIA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsDAAAAAAAAywMAAAAAAAAAAAAAAADwvw"
				],
				[
					67,
					2,
					"left_delete",
					null,
					"AgAAAMoDAAAAAAAAygMAAAAAAAABAAAALskDAAAAAAAAyQMAAAAAAAABAAAAKQ",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMsDAAAAAAAAywMAAAAAAAAAAAAAAADwvw"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMkDAAAAAAAAygMAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkDAAAAAAAAyQMAAAAAAAAAAAAAAADwvw"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "\""
					},
					"AQAAAMkDAAAAAAAAygMAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMkDAAAAAAAAyQMAAAAAAAAAAAAAAADwvw"
				],
				[
					81,
					1,
					"left_delete",
					null,
					"AQAAANEDAAAAAAAA0QMAAAAAAAABAAAAIg",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANIDAAAAAAAA0gMAAAAAAAAAAAAAAADwvw"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAANEDAAAAAAAA0gMAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANEDAAAAAAAA0QMAAAAAAAAAAAAAAADwvw"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAADsEAAAAAAAAPAQAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsEAAAAAAAAOwQAAAAAAAAAAAAAAADwvw"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "*"
					},
					"AQAAAC4FAAAAAAAALwUAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4FAAAAAAAALgUAAAAAAAAAAAAAAADwvw"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAOcBAAAAAAAA6AEAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOcBAAAAAAAA5wEAAAAAAAAAAAAAAADwvw"
				],
				[
					100,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOgBAAAAAAAA6gEAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgBAAAAAAAA6AEAAAAAAAAAAAAAAADwvw"
				],
				[
					101,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAOgBAAAAAAAA6AEAAAAAAAABAAAAe+gBAAAAAAAA6AEAAAAAAAABAAAAfQ",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOkBAAAAAAAA6QEAAAAAAAAAAAAAAADwvw"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": "::"
					},
					"AgAAAOgBAAAAAAAA6QEAAAAAAAAAAAAA6QEAAAAAAADqAQAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOgBAAAAAAAA6AEAAAAAAAAAAAAAAADwvw"
				],
				[
					103,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAOoBAAAAAAAA7AEAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOoBAAAAAAAA6gEAAAAAAAAAAAAAAADwvw"
				],
				[
					104,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Add Line in Braces.sublime-macro"
					},
					"AwAAAOsBAAAAAAAA7AEAAAAAAAAAAAAA7AEAAAAAAADtAQAAAAAAAAAAAADsAQAAAAAAAPABAAAAAAAAAAAAAA",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOsBAAAAAAAA6wEAAAAAAAAAAAAAAADwvw"
				],
				[
					106,
					26,
					"swap_line_down",
					null,
					"NAAAAA0CAAAAAAAADwIAAAAAAAAAAAAA8QEAAAAAAADxAQAAAAAAAAIAAAB9CiACAAAAAAAAIgIAAAAAAAAAAAAACwIAAAAAAAALAgAAAAAAAAIAAAB9CiECAAAAAAAAIwIAAAAAAAAAAAAAHgIAAAAAAAAeAgAAAAAAAAIAAAB9CkUCAAAAAAAARwIAAAAAAAAAAAAAHwIAAAAAAAAfAgAAAAAAAAIAAAB9CnQCAAAAAAAAdgIAAAAAAAAAAAAAQwIAAAAAAABDAgAAAAAAAAIAAAB9CpcCAAAAAAAAmQIAAAAAAAAAAAAAcgIAAAAAAAByAgAAAAAAAAIAAAB9CsUCAAAAAAAAxwIAAAAAAAAAAAAAlQIAAAAAAACVAgAAAAAAAAIAAAB9CsYCAAAAAAAAyAIAAAAAAAAAAAAAwwIAAAAAAADDAgAAAAAAAAIAAAB9CusCAAAAAAAA7QIAAAAAAAAAAAAAxAIAAAAAAADEAgAAAAAAAAIAAAB9ChgDAAAAAAAAGgMAAAAAAAAAAAAA6QIAAAAAAADpAgAAAAAAAAIAAAB9CjwDAAAAAAAAPgMAAAAAAAAAAAAAFgMAAAAAAAAWAwAAAAAAAAIAAAB9CmgDAAAAAAAAagMAAAAAAAAAAAAAOgMAAAAAAAA6AwAAAAAAAAIAAAB9CmkDAAAAAAAAawMAAAAAAAAAAAAAZgMAAAAAAABmAwAAAAAAAAIAAAB9CpIDAAAAAAAAlAMAAAAAAAAAAAAAZwMAAAAAAABnAwAAAAAAAAIAAAB9Ct4DAAAAAAAA4AMAAAAAAAAAAAAAkAMAAAAAAACQAwAAAAAAAAIAAAB9CvQDAAAAAAAA9gMAAAAAAAAAAAAA3AMAAAAAAADcAwAAAAAAAAIAAAB9CgEEAAAAAAAAAwQAAAAAAAAAAAAA8gMAAAAAAADyAwAAAAAAAAIAAAB9CgIEAAAAAAAABAQAAAAAAAAAAAAA/wMAAAAAAAD/AwAAAAAAAAIAAAB9Cj8EAAAAAAAAQQQAAAAAAAAAAAAAAAQAAAAAAAAABAAAAAAAAAIAAAB9CkkEAAAAAAAASwQAAAAAAAAAAAAAPQQAAAAAAAA9BAAAAAAAAAIAAAB9CksEAAAAAAAATQQAAAAAAAAAAAAARwQAAAAAAABHBAAAAAAAAAIAAAB9CocEAAAAAAAAiQQAAAAAAAAAAAAASQQAAAAAAABJBAAAAAAAAAIAAAB9CqQEAAAAAAAApgQAAAAAAAAAAAAAhQQAAAAAAACFBAAAAAAAAAIAAAB9Cr8EAAAAAAAAwQQAAAAAAAAAAAAAogQAAAAAAACiBAAAAAAAAAIAAAB9CsAEAAAAAAAAwgQAAAAAAAAAAAAAvQQAAAAAAAC9BAAAAAAAAAIAAAB9CvkEAAAAAAAA+wQAAAAAAAAAAAAAvgQAAAAAAAC+BAAAAAAAAAIAAAB9Cg",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPIBAAAAAAAA8gEAAAAAAAAAAAAAAIBAQA"
				],
				[
					107,
					14,
					"swap_line_down",
					null,
					"HAAAAC8FAAAAAAAAMQUAAAAAAAAAAAAA9wQAAAAAAAD3BAAAAAAAAAIAAAB9CjEFAAAAAAAAMwUAAAAAAAAAAAAALQUAAAAAAAAtBQAAAAAAAAIAAAB9CjwFAAAAAAAAPgUAAAAAAAAAAAAALwUAAAAAAAAvBQAAAAAAAAIAAAB9Cj4FAAAAAAAAQAUAAAAAAAAAAAAAOgUAAAAAAAA6BQAAAAAAAAIAAAB9CnoFAAAAAAAAfAUAAAAAAAAAAAAAPAUAAAAAAAA8BQAAAAAAAAIAAAB9CpcFAAAAAAAAmQUAAAAAAAAAAAAAeAUAAAAAAAB4BQAAAAAAAAIAAAB9CrIFAAAAAAAAtAUAAAAAAAAAAAAAlQUAAAAAAACVBQAAAAAAAAIAAAB9CrMFAAAAAAAAtQUAAAAAAAAAAAAAsAUAAAAAAACwBQAAAAAAAAIAAAB9CtEFAAAAAAAA0wUAAAAAAAAAAAAAsQUAAAAAAACxBQAAAAAAAAIAAAB9CusFAAAAAAAA7QUAAAAAAAAAAAAAzwUAAAAAAADPBQAAAAAAAAIAAAB9CvEFAAAAAAAA8wUAAAAAAAAAAAAA6QUAAAAAAADpBQAAAAAAAAIAAAB9CjIGAAAAAAAANAYAAAAAAAAAAAAA7wUAAAAAAADvBQAAAAAAAAIAAAB9Cl8GAAAAAAAAYQYAAAAAAAAAAAAAMAYAAAAAAAAwBgAAAAAAAAIAAAB9Cn0GAAAAAAAAfwYAAAAAAAAAAAAAXQYAAAAAAABdBgAAAAAAAAIAAAB9Cg",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAPgEAAAAAAAA+AQAAAAAAAAAAAAAAIBAQA"
				],
				[
					108,
					13,
					"swap_line_down",
					null,
					"GgAAAIwGAAAAAAAAjgYAAAAAAAAAAAAAewYAAAAAAAB7BgAAAAAAAAIAAAB9CpIGAAAAAAAAlAYAAAAAAAAAAAAAigYAAAAAAACKBgAAAAAAAAIAAAB9CpMGAAAAAAAAlQYAAAAAAAAAAAAAkAYAAAAAAACQBgAAAAAAAAIAAAB9CrAGAAAAAAAAsgYAAAAAAAAAAAAAkQYAAAAAAACRBgAAAAAAAAIAAAB9CskGAAAAAAAAywYAAAAAAAAAAAAArgYAAAAAAACuBgAAAAAAAAIAAAB9Cs8GAAAAAAAA0QYAAAAAAAAAAAAAxwYAAAAAAADHBgAAAAAAAAIAAAB9Cg8HAAAAAAAAEQcAAAAAAAAAAAAAzQYAAAAAAADNBgAAAAAAAAIAAAB9CjsHAAAAAAAAPQcAAAAAAAAAAAAADQcAAAAAAAANBwAAAAAAAAIAAAB9ClgHAAAAAAAAWgcAAAAAAAAAAAAAOQcAAAAAAAA5BwAAAAAAAAIAAAB9CmcHAAAAAAAAaQcAAAAAAAAAAAAAVgcAAAAAAABWBwAAAAAAAAIAAAB9Cm0HAAAAAAAAbwcAAAAAAAAAAAAAZQcAAAAAAABlBwAAAAAAAAIAAAB9Cm4HAAAAAAAAcAcAAAAAAAAAAAAAawcAAAAAAABrBwAAAAAAAAIAAAB9CqcHAAAAAAAAqQcAAAAAAAAAAAAAbAcAAAAAAABsBwAAAAAAAAIAAAB9Cg",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHwGAAAAAAAAfAYAAAAAAAAAAAAAAIBAQA"
				],
				[
					109,
					10,
					"swap_line_down",
					null,
					"BgAAAN0HAAAAAAAA3wcAAAAAAAAAAAAApQcAAAAAAAClBwAAAAAAAAIAAAB9Ct4HAAAAAAAA4AcAAAAAAAAAAAAA3wcAAAAAAADfBwAAAAAAAAEAAAAK3gcAAAAAAADfBwAAAAAAAAAAAADbBwAAAAAAANsHAAAAAAAAAgAAAH0K",
					"CQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKYHAAAAAAAApgcAAAAAAAAAAAAAAIBAQA"
				]
			]
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/6 - Examples/imenu.ahk",
			"settings":
			{
				"buffer_size": 3741,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/6 - Examples/menuclass.ahk",
			"settings":
			{
				"buffer_size": 16519,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/donov/OneDrive/Desktop/CSharp-MVC-Local-Groups-Social-Mangement-System-master/Kingdom/Kingdom/appsettings.Development.json",
			"settings":
			{
				"buffer_size": 119,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/donov/OneDrive/Desktop/CSharp-MVC-Local-Groups-Social-Mangement-System-master/Kingdom/Kingdom/appsettings.json",
			"settings":
			{
				"buffer_size": 174,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/C/Users/donov/OneDrive/Desktop/CSharp-MVC-Local-Groups-Social-Mangement-System-master/Kingdom/Kingdom/ClaimsPrincipalExtensions.cs",
			"settings":
			{
				"buffer_size": 269,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					2,
					1,
					"revert",
					null,
					"BQAAAAAAAAAAAAAAAAAAAAAAAAATAQAAdXNpbmcgU3lzdGVtLlNlY3VyaXR5LkNsYWltczsKCm5hbWVzcGFjZSBXb3Jrc2hvcEdyb3VwCnsKICAgIHB1YmxpYyBzdGF0aWMgY2xhc3MgQ2xhaW1zUHJpbmNpcGFsRXh0ZW5zaW9ucwogICAgewogICAgICAgIHB1YmxpYyBzdGF0aWMgc3RyaW5nIEdldFVzZXJJZCh0aGlzIENsYWltc1ByaW5jaXBhbCB1c2VyKQogICAgICAgIHsKICAgICAgICAgICAgcmV0dXJuIHVzZXIuRmluZEZpcnN0KENsYWltVHlwZXMuTmFtZUlkZW50aWZpZXIpLlZhbHVlOwogICAgICAgIH0KICAgIH0KfQoAAAAAAAAAAA0BAAAAAAAAAAAAAAAAAAAAAAAADQEAAAAAAAAAAAAAAAAAAAAAAAANAQAAAAAAAAAAAAAAAAAAAAAAAA0BAAAAAAAAAAAAAA",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/1ParseAHK.ahk",
			"settings":
			{
				"buffer_size": 37651,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEw6AAAAAAAATToAAAAAAAAAAAAATToAAAAAAABPOgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEw6AAAAAAAATDoAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "msgbv"
					},
					"BQAAAE86AAAAAAAAUDoAAAAAAAAAAAAAUDoAAAAAAABROgAAAAAAAAAAAABROgAAAAAAAFI6AAAAAAAAAAAAAFI6AAAAAAAAUzoAAAAAAAAAAAAAUzoAAAAAAABUOgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE86AAAAAAAATzoAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"left_delete",
					null,
					"AQAAAFM6AAAAAAAAUzoAAAAAAAABAAAAdg",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFQ6AAAAAAAAVDoAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "ox"
					},
					"AgAAAFM6AAAAAAAAVDoAAAAAAAAAAAAAVDoAAAAAAABVOgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFM6AAAAAAAAUzoAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAFU6AAAAAAAAVzoAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFU6AAAAAAAAVToAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAFU6AAAAAAAAVToAAAAAAAABAAAAKFU6AAAAAAAAVToAAAAAAAABAAAAKQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFY6AAAAAAAAVjoAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAFU6AAAAAAAAVjoAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFU6AAAAAAAAVToAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " 5"
					},
					"AgAAAFY6AAAAAAAAVzoAAAAAAAAAAAAAVzoAAAAAAABYOgAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFY6AAAAAAAAVjoAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFg6AAAAAAAAWToAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFg6AAAAAAAAWDoAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					2,
					"left_delete",
					null,
					"AgAAAFg6AAAAAAAAWDoAAAAAAAABAAAAIFc6AAAAAAAAVzoAAAAAAAABAAAANQ",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFk6AAAAAAAAWToAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "%"
					},
					"AQAAAFc6AAAAAAAAWDoAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFc6AAAAAAAAVzoAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " TOTAL"
					},
					"BgAAAFg6AAAAAAAAWToAAAAAAAAAAAAAWToAAAAAAABaOgAAAAAAAAAAAABaOgAAAAAAAFs6AAAAAAAAAAAAAFs6AAAAAAAAXDoAAAAAAAAAAAAAXDoAAAAAAABdOgAAAAAAAAAAAABdOgAAAAAAAF46AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFg6AAAAAAAAWDoAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert_completion",
					{
						"completion": "TotalNumberOfLine",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "TotalNumberOfLine"
					},
					"AgAAAFk6AAAAAAAAWToAAAAAAAAFAAAAVE9UQUxZOgAAAAAAAGo6AAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF46AAAAAAAAXjoAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/globalcoder2.ahk",
			"settings":
			{
				"buffer_size": 68816,
				"line_ending": "Windows"
			}
		},
		{
			"contents": ";#requires v1\n/* \n-1- sublime.log_commands(True) \n-2- set_file_type {\"syntax\": \"Packages/AutoHotkey/AutoHotkey.tmLanguage\"} \n-*- set_file_type {\"syntax\": \"Packages/User/Autohotkey2.sublime-syntax\"} ;--- v2 ; \n\n*/\nMenu, Tray, Icon , Shell32.dll, 14 , 1\nTrayTip, AutoHotKey, Started, 1\nSoundBeep, 300, 1\nDetectHiddenWindows, on\nsetbatchlines,-1\nsettitlematchmode,2\nFormatTime, time , YYYYMMDDHH24MISS, MMdd--HHmm\n;SetCapsLockState, alwaysoff\n#SingleInstance, off\n#WinActivateForce\n#KeyHistory\n;#SingleInstance, Force\n#installKeybdHook\n#InstallMouseHook\n#Persistent\n;SetTitleMatchMode, slow ; june 30\n\n;================\n\nSendMode, event\n;===\nSetKeyDelay,\nSetControlDelay, 1001\nSetWinDelay, 200\nSetMouseDelay, 50\n\n;================\n\nCoordMode, Tooltip, Screen\n;CoordMode, Mouse, Screen\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[Globals]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n\n/*\nglobal dir = p:\\App\\app\\logs\\questions\\ .%answer% \nglobal adir = c:\\answer\\%answer%\nglobal pdir = p:\\App\\app\nglobal cdir = c:\\answer\\%answer%\nglobal Qfile = %adir%\\Q.txt\nglobal Mfile = %basedir%\\Q-Master.txt1212\n*/\n\n\nglobal toggle := \"\"\nglobal frontproject := \"p:\\app\\app\\\"\nglobal c := 1\nglobal wps := 15.00/3600\nglobal script := \"p:\\app\\app\\((start).ahk\"\nglobal frontfile := \"\"\nglobal myfun\nglobal g :=1\nglobal file := \"\"\nglobal frontfile := \"\"\nglobal frontdir :=  \"\"\nglobal funclist := \"p:/app/app/functions.txt\"\nglobal Qlist := \"p:/app/app/logs/q-google.txt\"\nglobal s := \"\", global r := \"\"\n\n\nreturn  ;----End of auto-execute section.\n\n;------------------------------------------------------------------------------includes\n ;hide window hotkeys ; {alt} + V/C - {xbuttons} + H/J\n\n\n#include p:\\app\\app\\shins\\Shinsimagescanclass.ahk ;;;\n#include P:\\app\\app\\favorite-folders.ahk\n#include p:\\app\\app\\((start)-class&fn.ahk ;;;\n#include p:\\app\\app\\((start)-ifs.ahk\n#include p:\\app\\app\\hotkeys.ahk\n#include P:\\App\\app\\btt.ahk ;;;\n#include <Vis2>\n#include p:\\app\\app\\((start)-winmin.ahk \n#include p:\\app\\app\\((start)-winmin2.ahk \n\n;#include <GuiBase>\n;#include P:\\App\\app\\gui\\GuiBase.ahk\n;#include <windowclass>\n;#include p:\\app\\app\\windowclass.ahk\n;#include <btt>\n;#include <UIA_Interface>\n;#include %A_ScriptDir%\\lib\\\n;#Include lib\\Chrome.ahk\n;#include P:\\App\\App\\uiautomation\\UIAutomation-main\\lib\\UIA_interface.ahk\n;#include P:\\App\\App\\uiautomation\\UIAutomation-main\\lib\\UIA_browser.ahk\n;#include P:\\App\\App\\uiautomation\\UIAutomation-main\\lib\\UIA_constant.ahk\n\n\n\n\n/*go(string){\nMsgBox, % \"0: `n \" string\nbracketstring := \"[\" . string . \"]\"\nrawstring := string\nclipboard := \"x=[mid\" . rawstring\nsend, ^f \nsend, {backspace}\nsend, ^v\nsend, {enter}\nclipboard := \"\"\nif string != index\nsend, {f3 2}\nsend, ^+{left 5}\nprefix := \"=[\"\nsend, % \"\" prefix . \"mid\"\nreturn\n}\n*/\n!i::\nlv(\"d:/\")\nreturn\n\n^i::\nsend, ^f \nclipboard := \"[index ]\"\nsend, % clipboard \nsend, {enter}\nreturn\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ INDEX ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[INDEX ]x=[]\n;[ HOTSTRINGS ]             - 106 :*:gHOTSTRINGS \n;[ RUNS ]                   - 131 :*:gRUNS \n;[ WINDOWS ]                - 202 :*:gWINDOWS \n;[ FORMATTING & SPECIALS ]  - 391 :*:gFORMATTING & SPECIALS \n;[ WORD ]                   - 464 :*:gWORD \n;[ CHROME ]                 - 490 :*:gCHROME \n;[ INCLUDES ]               - 783 :*:gINCLUDES \n\n\n\n\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ HOTSTRINGS ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[Hotstrings ]\n:*:dkz::dkzeanah@gmail.com\n:*:3de::3de32882D+1\n:*:ahkk::autohotkey\n:*:msg::\nmymsg_Function() {\n    static count := 0\n    clipboard := \"MsgBox, % \"\"\" . count++ \": ``n \" . \"\"\" \"\n    send, % clipboard\n    ;send, % \"MsgBox, % \"\"\" . count++ \": ``n \" . \"\"\" \"\n}\nreturn\n:*:umgc::\numgcfunc(){\n    clipboard := \"dzeanah@student.umgc.edu\"\n    send, ^v\n}\n;==============================[midhoststrings]=================================[]\n return\n:*:xb::xbutton2 &\n:*:reqv2::#Requires AutoHotkey v2.0-beta.7 `n warn all, off\n:*:reqv1::#Requires AutoHotkey  v1.1.34.03\n\n\n\n/*:*:gindex::\n        go(\"[ INDEX ]\")\n        return\n:*:ghotstrings::\n        go(\"HOTSTRINGS\")\n        return\n:*:gruns::\n        go(\"[ RUNS ]\") \n        return                \n:*:gwindows::\n        go(\"[ WINDOWS ]\") \n        return             \n:*:gspecial::\n        go(\"[ FORMATTING & SPECIALS ]\") \n        return \n:*:gword::\n        go(\"[ WORD ]\") \n        return                \n:*:gchrome::\n        go(\"[ CHROME ]\") \n        return              \n:*:gincludes::\n        go(\"[ INCLUDES ]\") \n        return\n*/\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[/HOTSTRINGS]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ RUNS ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[Runs ]\n\n/*;\nrun, % \"C:\\Users\\\" . A_UserName . \"\\OneDrive\\\"\n C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\n \"C:\\Program Files\\Sublime Text\\sublime_text.exe\"   \n \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Sublime Text.lnk\"\n run \"Z:\\Program Files\\scite4ahk3004\\$DATA\\SciTE.exe\" \"%A_ScriptFullPath%\"\np:\\app\\app\\((start)-class&fn.ahk\n*/\n\n~^f14::\n;Run, Target [, WorkingDir, Max|Min|Hide|UseErrorLevel, OutputVarPID]\nrun, \"p:\\app\\app\\((start)-winmin2.ahk\"  , A_WorkingDir ;\"p:\\app\\app\\((start)-winmin2.ahk\"\nreturn \n;==============================[midRUNS]=================================[]\nf14 & 1::\nini( 0, updatemode = 0 )\nmsgbox % ini.A_Index\nreturn\n\n\n;helpers / EXamples\nf14 & h::\nrun,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\"  \"p:\\app\\app\\regex.ahk \"\nrun,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\"  \"p:\\app\\app\\examples-gui.ahk \"\n\nreturn\n\n; run,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\" \"f:/ile/path\"     \nf13 & r::\nrun, \"C:\\Program Files\\Sublime Text\\sublime_text.exe\" \"p:\\app\\app\\favorite-folders.ahk\"\nrun,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\" \"p:\\app\\app\\((start)-ifs.ahk\"\nrun,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\" \"p:\\app\\app\\((start)-class&fn.ahk\"\nrun,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\" \"p:\\app\\app\\hotkeys.ahk\"\nrun,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\"  \"p:\\app\\app\\((start)-winmin.ahk \"\nrun,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\"  \"p:\\app\\app\\((start)-winmin2.ahk \"\nreturn \n\n\n;========================================= \nf13 & h:: \nsend, ^l \nsend, P:/app/\nsend, {enter}\nreturn\n\n;========================================= \nxbutton1 & p::\nrun, P:/app/app\nreturn\n\n;========================================= \nxbutton2 & p::\n;if !WinActive(\"ahk_exe explorer.exe\")\nWinActivate, ahk_exe explorer.exe\nreturn\n\n;========================================= \nxbutton2 & d::\n;run, d:/\nRun ::{450d8fba-ad25-11d0-98a8-0800361b1103}\nreturn\n\n;========================================= \n^!+d::\nControlFocus, SysTreeView321, A\nSendInput, % \"desktop\"\nreturn ;focuses sidebar\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[/RUNS]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ WINDOWS ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[WINDOWS ]\n\nf13 & v::\n^+v::\nWinActivate, vs\nreturn \n^+c::\nWinMinimize, vs\nreturn \n\nAlt & LButton::\nMouseGetPos, Mouse_Start_X, Mouse_Start_Y, Selected_Window\nWinGet, Window_State, MinMax, ahk_id %Selected_Window%\nif Window_State = 0\n    SetTimer, MyLabel, 1\nreturn\n;==============================[midWINDOWS]=================================[]\nMyLabel:\nMouseGetPos, Mouse_Current_X, Mouse_Current_Y\nWinGetPos, Selected_Window_X, Selected_Window_Y, , , ahk_id %Selected_Window%\nWinMove, ahk_id %Selected_Window%, , Selected_Window_X + Mouse_Current_X - Mouse_Start_X, Selected_Window_Y + Mouse_Current_Y - Mouse_Start_Y\n\nMouse_Start_X := Mouse_Current_X\nMouse_Start_Y := Mouse_Current_Y\n\nGetKeyState, LButton_State, LButton, P\nif LButton_State = U\n{\n    SetTimer, MyLabel, off\n    return\n}\nreturn\n\nf13 & t:: ;==============================[test]=================================[]\n  msgbox % A_UserName\nrun, % \"C:\\Users\\\" . A_UserName . \"\\OneDrive\\\"  \n\nColors := \"red,green,blue\"\nStringSplit, ColorArray, Colors, `,\nLoop, %ColorArray0%\n{\n    this_color := ColorArray%A_Index%\n    MsgBox, Color number %A_Index% is %this_color%.\n}\nreturn\n\nf13 & f:: ;==============================[]=================================[]\n;Loop, FilePattern [, IncludeFolders?, Recurse?]\n\n\n;loop functions.txt to display\nMsgBox, % \"0: `n \"  funclist\n\nLoop, read, %funclist%\n{\n    s .= A_LoopReadLine \" `n \"\n}\n\ntest := z_stringreplace(s,\"-\",\"|||\")\ns := \"\"\n\nLoop, read, %Qlist%\n{\n    s .= A_LoopReadLine \" `n \"\n}\n;MsgBox, % \"0: `n \" s\n\ns_array := StrSplit(s, A_space , \"`n\" )\n;for k,v in s_array\n;MsgBox, % \"0: `n \" k \"-\" v\n\nFileRead, QContents, %Qlist%\nif not ErrorLevel  ; Successfully loaded.\n{\n    Sort, QContents\n    ;FileDelete, C:\\Address List (alphabetical).txt\n    FileAppend, %QContents%, P:/app/app/logs/q-google(appended).txt\n    run, P:/app/app/logs/q-google(appended).txt\n    ;QContents := \"\"  ; Free the memory.\n}\nword_array := StrSplit(qcontents, \";\", \"-\") ; Omits periods.\nMsgBox % \"The 4th word is \" word_array[5]\n\n\n;text := \"Hi this`nis my;`ntest for this`nhmm;`n`ndoes it work?;`n`nI hope`nso`n`nLike Really!;\"\nMsgBox, % qcontents\nMsgBox, % qcontents2 := StrAppendEachLine(qcontents, \";\")\nMsgBox, % \"1: `n Qcontents: \" qcontents\n\nFileAppend, %QContents2%, P:/app/app/logs/q-google(appended2).txt\nrun, P:/app/app/logs/q-google(appended2).txt\nreturn\n\n\n\n\nfor k,v in word_array\nMsgBox, % \"0: `n \" k \"-\" v\n\n\n\n\n;;;;;all works\n;msgbox % s\n;z_stringreplace(s,\"-\",\"|||\")\n;test := z_stringreplace(s,\"-\",\"|||\")\n;msgbox % r   \n;msgbox % \"test: `n \" test   \n;;;;\n/*colors := \"red,green,blue\"\nfor index, color in StrSplit(colors, \",\")\n    MsgBox % \"Color number \" index \" is \" color\n\n*/\n\n\n\n/*recent_folder:=\"p:\\app\\app\\\"\nLoop, Files, % recent_folder \"\\functions.txt \", \n{\n    vPath := A_LoopFileFullPath\n    FileGetShortcut, % vPath, vTarget\n    vAttrib := FileExist(vTarget)\n    if InStr(vAttrib, \"D\") || !vAttrib\n        msgbox, %recent_folder%\\%A_LoopFileName%`n`n ...points to a folder\n                else\n                msgbox, %recent_folder%\\%A_LoopFileName%`n`n ...points to a file\n    \n}\nreturn\n*/\n\n/*Lf = `n\nLoop, Read, P:\\app\\app\\func.txt\n   {\n   If A_LoopReadLine = \n        Lf = \n   TTContent = %TTContent%%A_LoopReadLine%%Lf%\n   }\nToolTip, %TTContent%,5000\nmsgbox % TTContent . \"`n continue?\"\nSleep, 1000\nToolTip\nreturn\n*/\nreturn\n\nxbutton2 & F3::\nFileObject := {}\nloop, %A_ScriptDir%\\*.ahk, 0, 0 \n{\nsplitpath, A_LoopFileName, FileName,,, Key \nFileObject[ Key ] := FileName \n}\nfor Each, File in FileObject\n{\n\n    FileList .= File \"rn\"\n}\nbtt(FileList,,,,\"Style4\",{Transparent:v})\nsleep, 5000\nreturn\n;==============================[]=================================[]\n\n\nxbutton2 & g::\nsend ^c\nRun, www.google.com/search?q=%clipboard%\nchrome_group()\nreturn\n\nxbutton2 & q::\nWinActivate ahk_class Notepad\nWin1.get()\nSomeWin.AnnounceWinProps()\nReturn\n\nxbutton2 & up::^!up\nxbutton2 & down::^!down\nxbutton2 & o:: OCR() \nxbutton2 & i:: ImageIdentify() \n\n\n\nif GetKeyState(\"Shift\")\n    MsgBox At least one Shift key is down.\nelse\n    MsgBox Neither Shift key is down.\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ FORMATTING & SPECIALS ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[specials ]x=[]\n;==============================[breaks]=================================[breaks]\n\n\nxbutton2 & f::\n global toggle := !toggle\nsend, ^f \nsend, x=[]\nreturn\n\n\n\n;==============================[midspecials]=================================[]\n/*xbutton2 & f::\nsend, ^f \nsend, x=[]\n  toggle := !toggle\nreturn\n\n#if (Toggle) \nF13::f3\n\n#if\n*/\n\n;send % \"{mbutton \" ((t:=!t) ? \"down\" : \"up\") \"}\"\n/*\nxbutton2 & f::\nsend, ^f \nsend, x=[]\n  toggle := !toggle\nwhile (Toggle && getkeystate(\"f13\",\"p\")){\n   Send , {F3}  \n}\nreturn\n*/\n\n /* While (toggle)\n  {\n    if GetKeyState(\"f13\")\n    send, {f3}\n    return\n  }\n \nreturn\n\n*/\nxbutton2 & 3::\n SendMode Input\n SendRaw, `;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n SendRaw, `;~   ~\n SendRaw, `;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n send,{home}\n send, {up}\n send, {right 2}\nreturn\n\nxbutton2 & b::\n SendMode Input\n SendRaw, `;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\nreturn\n\nxbutton1 & b::\n    SendMode Input\n  \n    Send, `;==============================[]=================================[]\nreturn\n\nf13 & b::\nsend, `;================\nclipboard := \"`;================\"\nreturn\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ WORD ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[WORD]x=[]\n;oWord.Selection.PasteAndFormat(22)  ; Plain Text\n;oWord.Selection.PasteAndFormat(0)   ; Default \n\nxbutton2 & l:: \n send, ^l \n sleep, 100\n send, ^c\n sleep, 100\n sendword()\nreturn\n;==============================[midword]=================================[]\n\n\n/*f1::\nsend := clipboard . \"`n\"\n;send := send . \"`n\"\nclipboard := send\noWord := ComObjActive(\"Word.Application\")\noWord.Selection.PasteAndFormat(0)  ; Original Formatting\nsend := \"\"\nclipboard := \"\"\nreturn\n\n*/\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ CHROME ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n;==============================[ CHROME ]=================================[CHROME ]\n/*\nchrome://settings/searchEngines\n*/\n\n^f1::\nsavepic()\nreturn \n\n\n/*RemoveToolTip:\nToolTip\nreturn  \n*/\n;==============================[midchrome]=================================[]\n\n\n\n\nf13 & Space:: ;------------------------------------------------------------------\nInputBox, ans\nRun, www.google.com/search?q=%ans%\nchrome_group()\nremovespace(ans) ;ReplacedStr := StrReplace(Haystack, Needle , ReplaceText, OutputVarCount, Limit)\n\nanswer := clipboard\nbasedir := \"c:\\answer\" \n\ncreateddir = p:\\logs\\questions\\%date%__%answer%\ncreateddir = %A_WorkingDir%\\logs\\questions\\%answer%\n\nFileCreateDir, p:\\logs\\questions\\%time%_%answer% ;\nFileCreateDir, %A_WorkingDir%\\logs\\questions\\%answer% ;\nFileCreateDir, %basedir%\\%answer%\nfrontdir = %testdir%\\%answer% \nfileappend, %answer%__%time% `n, %A_WorkingDir%\\logs\\questions\\%answer%\\Q.txt ;-- make text inside folder\n\n\ndir = p:\\App\\logs\\questions\\%answer% \nfrontdir = c:\\answer\\%answer%\nfile = %frontdir%\\Q.txt\nMasterfile = %basedir%\\Q-Master.txt\n\n\nfileappend, Q-%answer%__%time% `n, %A_WorkingDir%\\logs\\questions\\%answer%\\Q.txt ;-- make text inside folder\nfileappend, Q-%answer%__%time% `n, p:\\App\\logs\\questions\\%answer%\\Q.txt ;-- make text inside folder\nFileAppend, -%answer%__%time% `n, %A_WorkingDir%\\logs\\Q-google.txt ;--- update global log file11\nFileAppend, -%answer%__%time% `n, p:\\App\\logs\\Q-google.txt ;--- update global log file11\nfileappend, -%answer%__%time% `n ,%file%\nfileappend, -%answer%__%time% `n ,%masterfile%\n\nrun %frontdir%\nrun, %file%\n\nreturn \n\n;==============================[]=================================[]\n\n\n\n\n\nxbutton2 & Space:: \nInputBox, ans\nRun, www.google.com/search?q=%ans%\nchrome_group(2)\nremovespace(ans) ;ReplacedStr := StrReplace(Haystack, Needle , ReplaceText, OutputVarCount, Limit)\n\n\nanswer := clipboard\nbasedir := \"c:\\answer\" \n\ncreateddir = p:\\logs\\questions\\%date%__%answer%\ncreateddir = %A_WorkingDir%\\logs\\questions\\%answer%\n\nFileCreateDir, p:\\logs\\questions\\%time%_%answer% ;\nFileCreateDir, %A_WorkingDir%\\logs\\questions\\%answer% ;\nFileCreateDir, %basedir%\\%answer%\ndir = %testdir%\\%answer% \nfileappend, %answer%__%time% `n, %A_WorkingDir%\\logs\\questions\\%answer%\\Q.txt ;-- make text inside folder\n\n\ndir = p:\\App\\logs\\questions\\%answer% \nfrontdir = c:\\answer\\%answer%\nfile = %frontdir%\\Q.txt\nMasterfile = %basedir%\\Q-Master.txt\n\n\nfileappend, Q-%answer%__%time% `n, %A_WorkingDir%\\logs\\questions\\%answer%\\Q.txt ;-- make text inside folder\nfileappend, Q-%answer%__%time% `n, p:\\App\\logs\\questions\\%answer%\\Q.txt ;-- make text inside folder\nFileAppend, -%answer%__%time% `n, %A_WorkingDir%\\logs\\Q-google.txt ;--- update global log file11\nFileAppend, -%answer%__%time% `n, p:\\App\\logs\\Q-google.txt ;--- update global log file11\nfileappend, -%answer%__%time% `n ,%file%\nfileappend, -%answer%__%time% `n ,%masterfile%\n\nfiledir = %file%\n;run, %frontdir%\n;run, %frontfile%\n;global frontfile := %file%\n;global frontdir := %frontdir%\nreturn \n\n\n;==============================[]=================================[]\n;================\n\n\n\nxbutton1 & n::\n\n;MsgBox, % \"1: `n \" A_PriorHotkey\nwhat := chrome_name(1)\nMsgBox, % \"1: `n \" what\nreturn\n\nxbutton2 & n::\n\nwhat := chrome_name(2)\nMsgBox, % \"2: `n \" what\nreturn\nF17::\nsend, f17\ntoggle := !toggle\nif (toggle)\nMsgBox, % \"0: `n on\" \n\nMsgBox, % \"1: `n off\" \nreturn\n/*\nf14::\ndkz2 := chrome_name(2)\nchrome_group(2)\n\nreturn\nf17::\n\nwhat := chrome_name(2)\nMsgBox, % \"2: `n \" what\nreturn\nf20::\n\nwhat := chrome_name(\"0\")\nMsgBox, % \"0: `n \" what\nreturn*/\n;================\n\n\nxbutton2 & enter::\nrun, %frontdir%\nrun, %file%\n\nToolTip, % frontfile \nToolTip, % frontdir \n;run %frontdir%\n;run, %file%\nreturn\n\n\n;================\nxbutton2 & v::\nFileAppend, `n`r -%clipboard%-->%time% `; , %frontfile%\nFileAppend, `n`r -%clipboard%-->%time% `; , %file%\nreturn\n\n;================\nxbutton2 & c::\nFileAppend, `n`r -%clipboard%-->%time% `; , %frontfile%\nFileAppend, `n`r -%clipboard%-->%time% `; , %file%\nreturn\n\n\n;================\n;------------------------------- inside of ss(), save the file in \"frontfolder\" dir.\nxbutton2 & PrintScreen::\nss()\nreturn\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]\n\n\n\n\nxbutton2 & a::\n ;get recent files in order (via a file loop)\n;CSIDL_RECENT := 8\nVarSetCapacity(vDirRecent, 260*2, 0)\nDllCall(\"shell32\\SHGetFolderPath\", Ptr,0, Int,8, Ptr,0, UInt,0, Str,vDirRecent)\nvOutput := \"\"\nVarSetCapacity(vOutput, 100000*2)\nLoop, Files, % vDirRecent \"\\*.lnk\", F\n{\n    vPath := A_LoopFileFullPath\n    FileGetShortcut, % vPath, vTarget\n    vAttrib := FileExist(vTarget)\n    if InStr(vAttrib, \"D\") || !vAttrib\n        continue\n    vOutput .= A_LoopFileTimeModified \"`t\" vTarget \"`n\"\n}\nSort, vOutput, R\nvOutput := RegExReplace(vOutput, \"(?<=^|`n)\\d{14}`t\")\nClipboard := StrReplace(vOutput, \"`n\", \"`r`n\")\n\nMsgBox, % vOutput\nreturn\n\n\nAlt+T = Toggle AlwaysOnTop state of the active window\nxbutton2 & t::WinSet, AlwaysOnTop, Toggle, A\nreturn \nxbutton1 & t::WinSet, AlwaysOnTop, Toggle, A\nreturn \n\nxbutton2 & s::\nInputBox, inp, , string to search,,\n;InputBox, inp, , string to search, HIDE, , , , , Font, Timeout, Default]\nfindstring(inp,*.*,2,0)\nmsgbox,% findstring(inp, \"*.ahk\")\nmsgbox,% findstring(inp, \"*.ahk\")\nt := {}\nt := findstring(inp,*.*,0,0)\nreturn\n\n\n\n\n\n\n\n\nxbutton2 & f8::            ; copy info about the current mouse location to the clipboard\n;Gosub, WatchCursor  \nclipboard= ahk_id %id%`r`nahk_class %class%`r`n%title%`r`nControl: %control%`r`ntext: >>>`r`n%text%\nreturn\n;|||||||||||||||||||||||||||||||||||||||||||\nxbutton2 & f9::            ; copy the info (formatted as Ahk_code) to the clipboard\nahk_code=\n(\n  ControlGetText, text, %control%, %title%\n  ControlGetText, text, %control%, ahk_class %class%\n)\nclipboard= %ahk_code%\nmsgbox %ahk_code%\nreturn\n\n;-------------------------------------------------------------------------------------------\n^xbutton2::\n;btt(\"This is BeautifulToolTip\")\n;btt(\"This is BeautifulToolTip`n`nWhichToolTip = 2\",500,500,2)\n;Sleep, 5000\nbtt(\"This is BeautifulToolTip\",,,, \"Style4\")\nsleep, 1000\nbtt(,,,1)\nReturn\n\nxbutton2 & m::\nLf = `n\nLoop, Read, P:\\app\\app\\logs\\q-google.txt\n   {\n   If A_LoopReadLine = \n        Lf = \n   TTContent = %TTContent%%A_LoopReadLine%%Lf%\n   } \nToolTip, %TTContent%,5000\nmsgbox % TTContent . \"`n continue?\"\nSleep, 1000\nToolTip\nreturn\n\nf13 & 2::\nToolTip, % ggg.=\"1 :: \" timeSinceLastCall(1)/1000 * wps  \"¢`n\"\nreturn\nf14 & 3::ToolTip, % ggg.=\"2 :: \" timeSinceLastCall(2) \"`n\"\nf14 & 4::ggg:=\"\", timeSinceLastCall(0,1) ; reset everything\n\n\n\n\n/*randomgenerator:\nrandom, ranVar , 1, 100000000\nm(ranVar)\nreturn\n*/\n\n\nxbutton2 & e::\n    winactivate, ahk_exe sublime_text.exe\n      ;edit \n    return\nxbutton2 & r:: ;-------------------------------------edit, reload, escape\n    send ^s \n    reload \n    return\nxbutton2 & esc::exitapp\n\nxbutton2 & k::\nkeyhistory \nreturn\n\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ INCLUDES ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[INCLUDES ]\n#include p:\\app\\app\\((start)-winmin.ahk ;mouseb2 & h,j\n#include p:\\app\\app\\((start)-winmin2.ahk",
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/collection/((start)2.ahk",
			"file_size": 21151,
			"file_write_time": 133184081770942684,
			"settings":
			{
				"buffer_size": 20299,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/parseahk-functions-results.ahk",
			"settings":
			{
				"buffer_size": 457,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/gui.ah2",
			"settings":
			{
				"buffer_size": 270,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					7,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAAAAAAAAAAAAAQAAAAAAAAAAAAAA",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAcw",
					"DQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAAPC/"
				],
				[
					3,
					1,
					"insert",
					{
						"characters": "GCOM"
					},
					"BAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					4,
					"left_delete",
					null,
					"BAAAAAMAAAAAAAAAAwAAAAAAAAABAAAATQIAAAAAAAAAAgAAAAAAAAABAAAATwEAAAAAAAAAAQAAAAAAAAABAAAAQwAAAAAAAAAAAAAAAAAAAAABAAAARw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": "gcom"
					},
					"BAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAABAAAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					6,
					4,
					"left_delete",
					null,
					"BAAAAAMAAAAAAAAAAwAAAAAAAAABAAAAbQIAAAAAAAAAAgAAAAAAAAABAAAAbwEAAAAAAAAAAQAAAAAAAAABAAAAYwAAAAAAAAAAAAAAAAAAAAABAAAAZw",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAQAAAAAAAAABAAAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"paste_and_indent",
					null,
					"AQAAAAAAAAAAAAAADgEAAAAAAAAAAAAA",
					"BgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "/D/lib/V2/SQLite/CSQLite.ahk",
			"settings":
			{
				"buffer_size": 17247,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					""
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Default"
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Run"
				]
			],
			[
				"Packages/AutoHotkey/AutoHotkey.sublime-build",
				"Default"
			]
		],
		[
			[
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					""
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Default"
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Run"
				],
				[
					"Packages/AutoHotkey2/Autohotkey2.sublime-build",
					""
				]
			],
			[
				"Packages/AutoHotkey/AutoHotkey.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/AutoHotkey2/Autohotkey2.sublime-build",
					""
				],
				[
					"Packages/SendCode/build_systems/IPython - Source File.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		],
		[
			[
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					""
				],
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					"Default"
				],
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
				"Default"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"term",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"fold",
				"Code Folding: Select Folded"
			],
			[
				"run",
				"AutoHotkey v2 - runner"
			],
			[
				"termi",
				"Terminus: List Shells"
			],
			[
				"termin",
				"Terminus: List Shells"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"autoho",
				"AutoHotkey - Run"
			],
			[
				"auto",
				"AutoHotkey v2 - runner"
			],
			[
				"",
				"Build With: AutoHotkey"
			],
			[
				"tern",
				"Terminus: Close All"
			],
			[
				"terminus",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"refres",
				"Preferences: LSP Settings"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"syntaxfold ke",
				"Preferences: SyntaxFold Keybindings - Default"
			],
			[
				"syntax",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"fold ",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"ke",
				"Preferences: Key Bindings"
			],
			[
				"syntaxa",
				"SyntaxFold: Fold All"
			],
			[
				"settings",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"preferences pack",
				"Preferences: SyntaxFold Keybindings - Default"
			],
			[
				"package",
				"Package Control: List Unmanaged Packages"
			],
			[
				"resouu",
				"PackageResourceViewer: Open Resource"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"history",
				"History: Revert Modification"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Preferences: SideBarTools Settings"
			],
			[
				"view",
				"View: Toggle Side Bar"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"viewer",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"white sp",
				"Trim Trailing White Space"
			],
			[
				"du",
				"File: Duplicate"
			],
			[
				"ahk",
				"AutoHotkey - Run"
			],
			[
				"dupl",
				"File: Duplicate"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"com",
				"AutoHotkey - Compile"
			],
			[
				"search",
				"File: Search Files"
			],
			[
				"find ",
				"Preferences: Search in Project Settings – Default"
			],
			[
				"conda",
				"Conda: List Packages"
			],
			[
				"high",
				"HighlightWords: Highlight Words"
			],
			[
				"highl",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"goto",
				"Goto Documentation"
			],
			[
				"rename",
				"Rename File"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 164.0,
		"history":
		[
			"sublime.log_commands(True)",
			"gh repo clone hi5/Rufaydium-Webdriver"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch"
	],
	"file_history":
	[
		"/C/Users/donov/OneDrive/Desktop/CSharp-MVC-Local-Groups-Social-Mangement-System-master/Kingdom/ClientApp/ClientApp.esproj",
		"/D/(github)/IMS/fresh/eShop-Complete-SourceCodes (1)/eShop.Web.CustomerPortal/wwwroot/exampleJsInterop.js",
		"/C/Users/donov/OneDrive/Desktop/CSharp-MVC-Local-Groups-Social-Mangement-System-master/CSharp-MVC-Local-Groups-Social-Mangement-System-master/Kingdom.sln",
		"/D/(github)/.Kingdom/.filenesting.json",
		"/D/(github)/.Kingdom/.vs/ProjectSettings.json",
		"/D/(phone)/internal/DCIM/Screenshots/Screenshot_20230312-141645_Edge.jpg",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/1_globalcoder_v2ref - Copy.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/static-ex-3-nonobj.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/0_globalcoder_runner.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/stats.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/UIAForm.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/hellbent.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/2.GlobalCoder.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/GlobalCoder.ahk",
		"/G/((top))/ahk-main/ahk-main/menu.ahk",
		"/J/!dev stuff/(AutoHotkey)/87BuiltInAHKStudioHotkeys/IntroToClasses/Objects-Tutorial.ahk",
		"/D/opencv/build/install/samples/python/color_histogram.py",
		"/D/opencv/opencv-4.5.2/cmake/OpenCVGenSetupVars.cmake",
		"/C/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/version.json",
		"/D/opencv/build/CMakeFiles/opencv_junk/version.junk",
		"/C/Python311/Lib/site-packages/cv2/config-3.11.py",
		"/C/Python311/Lib/site-packages/cv2/load_config_py2.py",
		"/C/Python311/Lib/site-packages/cv2/load_config_py3.py",
		"/C/Python311/Lib/site-packages/cv2/config.py",
		"/C/Python311/Lib/site-packages/cv2/__init__.py",
		"/C/Users/donov/OpenCV-Cuda/b1/modules/python_tests/RUN_TESTS.dir/nasm.props",
		"/C/Users/donov/OpenCV-Cuda/b1/modules/python_tests/cmake_install.cmake",
		"/C/Users/donov/OneDrive/Desktop/cv/OpenCV2/opencv/build/OpenCVConfig.cmake",
		"/D/OpenCvCuda-bkup/build/opencv2/cvconfig.h",
		"/D/OpenCvCuda-bkup/build/opencv2/opencv_modules.hpp",
		"/C/Users/donov/OneDrive/Desktop/cv/build/python_loader/cv2/config.py",
		"/C/Users/donov/OpenCV-Cuda/build/python_loader/cv2/config.py",
		"/C/Users/donov/OpenCV-Cuda/build/python_loader/cv2/__init__.py",
		"/C/Users/donov/OpenCV-Cuda/build/python_loader/cv2/load_config_py3.py",
		"/C/Users/donov/OpenCV-Cuda/build/python_loader/setup.py",
		"/C/Users/donov/OpenCV-Cuda/opencv/sources/modules/python/python_loader.cmake",
		"/J/DCIM/code/stuff/OpenCV2/opencv/build/python/cv2/python-3.9/cv2.pyd",
		"/D/(github)/PythonCudaGpuOpenCVProject1/main/test.py",
		"/C/Users/donov/OneDrive/Desktop/VSConfigure/src/VSConfigure.txt",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/6 - acc-Examples/8/(ahk-text-finder).ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/6 - acc-Examples/8/findstringinfile.ahk",
		"/D/(github)-MAINS/Free-OCR-API-ASP.NET/README.md",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/.codehelper2.ahk",
		"/J/recovD/Data Recovery 2023-01-03 at 05.43.06/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/(start)/.codehelper2.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/GlobalCoder-settings-endkeys.txt",
		"/D/lib/UIA_Browser.ahk",
		"/D/lib/UIA2.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/10 - MSSA/README_WK02.md",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/10 - MSSA/README_WK03.md",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/10 - MSSA/README_WK01.md",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/logs/notes/Keyboard.md",
		"/D/(github)/ahkzeanah/AHKZeanah/examples/com-download.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/10 - MSSA/Week_10/tour-of-heroes/Info.md",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/10 - MSSA/README_WK05.md",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/10 - MSSA/README_WK10.md",
		"/J/!dev stuff/(AutoHotkey)/87BuiltInAHKStudioHotkeys/MergingSimilarTextFiles/MergingSimilarTextFiles.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/GlobalCoder-slowed.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder.sublime-project",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/GlobalCoder.ah1",
		"/G/((top))/AHK-Studio-master/AHK-Studio-master/Plugins/Middle Scroll.ahk",
		"/G/((top))/ahk-main/ahk-main/README.md",
		"/G/((top))/.ahk/Untitled-1.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/AmountUsed.csv",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/secrets.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/.gitignore",
		"/D/working/GPT3-AHK-main/GPT3-AHK-main/GPT3-AHK_v2new.ahk",
		"/D/(github)-MAINS/GlobalCoder/CustomMenuFiles/5 - examples/pathmanager-gpt.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/5 - examples/pathmanager-gpt.ahk",
		"/D/working/GPT3-AHK-main/GPT3-AHK-main/GPT3-AHK-testing.ahk",
		"/D/working/GPT3-AHK-main/GPT3-AHK-main/GPT3-AHK.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/GPT3-AHK.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/gpt.ahk",
		"/D/lib/ShinsImageScanClass-main/ShinsImageScanClass-main/Examples/gptfiles-via-class.ahk",
		"/D/lib/ShinsImageScanClass-main/ShinsImageScanClass-main/Examples/gptfiles.ahk",
		"/D/(github)-MAINS/GlobalCoder/GPT3-AHK.ahk",
		"/C/Users/donov/Downloads/Chat-GPT3-Summary/Chat GPT3 Summary/GPT3 Summary.ahk",
		"/D/(github)-MAINS/GlobalCoder/gpt.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/Chat GPT3 Summary/GPT3 Summary.ahk",
		"/D/lib/ShinsImageScanClass-main/ShinsImageScanClass-main/Examples/gpt.ahk",
		"/D/lib/ShinsImageScanClass-main/ShinsImageScanClass-main/Examples/gpt-savefile.ahk",
		"/G/((top))/(start)/gpt.ahk",
		"/G/((top))/ahkdls/Class_RichEdit-master/Class_RichEdit-master/Sources/gpt-filemenu.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/5 - examples/filecomparer-gpt.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/filecomparer-gpt.ahk",
		"/D/(github)-MAINS/GlobalCoder/CustomMenuFiles/5 - examples/filecomparer-gpt.ahk",
		"/D/(github)-MAINS/GlobalCoder/filecomparer-gpt.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/5 - examples/class MyTextEditor-gpt.ahk",
		"/D/(github)-MAINS/GlobalCoder/CustomMenuFiles/5 - examples/class MyTextEditor-gpt.ahk",
		"/G/((top))/Program Files/AutoHotkey/lib/.AHK-libs-and-classes-collection/libs/o-z/VLCHTTP3.ahk",
		"/H/folders-DKTP/AHK-Scripts-master/AHK-Scripts-master/@Saved/AHK.net Archive/~specter333/HID/SP _vlc_commands.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/collection/!!GlobalCoder_Catch_All/vlc.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/Minerva-PowerToys.ahk",
		"/C/Users/donov/OneDrive/Desktop/Process-Script (1).ahk",
		"/C/Users/donov/OneDrive/Desktop/Process-Script.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/read-ini.ahk",
		"/D/(github)-MAINS/mm-autohotkey-master/mm-autohotkey-master/Appbar/_TestMultiple.ahk",
		"/D/(github)-MAINS/mm-autohotkey-master/mm-autohotkey-master/Appbar/_DebugView.ahk",
		"/D/(github)-MAINS/mm-autohotkey-master/mm-autohotkey-master/Appbar/_Taskbar.ahk",
		"/D/(github)-MAINS/mm-autohotkey-master/mm-autohotkey-master/Dlg/_Test.ahk",
		"/D/(github)-MAINS/mm-autohotkey-master/mm-autohotkey-master/Dlg/Dlg.ahk",
		"/D/(github)-MAINS/mm-autohotkey-master/mm-autohotkey-master/HiEdit/_Test.ahk",
		"/D/(github)-MAINS/mm-autohotkey-master/mm-autohotkey-master/ShowMenu/_Test.ahk",
		"/D/(github)-MAINS/mm-autohotkey-master/mm-autohotkey-master/Toolbar/_Test.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/5 - examples/0_Webview2-Examples/Example6 - Open AHK-Documentation and enter Text.ah2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/README.md",
		"/d/lib/Vis2.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/lib/Sending.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/Gdip.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/((fUNCTIONS)).ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/!.ahk",
		"/D/lib/((fUNCTIONS)).ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/lib/Gdip.ahk",
		"/C/Users/donov/AppData/Roaming/Sublime Text/Packages/User/MyOwnLang.tmLanguage.cache",
		"/C/Users/donov/OneDrive/Desktop/M And K Counter 2.0.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/Settings.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/all-working-backup.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/test.MPL",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/Minerva4.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/collection/1_myminerva/Minerva-updated/Minerva-main/aNEWGlobalCoder.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/settings.ini",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/includes/read-ini.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/collection/1_myminerva/Minerva-new/Minerva-main/Minerva4.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/Minerva-Handlers.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/Minerva-Statistics.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/collection/1_myminerva/Minerva-updated/Minerva-main/Minerva4.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/fileread-headers.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/GlobalCoder - analyze.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/lemmon-runner.ahk"
	],
	"find":
	{
		"height": 27.2
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"gco",
			"tod",
			"GCshowing",
			"j::",
			"capslock",
			"makegui",
			"REGEXER()",
			"traymen",
			"startup()",
			"tray",
			"settingsrecent",
			"sendclipboard",
			"buttonhelp",
			"#incl",
			"gdi",
			"f24 & f",
			"find",
			"& f",
			"find",
			"s::",
			"& s",
			"finds",
			"google",
			"Rshift",
			"Rctrl",
			"Rctrl &",
			"f24 &",
			"f24 & r",
			"SelectHotpath",
			"savesc",
			"onexit",
			"f14",
			"prepare",
			"menuf",
			"value",
			"folderlooper("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/sizeof.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17747,
						"regions":
						{
						},
						"selection":
						[
							[
								6806,
								6806
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkeyzeanah",
							"buffer_scroll_name": "d71f36f4",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/Lib/sizeof.ah2",
							"spell_check": false,
							"syntax": "Packages/User/AutoHotkeyzeanah.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 919.2,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/D/working/capslock-multi.ahk",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1378,
						"regions":
						{
						},
						"selection":
						[
							[
								1252,
								1256
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "885fff3e",
							"lsp_uri": "file:///D:/working/capslock-multi.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1350.4,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/((functions)).ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68550,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "Packages/Theme - Default/common/bookmark.png",
								"regions":
								[
									[
										12968,
										12233
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								682,
								682
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkeyzeanah",
							"buffer_scroll_name": "8c36c8f6",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/Lib/%28%28functions%29%29.ah2",
							"spell_check": false,
							"syntax": "Packages/User/AutoHotkeyzeanah.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 540.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/((functions)).ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 65098,
						"regions":
						{
						},
						"selection":
						[
							[
								27274,
								27274
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "659e56a8",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/Lib/%28%28functions%29%29.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 16344.8,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/Lib/Gdipall.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 115637,
						"regions":
						{
						},
						"selection":
						[
							[
								185,
								185
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "d63c7bf2",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/Lib/Gdipall.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 70.4,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "plain text",
							"default_dir": "D:\\(github)\\GlobalCoder\\gc\\GlobalCoder",
							"lsp_uri": "buffer://sublime/567",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/!.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21629,
						"regions":
						{
						},
						"selection":
						[
							[
								19485,
								19485
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "c7e9b3e7",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/%21.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14563.2,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/aNEWGlobalCoder.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12706,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "a9855653",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/aNEWGlobalCoder.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2700.8,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/d/lib/UIA_Browser.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39644,
						"regions":
						{
						},
						"selection":
						[
							[
								14637,
								14637
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "d9a0882f",
							"lsp_uri": "file:///D:/lib/UIA_Browser.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 8.8,
						"translation.y": 4137.6,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/GuiControls-Script.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 342,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "e000ef9c",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/GuiControls-Script.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 37,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Gui-Script (3).ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 929,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "d38fd3b9",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/Gui-Script%20%283%29.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/GuiFromHwnd-gui.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 129,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "db4e987a",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/GuiFromHwnd-gui.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/GuiControls-Script (1).ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 553,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "b187158c",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/GuiControls-Script%20%281%29.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/EasyWindowDrag_(KDE).ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4742,
						"regions":
						{
						},
						"selection":
						[
							[
								250,
								250
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "32a96ea1",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/EasyWindowDrag_%28KDE%29.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/WindowShading.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1754,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "f4e6ed6a",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/WindowShading.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/SetTimer-Script.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1607,
						"regions":
						{
						},
						"selection":
						[
							[
								725,
								725
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "88bd6ed1",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/SetTimer-Script.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Sleep-Script.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 831,
						"regions":
						{
						},
						"selection":
						[
							[
								285,
								285
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "5e5a9a76",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/Sleep-Script.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/(obj).ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5420,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "d111b350",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/%28obj%29.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/(guiresizer-ex.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8744,
						"regions":
						{
						},
						"selection":
						[
							[
								3228,
								3228
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "d37f9522",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/%28guiresizer-ex.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 809.6,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/D/(github)-MAINS/2All-My-Lib/dllsolver/dllsolver.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7660,
						"regions":
						{
						},
						"selection":
						[
							[
								61,
								61
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "646f77e6",
							"lsp_uri": "file:///D:/%28github%29-MAINS/2All-My-Lib/dllsolver/dllsolver.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/mvc.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1950,
						"regions":
						{
						},
						"selection":
						[
							[
								161,
								161
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "b5ca4ff6",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/mvc.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/mvc2.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2502,
						"regions":
						{
						},
						"selection":
						[
							[
								2502,
								2502
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "3c070425",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/mvc2.ahk",
							"open_with_edit": true,
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 432.8,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/cooldowntimer.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 890,
						"regions":
						{
						},
						"selection":
						[
							[
								890,
								890
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "f648476e",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/cooldowntimer.ahk",
							"open_with_edit": true,
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/(guiresizer.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5530,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								5530
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "1062dc68",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/%28guiresizer.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2882.4,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/KeyboardOnScreen.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4871,
						"regions":
						{
						},
						"selection":
						[
							[
								900,
								932
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "86dc50d9",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/KeyboardOnScreen.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 270.4,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Gui-Script (2).ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 807,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "128cf7a4",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/Gui-Script%20%282%29.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Gui-Script (1).ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1016,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "cecacbf7",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/Gui-Script%20%281%29.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Gui-Script.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3699,
						"regions":
						{
						},
						"selection":
						[
							[
								92,
								92
							],
							[
								93,
								93
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "cfc42ede",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/Gui-Script.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Menu-Script (2).ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1354,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "9b6d8abe",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/Menu-Script%20%282%29.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 39,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/Menu-Script (3)-ICON.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 637,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "c86a6c4e",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/Menu-Script%20%283%29-ICON.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 38,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/examples/2.DllCall-Script.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 672,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "645d56b8",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/examples/2.DllCall-Script.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 40,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/AHKCommandPicker.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 66408,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "8c63c02a",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/singles/AHKCommandPicker.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 50,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/GDIP.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 115637,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "4c1481c6",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/singles/GDIP.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 49,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/globalcoder-captain.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4096,
						"regions":
						{
						},
						"selection":
						[
							[
								246,
								246
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "953ddd8e",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/singles/globalcoder-captain.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 48,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/JSON.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11407,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "6884c02f",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/singles/JSON.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 47,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/Minerva-PowerToys.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1767,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "ebc96d5a",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/singles/Minerva-PowerToys.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 44,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/JXON.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6086,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "089d314a",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/singles/JXON.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 46,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 37,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/Minerva-Statistics.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1102,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "a1a9e20f",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/singles/Minerva-Statistics.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 43,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 38,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/Minerva-Handlers.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1795,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "29167183",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/singles/Minerva-Handlers.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 45,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 39,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/WatchFolder.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12550,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "a4a79a88",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/singles/WatchFolder.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 42,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 40,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/read-ini.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1236,
						"regions":
						{
						},
						"selection":
						[
							[
								184,
								184
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "77262ad8",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/singles/read-ini.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 41,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/sandbox/UIAForm/UIAForm/UIAForm.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3925,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "fdfe4530",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/sandbox/UIAForm/UIAForm/UIAForm.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 42,
					"file": "/D/(github)/ahkzeanah/AHKZeanah/UIAForm.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1872,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "bade255a",
							"lsp_uri": "file:///D:/%28github%29/ahkzeanah/AHKZeanah/UIAForm.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 43,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/singles/windowsmenu.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4127,
						"regions":
						{
						},
						"selection":
						[
							[
								3529,
								3529
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "6dbbf6a4",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/singles/windowsmenu.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1760.0,
						"zoom_level": 1.0
					},
					"stack_index": 41,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 44,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/2_gui_test.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3851,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "a9967d8a",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/2_gui_test.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 102,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 45,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/autokill.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1054,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "b186bc6c",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/autokill.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 101,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 46,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/cv2.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8914,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkeyzeanah",
							"buffer_scroll_name": "8e947632",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/cv2.ah2",
							"spell_check": false,
							"syntax": "Packages/User/AutoHotkeyzeanah.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 100,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 47,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/example.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 587,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "e26ef195",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/example.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 48,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/Filefromsnipe.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 939,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "plain text",
							"buffer_scroll_name": "29a090d0",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/Filefromsnipe.txt",
							"spell_check": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 99,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 49,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/fib-example.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2160,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "686c4958",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/fib-example.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 98,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 50,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder (2).ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 76495,
						"regions":
						{
						},
						"selection":
						[
							[
								35982,
								35983
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "e4859ac7",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder%20%282%29.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 22861.6,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 51,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder (3).ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 67811,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "5a628d2d",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder%20%283%29.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 97,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 52,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder (4).ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 67811,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "35294120",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder%20%284%29.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 96,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 53,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-3keyexample.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 519,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "2f964c08",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-3keyexample.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 54,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-backup.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 73442,
						"regions":
						{
						},
						"selection":
						[
							[
								35140,
								35144
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "79b944b7",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-backup.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 24067.2,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 55,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-bk.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 89187,
						"regions":
						{
						},
						"selection":
						[
							[
								5968,
								5968
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "6471d5e0",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-bk.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3199.2,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 56,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-cam.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 62292,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "3f23c688",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-cam.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 95,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 57,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-database.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13538,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "6aacf9a5",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-database.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 94,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 58,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-misc.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 251,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "f08f3f83",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-misc.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 93,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 59,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-osd.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 103262,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "57947219",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-osd.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 92,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 60,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-pass.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "ee448d52",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-pass.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 91,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 61,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 67818,
						"regions":
						{
						},
						"selection":
						[
							[
								2252,
								2252
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "a3097488",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1640.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 62,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-references.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2437,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "a155d8d3",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-references.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 90,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 63,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-shinsoverlay-example.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14172,
						"regions":
						{
						},
						"selection":
						[
							[
								14172,
								14172
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "ac279b55",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-shinsoverlay-example.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7723.2,
						"zoom_level": 1.0
					},
					"stack_index": 89,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 64,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-shinsoverlay-example2.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 715,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "e21ebb49",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-shinsoverlay-example2.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 88,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 65,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-scratch.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12948,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "eb09b684",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-scratch.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 51,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 66,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-windows.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 978,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "ea783d49",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-windows.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 87,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 67,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/globalcoder-winkey-showtaskbar.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3733,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "d11a3319",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/globalcoder-winkey-showtaskbar.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 53,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 68,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/hellbent.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 38636,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "873cf0c4",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/hellbent.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 86,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 69,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/IntelliSense.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5904,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "752cfcf2",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/IntelliSense.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 85,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 70,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/keylist.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 990,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "8d8f991f",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/keylist.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 84,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 71,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/logTimer.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5277,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "fde929db",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/logTimer.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 83,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 72,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/maincv2.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8914,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkeyzeanah",
							"buffer_scroll_name": "f8718832",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/maincv2.ah2",
							"spell_check": false,
							"syntax": "Packages/User/AutoHotkeyzeanah.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 82,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 73,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/menu-search.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3840,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "46cf0234",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/menu-search.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 81,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 74,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/menuglobalcoder.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3214,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "8605d5e0",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/menuglobalcoder.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 52,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 75,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/readself.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 128,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "de2f2d78",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/readself.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 80,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 76,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/recorder.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 50130,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "e0d3a065",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/recorder.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 79,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 77,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/shin-scan-example1.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 600,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "766abc93",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/shin-scan-example1.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 78,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 78,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/shin-game-BallClicker.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7440,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "d320e8bb",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/shin-game-BallClicker.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 77,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 79,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/shinEverythingExample.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13563,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "6709aa06",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/shinEverythingExample.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 76,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 80,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/shinGeneralExample.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3649,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "65a808ef",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/shinGeneralExample.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 75,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 81,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/shinMouseDots.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2277,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "231a73ef",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/shinMouseDots.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 74,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 82,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/shinPolygons.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2079,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "de228732",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/shinPolygons.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 73,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 83,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/ShinsGameClass.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39096,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "8d0b65ad",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/ShinsGameClass.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 72,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 84,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/ShinsImageScanClass.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 93359,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "70d9817d",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/ShinsImageScanClass.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 71,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 85,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/ShinsOverlayClass.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 41311,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "5c655f0e",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/ShinsOverlayClass.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 70,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 86,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/sql_command_file.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 88,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "plain text",
							"buffer_scroll_name": "9df79686",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/sql_command_file.txt",
							"spell_check": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 69,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 87,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/sqlite-ex.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1353,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "44b6ad19",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/sqlite-ex.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 68,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 88,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/sqlite-ex2.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1236,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "26fff0f3",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/sqlite-ex2.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 67,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 89,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDB_sample-myexample.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13538,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "d36e83cb",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/SQLiteDB_sample-myexample.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 66,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 90,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDB_sample-workshop.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11010,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "bdff3013",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/SQLiteDB_sample-workshop.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 65,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 91,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDB_sample.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11803,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "a7971232",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/SQLiteDB_sample.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 64,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 92,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDB_sample4.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3623,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "0ee86ab6",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/SQLiteDB_sample4.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 63,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 93,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDB_sample2.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14446,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "84c0bd59",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/SQLiteDB_sample2.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 62,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 94,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDB_sampleCheck.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 897,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "212fb9d5",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/SQLiteDB_sampleCheck.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 61,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 95,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/SQLiteDBv2_sample.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11729,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkeyzeanah",
							"buffer_scroll_name": "0358a2f2",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/SQLiteDBv2_sample.ah2",
							"spell_check": false,
							"syntax": "Packages/User/AutoHotkeyzeanah.sublime-syntax",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 60,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 96,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/sqliteex2.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3960,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkeyzeanah",
							"buffer_scroll_name": "3593e1c2",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/sqliteex2.ah2",
							"spell_check": false,
							"syntax": "Packages/User/AutoHotkeyzeanah.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 59,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 97,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/sqliteex.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6641,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "6dcab9b6",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/sqliteex.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 58,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 98,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/stringer.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2798,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "4ff8b2b1",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/stringer.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 57,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 99,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/teams-funcs.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1085,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "4060af1d",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/teams-funcs.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 56,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 100,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/testtextfind.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 759,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "4b115e5a",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/testtextfind.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 55,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 101,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/textfinderex.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 109999,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "182d761e",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/textfinderex.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 54,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 102,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/sqliteex2.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3960,
						"regions":
						{
						},
						"selection":
						[
							[
								3960,
								834
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "30bce210",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/sqliteex2.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 702.4,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 103,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/0_globalcoder.ahk",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 97062,
						"regions":
						{
						},
						"selection":
						[
							[
								31768,
								31768
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "7ce423d7",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/0_globalcoder.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 19592.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 104,
					"file": "/C/Users/donov/OneDrive/Desktop/bing.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2014,
						"regions":
						{
						},
						"selection":
						[
							[
								1761,
								1761
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkeyzeanah",
							"buffer_scroll_name": "21ad1461",
							"lsp_uri": "file:///C:/Users/donov/OneDrive/Desktop/bing.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 844.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 105,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/6 - Examples/imenu.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3741,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								2
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "1cffe5c0",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/6%20-%20Examples/imenu.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 106,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/6 - Examples/menuclass.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16519,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "7d9e6228",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/6%20-%20Examples/menuclass.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 107,
					"file": "/C/Users/donov/OneDrive/Desktop/CSharp-MVC-Local-Groups-Social-Mangement-System-master/Kingdom/Kingdom/appsettings.Development.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 119,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "json",
							"buffer_scroll_name": "389c959c",
							"lsp_uri": "file:///C:/Users/donov/OneDrive/Desktop/CSharp-MVC-Local-Groups-Social-Mangement-System-master/Kingdom/Kingdom/appsettings.Development.json",
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 108,
					"file": "/C/Users/donov/OneDrive/Desktop/CSharp-MVC-Local-Groups-Social-Mangement-System-master/Kingdom/Kingdom/appsettings.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 174,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bs_sintax": "json",
							"buffer_scroll_name": "7b20cdad",
							"lsp_uri": "file:///C:/Users/donov/OneDrive/Desktop/CSharp-MVC-Local-Groups-Social-Mangement-System-master/Kingdom/Kingdom/appsettings.json",
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 109,
					"file": "/C/Users/donov/OneDrive/Desktop/CSharp-MVC-Local-Groups-Social-Mangement-System-master/Kingdom/Kingdom/ClaimsPrincipalExtensions.cs",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 269,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								},
								{
									"characters": ". ",
									"registration_id": "cc433ac7-c05e-48c1-84c4-bba44b4799e6",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "OmniSharp"
								},
								{
									"characters": ". ",
									"registration_id": "cc433ac7-c05e-48c1-84c4-bba44b4799e6",
									"selector": "meta.tag, source - comment - string.quoted.double.block - string.quoted.single.block - string.unquoted.heredoc",
									"server": "OmniSharp"
								}
							],
							"bs_sintax": "unityc#",
							"buffer_scroll_name": "ceb7e876",
							"lsp_active": true,
							"lsp_hover_provider_count": 2,
							"lsp_uri": "file:///C:/Users/donov/OneDrive/Desktop/CSharp-MVC-Local-Groups-Social-Mangement-System-master/Kingdom/Kingdom/ClaimsPrincipalExtensions.cs",
							"show_definitions": false,
							"spell_check": false,
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 110,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/scratch/1ParseAHK.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 37651,
						"regions":
						{
						},
						"selection":
						[
							[
								13938,
								13938
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "7f372e49",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/scratch/1ParseAHK.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4590.4,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 111,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/1_globalcoder/globalcoder2.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 68816,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "733f570c",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/1_globalcoder/globalcoder2.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4920.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 112,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/collection/((start)2.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 20299,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "4cd5a2f6",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/collection/%28%28start%292.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 113,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/parseahk-functions-results.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 457,
						"regions":
						{
						},
						"selection":
						[
							[
								456,
								456
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "5981ba67",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/%28dev%29/parseahk-functions-results.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Zeanah/AutoHotkey.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
				{
					"buffer": 114,
					"file": "/D/(github)/GlobalCoder/gc/GlobalCoder/(dev)/gui.ah2",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 270,
						"regions":
						{
						},
						"selection":
						[
							[
								167,
								167
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"auto_name": "",
							"bs_sintax": "plain text",
							"buffer_scroll_name": "b360e119",
							"lsp_uri": "buffer://sublime/633",
							"spell_check": false,
							"syntax": "Packages/User/AutoHotkeyzeanah.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 115,
					"file": "/D/lib/V2/SQLite/CSQLite.ahk",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17247,
						"regions":
						{
						},
						"selection":
						[
							[
								14906,
								14906
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "a1830dec",
							"lsp_uri": "file:///D:/lib/V2/SQLite/CSQLite.ahk",
							"spell_check": false,
							"syntax": "Packages/AutoHotkey2-master/Autohotkey2.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 164.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.2
	},
	"input":
	{
		"height": 54.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			],
			[
				0,
				1,
				1,
				2
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			0.425199932479,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 126.400001526
	},
	"output.Terminus 2":
	{
		"height": 126.400001526
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 102.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/AutoHotkey2-master/Autohotkey2.sublime-build",
	"project": "sub..sublime-project",
	"replace":
	{
		"height": 51.2
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"P:\\App\\App\\ws\\tools & WS.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 300.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 2,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 313.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
