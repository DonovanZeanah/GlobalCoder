{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"go",
				"Gosub"
			],
			[
				"sys",
				"SysGet"
			],
			[
				"a_loo",
				"A_LoopFileName"
			],
			[
				"no",
				"NoTrayIcon"
			],
			[
				"work",
				"SetWorkingDir"
			],
			[
				"DE",
				"Destroy"
			],
			[
				"msg",
				"MsgBox"
			],
			[
				"got",
				"Goto"
			],
			[
				"file",
				"FileAppend"
			],
			[
				"close",
				"Close()"
			],
			[
				"gui",
				"Gui"
			],
			[
				"Guic",
				"GuiEscape"
			],
			[
				"guio",
				"GuiClose"
			],
			[
				"hide",
				"HideGUI"
			],
			[
				"ahk_",
				"ahk_exe"
			],
			[
				"setw",
				"SetWorkingDir"
			],
			[
				"a_this",
				"A_ThisFunc"
			],
			[
				"c",
				"CustomMenuFiles"
			],
			[
				"winwai",
				"WinWaitActive"
			],
			[
				"Input",
				"InputBox"
			],
			[
				"input",
				"InputBox"
			],
			[
				"stringre",
				"StringReplace"
			],
			[
				"a_pro",
				"A_ProgramFiles"
			],
			[
				"a_script",
				"A_ScriptFullPath"
			],
			[
				"regexr",
				"RegExReplace()"
			],
			[
				"FileCreate",
				"FileCreateDir"
			],
			[
				"exist",
				"FileExist()"
			],
			[
				"timesin",
				"A_TimeSincePriorHotkey"
			],
			[
				"a_p",
				"A_TimeSincePriorHotkey"
			],
			[
				"a_ho",
				"A_PriorHotkey"
			],
			[
				"fileappen",
				"FileAppend"
			],
			[
				"a_screen",
				"A_ScreenHeight"
			],
			[
				"a_scr",
				"A_ScreenWidth"
			],
			[
				"winget",
				"WinGetTitle"
			],
			[
				"Winget",
				"WinGetTitle"
			],
			[
				"setk",
				"SetKeyDelay"
			],
			[
				"a_pr",
				"A_PriorHotkey"
			],
			[
				"too",
				"ToolTip"
			],
			[
				"string",
				"StringReplace"
			],
			[
				"strre",
				"StrReplace()"
			],
			[
				"repl",
				"StrReplace()"
			],
			[
				"win",
				"WinActivate"
			],
			[
				"change",
				"changeFirstName"
			],
			[
				"rnd",
				"Round()"
			],
			[
				"str",
				"StrSplit()"
			],
			[
				"getke",
				"GetKeyState()"
			],
			[
				"br",
				"Break"
			],
			[
				"ifwi",
				"IfWinActive"
			],
			[
				"winwait",
				"WinWaitActive"
			],
			[
				"caps",
				"CapsLock"
			],
			[
				"Sendi",
				"SendInput"
			],
			[
				"sen",
				"SendMessage"
			],
			[
				"retur",
				"ReturnValue"
			],
			[
				"sendmod",
				"SendMode"
			],
			[
				"contro",
				"ControlList"
			],
			[
				"inire",
				"IniRead"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/D/github/GlobalCoder/GlobalCoder/.gitignore",
			"settings":
			{
				"buffer_size": 8257,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"paste",
					null,
					"AQAAAM0AAAAAAAAAHgEAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADNAAAAAAAAAM0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AgAAAM0AAAAAAAAAzgAAAAAAAAAAAAAAzgAAAAAAAADOAAAAAAAAACIAAABEOlxnaXRodWJcR2xvYmFsQ29kZXJcR2xvYmFsQ29kZXJc",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvAAAAAAAAAM0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"left_delete",
					null,
					"AQAAAN0AAAAAAAAA3QAAAAAAAAABAAAAXA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADeAAAAAAAAAN4AAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAN0AAAAAAAAA3gAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADdAAAAAAAAAN0AAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"left_delete",
					null,
					"AQAAAPAAAAAAAAAA8AAAAAAAAAABAAAAXA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADxAAAAAAAAAPEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwAAAAAAAAAPAAAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"paste",
					null,
					"AQAAAMwAAAAAAAAA8gAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADMAAAAAAAAAMwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AgAAAMwAAAAAAAAAzQAAAAAAAAAAAAAAzQAAAAAAAADNAAAAAAAAACIAAABEOlxnaXRodWJcR2xvYmFsQ29kZXJcR2xvYmFsQ29kZXJc",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADuAAAAAAAAAMwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAArAgAAAAAAACsCAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": ";#requires v1\n/* \n-1- sublime.log_commands(True) \n-2- set_file_type {\"syntax\": \"Packages/AutoHotkey/AutoHotkey.tmLanguage\"} \n-*- set_file_type {\"syntax\": \"Packages/User/Autohotkey2.sublime-syntax\"} ;--- v2 ; \n\n*/\nMenu, Tray, Icon , Shell32.dll, 16 , 1\nTrayTip, AutoHotKey, Started, 1\nSoundBeep, 300, 1\nDetectHiddenWindows, on\nsetbatchlines,-1\nsettitlematchmode,2\nFormatTime, time , YYYYMMDDHH24MISS, MMdd--HHmm\n;SetCapsLockState, alwaysoff\n#SingleInstance, off\n#WinActivateForce\n#KeyHistory\n;#SingleInstance, Force\n#installKeybdHook\n#InstallMouseHook\n#Persistent\n;SetTitleMatchMode, slow ; june 30\n\n;================\n\nSendMode, event\n;===\nSetKeyDelay,\nSetControlDelay, 1001\nSetWinDelay, 200\nSetMouseDelay, 50\n\n;====here it is============\n\nCoordMode, Tooltip, Screen\n;CoordMode, Mouse, Screen\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[Globals]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n\n/*\nglobal dir = p:\\App\\app\\logs\\questions\\ .%answer% \nglobal adir = c:\\answer\\%answer%\nglobal pdir = p:\\App\\app\nglobal cdir = c:\\answer\\%answer%\nglobal Qfile = %adir%\\Q.txt\nglobal Mfile = %basedir%\\Q-Master.txt1212\n*/\n\nf13 & g::\nstring := \"d:/globalcoder/globalcoder.ahk\"\nrun(string)\nreturn\n\nglobal toggle := \"\"\nglobal frontproject := \"p:\\app\\app\\\"\nglobal c := 1\nglobal wps := 15.00/3600\nglobal script := \"p:\\app\\app\\((start).ahk\"\nglobal frontfile := \"\"\nglobal myfun\nglobal g :=1\nglobal file := \"\"\nglobal frontfile := \"\"\nglobal frontdir :=  \"\"\nglobal funclist := \"p:/app/app/functions.txt\"\nglobal Qlist := \"p:/app/app/logs/q-google.txt\"\nglobal s := \"\", global r := \"\"\n\n\nreturn  ;----End of auto-execute section.\n\n;------------------------------------------------------------------------------includes\n ;hide window hotkeys ; {alt} + V/C - {xbuttons} + H/J\n1 & 2::\nMsgBox, test\nreturn\n\n;/ ----------[Includes]\n#include d:/lib\n#include print.ahk\n#include gdip_all.ahk\n#include <globalcoderlib>\n;#include ocr.ahk\n\n;#include\n;#include\n;#include\n;#include\n;SetWorkingDir, %A_ScriptDir%\n\n\n;#include p:\\app\\app\\shins\\Shinsimagescanclass.ahk ;;;\n;#include P:\\app\\app\\favorite-folders.ahk\n;#include p:\\app\\app\\((start)-class&fn.ahk ;;;\n;#include p:\\app\\app\\((start)-ifs.ahk\n;#include p:\\app\\app\\hotkeys.ahk\n;#include d:/lib/btt.ahk ;;;\n#include d:/lib/Vis2.ahk\n;#include p:\\app\\app\\((start)-winmin.ahk \n;#include p:\\app\\app\\((start)-winmin2.ahk \n\n;#include <GuiBase>\n;#include P:\\App\\app\\gui\\GuiBase.ahk\n;#include <windowclass>\n;#include p:\\app\\app\\windowclass.ahk\n;#include <btt>\n;#include <UIA_Interface>\n;#include %A_ScriptDir%\\lib\\\n;#Include lib\\Chrome.ahk\n;#include P:\\App\\App\\uiautomation\\UIAutomation-main\\lib\\UIA_interface.ahk\n;#include P:\\App\\App\\uiautomation\\UIAutomation-main\\lib\\UIA_browser.ahk\n;#include P:\\App\\App\\uiautomation\\UIAutomation-main\\lib\\UIA_constant.ahk\n;//\n\n\n\n/*go(string){\nMsgBox, % \"0: `n \" string\nbracketstring := \"[\" . string . \"]\"\nrawstring := string\nclipboard := \"x=[mid\" . rawstring\nsend, ^f \nsend, {backspace}\nsend, ^v\nsend, {enter}\nclipboard := \"\"\nif string != index\nsend, {f3 2}\nsend, ^+{left 5}\nprefix := \"=[\"\nsend, % \"\" prefix . \"mid\"\nreturn\n}\n*/\nf24 & i::\n!i::\nlv(\"d:/\")\nreturn\n\n^i::\nsend, ^f \nclipboard := \"[index ]\"\nsend, ^v ;% clipboard \n;send, {enter}\nreturn\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ INDEX ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[INDEX ]x=[]\n;[ HOTSTRINGS ]             - 106 :*:gHOTSTRINGS \n;[ RUNS ]                   - 131 :*:gRUNS \n;[ WINDOWS ]                - 202 :*:gWINDOWS \n;[ FORMATTING & SPECIALS ]  - 391 :*:gFORMATTING & SPECIALS \n;[ WORD ]                   - 464 :*:gWORD \n;[ CHROME ]                 - 490 :*:gCHROME \n;[ INCLUDES ]               - 783 :*:gINCLUDES \n\n\n\n\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ HOTSTRINGS ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[Hotstrings ]\n:*:dkz::dkzeanah@gmail.com\n:*:3de::3de32882D+1\n:*:ahkk::autohotkey\n:*:msg::\nmymsg_Function() {\n    static count := 0\n    clipboard := \"MsgBox, % \"\"\" . count++ \": ``n \" . \"\"\" \"\n    send, % clipboard\n    ;send, % \"MsgBox, % \"\"\" . count++ \": ``n \" . \"\"\" \"\n}\nreturn\n:*:umgc::\numgcfunc(){\n    clipboard := \"dzeanah@student.umgc.edu\"\n    send, ^v\n}\n;==============================[midhoststrings]=================================[]\n return\n:*:xb::xbutton2 &\n:*:reqv2::#Requires AutoHotkey v2.0-beta.7 `n warn all, off\n:*:reqv1::#Requires AutoHotkey  v1.1.34.03\n\n\n\n/*:*:gindex::\n        go(\"[ INDEX ]\")\n        return\n:*:ghotstrings::\n        go(\"HOTSTRINGS\")\n        return\n:*:gruns::\n        go(\"[ RUNS ]\") \n        return                \n:*:gwindows::\n        go(\"[ WINDOWS ]\") \n        return             \n:*:gspecial::\n        go(\"[ FORMATTING & SPECIALS ]\") \n        return \n:*:gword::\n        go(\"[ WORD ]\") \n        return                \n:*:gchrome::\n        go(\"[ CHROME ]\") \n        return              \n:*:gincludes::\n        go(\"[ INCLUDES ]\") \n        return\n*/\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[/HOTSTRINGS]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ RUNS ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[Runs ]\n\n/*;\nrun, % \"C:\\Users\\\" . A_UserName . \"\\OneDrive\\\"\n C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\n \"C:\\Program Files\\Sublime Text\\sublime_text.exe\"   \n \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Sublime Text.lnk\"\n run \"Z:\\Program Files\\scite4ahk3004\\$DATA\\SciTE.exe\" \"%A_ScriptFullPath%\"\np:\\app\\app\\((start)-class&fn.ahk\n*/\n\n~^f14::\n;Run, Target [, WorkingDir, Max|Min|Hide|UseErrorLevel, OutputVarPID]\nrun, \"p:\\app\\app\\((start)-winmin2.ahk\"  , A_WorkingDir ;\"p:\\app\\app\\((start)-winmin2.ahk\"\nreturn \n;==============================[midRUNS]=================================[]\nf14 & 1::\nini( 0, updatemode = 0 )\nmsgbox % ini.A_Index\nreturn\n\n\n;helpers / EXmples\nf24 & h::\nrun,  sublime_text.exe  \"p:\\app\\app\\regex.ahk \"\nrun,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\"  \"p:\\app\\app\\examples-gui.ahk \"\n\nreturn\n\n; run,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\" \"f:/ile/path\"     \nf13 & r::\nrun, \"C:\\Program Files\\Sublime Text\\sublime_text.exe\" \"p:\\app\\app\\favorite-folders.ahk\"\nrun,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\" \"p:\\app\\app\\((start)-ifs.ahk\"\nrun,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\" \"p:\\app\\app\\((start)-class&fn.ahk\"\nrun,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\" \"p:\\app\\app\\hotkeys.ahk\"\nrun,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\"  \"p:\\app\\app\\((start)-winmin.ahk \"\nrun,  \"C:\\Program Files\\Sublime Text\\sublime_text.exe\"  \"p:\\app\\app\\((start)-winmin2.ahk \"\nreturn \n\n\n;========================================= \nf13 & h:: \nsend, ^l \nsend, P:/app/\nsend, {enter}\nreturn\n\n;========================================= \nxbutton1 & p::\nrun, P:/app/app\nreturn\n\n;========================================= \nxbutton2 & p::\n;if !WinActive(\"ahk_exe explorer.exe\")\nWinActivate, ahk_exe explorer.exe\nreturn\n\n;========================================= \nxbutton2 & d::\n;run, d:/\nRun ::{450d8fba-ad25-11d0-98a8-0800361b1103}\nreturn\n\n;========================================= \n^!+d::\nControlFocus, SysTreeView321, A\nSendInput, % \"desktop\"\nreturn ;focuses sidebar\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[/RUNS]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ WINDOWS ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[WINDOWS ]\n\nf13 & v::\n^+v::\nWinActivate, \"vs\"\nreturn \n^+c::\nWinMinimize, vs\nreturn \n\nAlt & LButton::\nMouseGetPos, Mouse_Start_X, Mouse_Start_Y, Selected_Window\nWinGet, Window_State, MinMax, ahk_id %Selected_Window%\nif Window_State = 0\n    SetTimer, MyLabel, 1\nreturn\n;==============================[midWINDOWS]=================================[]\nMyLabel:\nMouseGetPos, Mouse_Current_X, Mouse_Current_Y\nWinGetPos, Selected_Window_X, Selected_Window_Y, , , ahk_id %Selected_Window%\nWinMove, ahk_id %Selected_Window%, , Selected_Window_X + Mouse_Current_X - Mouse_Start_X, Selected_Window_Y + Mouse_Current_Y - Mouse_Start_Y\n\nMouse_Start_X := Mouse_Current_X\nMouse_Start_Y := Mouse_Current_Y\n\nGetKeyState, LButton_State, LButton, P\nif LButton_State = U\n{\n    SetTimer, MyLabel, off\n    return\n}\nreturn\n\nf13 & t:: ;==============================[test]=================================[]\n  msgbox % A_UserName\nrun, % \"C:\\Users\\\" . A_UserName . \"\\OneDrive\\\"  \n\nColors := \"red,green,blue\"\nStringSplit, ColorArray, Colors, `,\nLoop, %ColorArray0%\n{\n    this_color := ColorArray%A_Index%\n    MsgBox, Color number %A_Index% is %this_color%.\n}\nreturn\n\nf13 & f:: ;==============================[]=================================[]\n;Loop, FilePattern [, IncludeFolders?, Recurse?]\n\n\n;loop functions.txt to display\nMsgBox, % \"0: `n \"  funclist\n\nLoop, read, %funclist%\n{\n    s .= A_LoopReadLine \" `n \"\n}\n\ntest := z_stringreplace(s,\"-\",\"|||\")\ns := \"\"\n\nLoop, read, %Qlist%\n{\n    s .= A_LoopReadLine \" `n \"\n}\n;MsgBox, % \"0: `n \" s\n\ns_array := StrSplit(s, A_space , \"`n\" )\n;for k,v in s_array\n;MsgBox, % \"0: `n \" k \"-\" v\n\nFileRead, QContents, %Qlist%\nif not ErrorLevel  ; Successfully loaded.\n{\n    Sort, QContents\n    ;FileDelete, C:\\Address List (alphabetical).txt\n    FileAppend, %QContents%, P:/app/app/logs/q-google(appended).txt\n    run, P:/app/app/logs/q-google(appended).txt\n    ;QContents := \"\"  ; Free the memory.\n}\nword_array := StrSplit(qcontents, \";\", \"-\") ; Omits periods.\nMsgBox % \"The 4th word is \" word_array[5]\n\n\n;text := \"Hi this`nis my;`ntest for this`nhmm;`n`ndoes it work?;`n`nI hope`nso`n`nLike Really!;\"\nMsgBox, % qcontents\nMsgBox, % qcontents2 := StrAppendEachLine(qcontents, \";\")\nMsgBox, % \"1: `n Qcontents: \" qcontents\n\nFileAppend, %QContents2%, P:/app/app/logs/q-google(appended2).txt\nrun, P:/app/app/logs/q-google(appended2).txt\nreturn\n\n\n\n\nfor k,v in word_array\nMsgBox, % \"0: `n \" k \"-\" v\n\n\n\n\n;;;;;all works\n;msgbox % s\n;z_stringreplace(s,\"-\",\"|||\")\n;test := z_stringreplace(s,\"-\",\"|||\")\n;msgbox % r   \n;msgbox % \"test: `n \" test   \n;;;;\n/*colors := \"red,green,blue\"\nfor index, color in StrSplit(colors, \",\")\n    MsgBox % \"Color number \" index \" is \" color\n\n*/\n\n\n\n/*recent_folder:=\"p:\\app\\app\\\"\nLoop, Files, % recent_folder \"\\functions.txt \", \n{\n    vPath := A_LoopFileFullPath\n    FileGetShortcut, % vPath, vTarget\n    vAttrib := FileExist(vTarget)\n    if InStr(vAttrib, \"D\") || !vAttrib\n        msgbox, %recent_folder%\\%A_LoopFileName%`n`n ...points to a folder\n                else\n                msgbox, %recent_folder%\\%A_LoopFileName%`n`n ...points to a file\n    \n}\nreturn\n*/\n\n/*Lf = `n\nLoop, Read, P:\\app\\app\\func.txt\n   {\n   If A_LoopReadLine = \n        Lf = \n   TTContent = %TTContent%%A_LoopReadLine%%Lf%\n   }\nToolTip, %TTContent%,5000\nmsgbox % TTContent . \"`n continue?\"\nSleep, 1000\nToolTip\nreturn\n*/\nreturn\n^f3::\nf24 & f3::\nxbutton2 & F3::\nFileObject := {}\nloop, %A_ScriptDir%\\*.ahk, 0, 0 \n{\nsplitpath, A_LoopFileName, FileName,,, Key \nFileObject[ Key ] := FileName \n}\nfor Each, File in FileObject\n{\n\n    FileList .= File \"rn\"\n}\n;btt(FileList,,,,\"Style4\",{Transparent:v})\nsleep, 5000\nreturn\n;==============================[]=================================[]\n\n\nxbutton2 & g::\nsend ^c\nRun, www.google.com/search?q=%clipboard%\nchrome_group()\nreturn\n\nxbutton2 & q::\nWinActivate ahk_class Notepad\nWin1.get()\nSomeWin.AnnounceWinProps()\nReturn\n\nxbutton2 & up::^!up\nxbutton2 & down::^!down\nxbutton2 & o:: OCR() \nxbutton2 & i:: ImageIdentify() \n\n\n\n/*if GetKeyState(\"Shift\")\n    MsgBox At least one Shift key is down.\nelse\n    MsgBox Neither Shift key is down.\n\n*/\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ FORMATTING & SPECIALS ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[specials ]x=[]\n;==============================[breaks]=================================[breaks]\n\n\nxbutton2 & f::\n global toggle := !toggle\nsend, ^f \nsend, x=[]\nreturn\n\n\n\n;==============================[midspecials]=================================[]\n/*xbutton2 & f::\nsend, ^f \nsend, x=[]\n  toggle := !toggle\nreturn\n\n#if (Toggle) \nF13::f3\n\n#if\n*/\n\n;send % \"{mbutton \" ((t:=!t) ? \"down\" : \"up\") \"}\"\n/*\nxbutton2 & f::\nsend, ^f \nsend, x=[]\n  toggle := !toggle\nwhile (Toggle && getkeystate(\"f13\",\"p\")){\n   Send , {F3}  \n}\nreturn\n*/\n\n /* While (toggle)\n  {\n    if GetKeyState(\"f13\")\n    send, {f3}\n    return\n  }\n \nreturn\n\n*/\nxbutton2 & 3::\n SendMode Input\n SendRaw, `;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n SendRaw, `;~   ~\n SendRaw, `;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n send,{home}\n send, {up}\n send, {right 2}\nreturn\n\nxbutton2 & b::\n SendMode Input\n SendRaw, `;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\nreturn\n\nxbutton1 & b::\n    SendMode Input\n  \n    Send, `;==============================[]=================================[]\nreturn\n\nf13 & b::\nsend, `//================\nclipboard := \"`;================\"\nreturn\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ WORD ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[WORD]x=[]\n;oWord.Selection.PasteAndFormat(22)  ; Plain Text\n;oWord.Selection.PasteAndFormat(0)   ; Default \n\nxbutton2 & l:: \n send, ^l \n sleep, 100\n send, ^c\n sleep, 100\n sendword()\nreturn\n;==============================[midword]=================================[]\n\n\n/*f1::\nsend := clipboard . \"`n\"\n;send := send . \"`n\"\nclipboard := send\noWord := ComObjActive(\"Word.Application\")\noWord.Selection.PasteAndFormat(0)  ; Original Formatting\nsend := \"\"\nclipboard := \"\"\nreturn\n\n*/\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ CHROME ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n;==============================[ CHROME ]=================================[CHROME ]\n/*\nchrome://settings/searchEngines\n*/\n\n^f1::\nWinActivate(\"dkz1\")\n;savepic()\nreturn \n\n\n/*RemoveToolTip:\nToolTip\nreturn  \n*/\n;==============================[midchrome]=================================[]\n\nf21::\n\n\nf13 & Space:: ;------------------------------------------------------------------\nInputBox, ans\nRun, www.google.com/search?q=%ans%\nchrome_group()\n\nremovespace(ans) ;ReplacedStr := StrReplace(Haystack, Needle , ReplaceText, OutputVarCount, Limit)\n\nanswer := clipboard\nbasedir := \"c:\\answer\" \n\ncreateddir = p:\\logs\\questions\\%date%__%answer%\ncreateddir = %A_WorkingDir%\\logs\\questions\\%answer%\n\nFileCreateDir, p:\\logs\\questions\\%time%_%answer% ;\nFileCreateDir, %A_WorkingDir%\\logs\\questions\\%answer% ;\nFileCreateDir, %basedir%\\%answer%\nfrontdir = %testdir%\\%answer% \nfileappend, %answer%__%time% `n, %A_WorkingDir%\\logs\\questions\\%answer%\\Q.txt ;-- make text inside folder\n\n\ndir = p:\\App\\logs\\questions\\%answer% \nfrontdir = c:\\answer\\%answer%\nfile = %frontdir%\\Q.txt\nMasterfile = %basedir%\\Q-Master.txt\n\n\nfileappend, Q-%answer%__%time% `n, %A_WorkingDir%\\logs\\questions\\%answer%\\Q.txt ;-- make text inside folder\nfileappend, Q-%answer%__%time% `n, p:\\App\\logs\\questions\\%answer%\\Q.txt ;-- make text inside folder\nFileAppend, -%answer%__%time% `n, %A_WorkingDir%\\logs\\Q-google.txt ;--- update global log file11\nFileAppend, -%answer%__%time% `n, p:\\App\\logs\\Q-google.txt ;--- update global log file11\nfileappend, -%answer%__%time% `n ,%file%\nfileappend, -%answer%__%time% `n ,%masterfile%\n\nrun %frontdir%\nrun, %file%\n\nreturn \n\n;==============================[]=================================[]\n\n\nscanchrome(){\nstatic loopnum := 1\n\n;create an array of colors, to add more just seperate them by commas\n;--------------------pink------orange---white--green------purple--light blue-blu------red-----yellow\nchromeTabColors := [0x  lwdkz2FF8BCB,0xFCAD70,0xDADCE0,0x81C995, 0xC58AF9,0x78D9EC,0x8AB4F8,0xF28B82,0xFDD663] \nchromeColors := {pink:  lwdkz20xFF8BCB,orange:0xFCAD70,white:0xDADCE0,green:0x81C995,purple:0xC58AF9,lightblue:0x78D9EC,blue:0x8AB4F8,red:0xF28B82,yellow:0xFDD663} \n\nWinActivate, dkz\nsend, !g\nscan := new Shinsimagescanclass(dkz)\n;scan.pixelregion()\n\nfor k,v in chromeColors\n{\ncolorinloop := v\nif (scan.Pixel(colorinloop,,x,y)) {\n    tooltip % \"Found\" k \" pixel at \" x \",\" y\n    mousemove,  x , y  \n    MouseClick, r, X, Y, 1, \n           KeyWait, Tab\n    } else \n    {\n        MsgBox, % \"0: `n damn \" \n    }\n\n\n}\nreturn\n}\n\nxbutton2 & Space:: \nInputBox, ans\nRun, www.google.com/search?q=%ans%\nchrome_group(2)\nremovespace(ans) ;ReplacedStr := StrReplace(Haystack, Needle , ReplaceText, OutputVarCount, Limit)\nscanchrome()\n\nanswer := clipboard\nbasedir := \"c:\\answer\" \n\ncreateddir = p:\\logs\\questions\\%date%__%answer%\ncreateddir = %A_WorkingDir%\\logs\\questions\\%answer%\n\nFileCreateDir, p:\\logs\\questions\\%time%_%answer% ;\nFileCreateDir, %A_WorkingDir%\\logs\\questions\\%answer% ;\nFileCreateDir, %basedir%\\%answer%\ndir = %testdir%\\%answer% \nfileappend, %answer%__%time% `n, %A_WorkingDir%\\logs\\questions\\%answer%\\Q.txt ;-- make text inside folder\n\n\ndir = p:\\App\\logs\\questions\\%answer% \nfrontdir = c:\\answer\\%answer%\nfile = %frontdir%\\Q.txt\nMasterfile = %basedir%\\Q-Master.txt\n\n\nfileappend, Q-%answer%__%time% `n, %A_WorkingDir%\\logs\\questions\\%answer%\\Q.txt ;-- make text inside folder\nfileappend, Q-%answer%__%time% `n, p:\\App\\logs\\questions\\%answer%\\Q.txt ;-- make text inside folder\nFileAppend, -%answer%__%time% `n, %A_WorkingDir%\\logs\\Q-google.txt ;--- update global log file11\nFileAppend, -%answer%__%time% `n, p:\\App\\logs\\Q-google.txt ;--- update global log file11\nfileappend, -%answer%__%time% `n ,%file%\nfileappend, -%answer%__%time% `n ,%masterfile%\n\nfiledir = %file%\n;run, %frontdir%\n;run, %frontfile%\n;global frontfile := %file%\n;global frontdir := %frontdir%\nreturn \n\n\n;==============================[]=================================[]\n;================\n\n\n\nxbutton1 & n::\n\n;MsgBox, % \"1: `n \" A_PriorHotkey\nwhat := chrome_name(1)\nMsgBox, % \"1: `n \" what\nreturn\n\nxbutton2 & n::\n\nwhat := chrome_name(2)\nMsgBox, % \"2: `n \" what\nreturn\nF17::\nsend, f17\ntoggle := !toggle\nif (toggle)\nMsgBox, % \"0: `n on\" \n\nMsgBox, % \"1: `n off\" \nreturn\n/*\nf14::\ndkz2 := chrome_name(2)\nchrome_group(2)\n\nreturn\nf17::\n\nwhat := chrome_name(2)\nMsgBox, % \"2: `n \" what\nreturn\nf20::\n\nwhat := chrome_name(\"0\")\nMsgBox, % \"0: `n \" what\nreturn \n*/\n;================\n\n\nxbutton2 & enter::\nrun, %frontdir%\nrun, %file%\n\nToolTip, % frontfile \nToolTip, % frontdir \n;run %frontdir%\n;run, %file%\nreturn\n\n\n;================\nxbutton2 & v::\nFileAppend, `n`r -%clipboard%-->%time% `; , %frontfile%\nFileAppend, `n`r -%clipboard%-->%time% `; , %file%\nreturn\n\n;================\nxbutton2 & c::\nFileAppend, `n`r -%clipboard%-->%time% `; , %frontfile%\nFileAppend, `n`r -%clipboard%-->%time% `; , %file%\nreturn\n\n\n;================\n;------------------------------- inside of ss(), save the file in \"frontfolder\" dir.\nxbutton2 & PrintScreen::\nss()\nreturn\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]\n\n\n\n\nxbutton2 & a::\n ;get recent files in order (via a file loop)\n;CSIDL_RECENT := 8\nVarSetCapacity(vDirRecent, 260*2, 0)\nDllCall(\"shell32\\SHGetFolderPath\", Ptr,0, Int,8, Ptr,0, UInt,0, Str,vDirRecent)\nvOutput := \"\"\nVarSetCapacity(vOutput, 100000*2)\nLoop, Files, % vDirRecent \"\\*.lnk\", F\n{\n    vPath := A_LoopFileFullPath\n    FileGetShortcut, % vPath, vTarget\n    vAttrib := FileExist(vTarget)\n    if InStr(vAttrib, \"D\") || !vAttrib\n        continue\n    vOutput .= A_LoopFileTimeModified \"`t\" vTarget \"`n\"\n}\nSort, vOutput, R\nvOutput := RegExReplace(vOutput, \"(?<=^|`n)\\d{14}`t\")\nClipboard := StrReplace(vOutput, \"`n\", \"`r`n\")\n\nMsgBox, % vOutput\nreturn\n\n\n;Alt+T = Toggle AlwaysOnTop ;state of the active window\nxbutton2 & t::WinSet, AlwaysOnTop, Toggle, A\n\n\n\n\nreturn \nxbutton1 & t::\nres := WinActive(\"A\")\n\n;msgbox, % \"0: `n \" res\nreturn \n\nxbutton2 & s::\nInputBox, inp, , string to search,,\n;InputBox, inp, , string to search, HIDE, , , , , Font, Timeout, Default]\nfindstring(inp,*.*,2,0)\nmsgbox,% findstring(inp, \"*.ahk\")\nmsgbox,% findstring(inp, \"*.ahk\")\nt := {}\nt := findstring(inp,*.*,0,0)\nreturn\n\n\n\n\n\n\n\n\nxbutton2 & f8::            ; copy info about the current mouse location to the clipboard\n;Gosub, WatchCursor  \nclipboard= ahk_id %id%`r`nahk_class %class%`r`n%title%`r`nControl: %control%`r`ntext: >>>`r`n%text%\nreturn\n;|||||||||||||||||||||||||||||||||||||||||||\nxbutton2 & f9::            ; copy the info (formatted as Ahk_code) to the clipboard\nahk_code=\n(\n  ControlGetText, text, %control%, %title%\n  ControlGetText, text, %control%, ahk_class %class%\n)\nclipboard= %ahk_code%\nmsgbox %ahk_code%\nreturn\n\n;-------------------------------------------------------------------------------------------\n^xbutton2::\n;;btt(\"This is BeautifulToolTip\")\n;;btt(\"This is BeautifulToolTip`n`nWhichToolTip = 2\",500,500,2)\n;Sleep, 5000\n;btt(\"This is BeautifulToolTip\",,,, \"Style4\")\nsleep, 1000\n;btt(,,,1)\nReturn\n\nxbutton2 & m::\nLf = `n\nLoop, Read, P:\\app\\app\\logs\\q-google.txt\n   {\n   If A_LoopReadLine = \n        Lf = \n   TTContent = %TTContent%%A_LoopReadLine%%Lf%\n   } \nToolTip, %TTContent%,5000\nmsgbox % TTContent . \"`n continue?\"\nSleep, 1000\nToolTip\nreturn\n\nf13 & 2::\nToolTip, % ggg.=\"1 :: \" timeSinceLastCall(1)/1000 * wps  \"¢`n\"\nreturn\nf14 & 3::ToolTip, % ggg.=\"2 :: \" timeSinceLastCall(2) \"`n\"\nf14 & 4::ggg:=\"\", timeSinceLastCall(0,1) ; reset everything\n\n\n\n\n/*randomgenerator:\nrandom, ranVar , 1, 100000000\nm(ranVar)\nreturn\n*/\n\n\nxbutton2 & e::\n    winactivate, ahk_exe sublime_text.exe\n      ;edit \n    return\nxbutton2 & r:: ;-------------------------------------edit, reload, escape\n    send ^s \n    reload \n    return\nxbutton2 & esc::exitapp\n\nxbutton2 & k::\nkeyhistory \nreturn\n\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ INCLUDES ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[INCLUDES ]\n;#include p:\\app\\app\\((start)-winmin.ahk ;mouseb2 & h,j\n;#include p:\\app\\app\\((start)-winmin2.ahk",
			"file": "/D/github/GlobalCoder/GlobalCoder/!.ahk",
			"file_size": 22448,
			"file_write_time": 133171412247799076,
			"settings":
			{
				"buffer_size": 21535,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					18,
					1,
					"left_delete",
					null,
					"AQAAAPkHAAAAAAAA+QcAAAAAAAABAAAAPA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD6BwAAAAAAAPoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"left_delete",
					null,
					"AQAAAP0HAAAAAAAA/QcAAAAAAAABAAAAPg",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+BwAAAAAAAP4HAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": ".ahk"
					},
					"BAAAAP0HAAAAAAAA/gcAAAAAAAAAAAAA/gcAAAAAAAD/BwAAAAAAAAAAAAD/BwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAQgAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9BwAAAAAAAP0HAAAAAAAAAAAAAAAA8L8"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "\n#"
					},
					"AgAAAP0GAAAAAAAA/gYAAAAAAAAAAAAA/gYAAAAAAAD/BgAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9BgAAAAAAAP0GAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAAP4GAAAAAAAA/gYAAAAAAAABAAAAIw",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD/BgAAAAAAAP8GAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"paste",
					null,
					"AQAAAP4GAAAAAAAAggcAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD+BgAAAAAAAP4GAAAAAAAAAAAAAAAA8L8"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGEHAAAAAAAAYgcAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhBwAAAAAAAGEHAAAAAAAAAAAAAAAA8L8"
				],
				[
					35,
					1,
					"cut",
					null,
					"AQAAAH8HAAAAAAAAfwcAAAAAAAADAAAAOy8v",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACCBwAAAAAAAH8HAAAAAAAAAAAAAAAA8L8"
				],
				[
					38,
					1,
					"paste",
					null,
					"AQAAAIoKAAAAAAAAjQoAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACKCgAAAAAAAIoKAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHMIAAAAAAAAdAgAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzCAAAAAAAAHMIAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"left_delete",
					null,
					"AQAAAHMIAAAAAAAAcwgAAAAAAAABAAAAOw",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0CAAAAAAAAHQIAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAFMIAAAAAAAAVAgAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABTCAAAAAAAAFMIAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAIYIAAAAAAAAhwgAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACGCAAAAAAAAIYIAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAALAIAAAAAAAAsQgAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACwCAAAAAAAALAIAAAAAAAAAAAAAAAA8L8"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAHQIAAAAAAAAdQgAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0CAAAAAAAAHQIAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAADgHAAAAAAAAOQcAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4BwAAAAAAADgHAAAAAAAAAAAAAAAA8L8"
				],
				[
					73,
					1,
					"duplicate_line",
					null,
					"AQAAADkHAAAAAAAATAcAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAmBwAAAAAAACYHAAAAAAAAAAAAAAAAAAA"
				],
				[
					76,
					5,
					"left_delete",
					null,
					"BQAAAEYHAAAAAAAARgcAAAAAAAABAAAAdEUHAAAAAAAARQcAAAAAAAABAAAAbkQHAAAAAAAARAcAAAAAAAABAAAAaUMHAAAAAAAAQwcAAAAAAAABAAAAckIHAAAAAAAAQgcAAAAAAAABAAAAcA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABHBwAAAAAAAEcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "ocr"
					},
					"AwAAAEIHAAAAAAAAQwcAAAAAAAAAAAAAQwcAAAAAAABEBwAAAAAAAAAAAABEBwAAAAAAAEUHAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCBwAAAAAAAEIHAAAAAAAAAAAAAAAA8L8"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADkHAAAAAAAAOgcAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5BwAAAAAAADkHAAAAAAAAAAAAAAAA8L8"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAPMHAAAAAAAA9AcAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADzBwAAAAAAAPMHAAAAAAAAAAAAAAAA8L8"
				],
				[
					92,
					1,
					"left_delete",
					null,
					"AQAAAPMHAAAAAAAA8wcAAAAAAAABAAAAOw",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD0BwAAAAAAAPQHAAAAAAAAAAAAAAAA8L8"
				],
				[
					103,
					1,
					"left_delete",
					null,
					"AQAAAIcIAAAAAAAAhwgAAAAAAAABAAAAOw",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACICAAAAAAAAIgIAAAAAAAAAAAAAAAA8L8"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "d:/"
					},
					"AwAAAJAIAAAAAAAAkQgAAAAAAAAAAAAAkQgAAAAAAACSCAAAAAAAAAAAAACSCAAAAAAAAJMIAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACQCAAAAAAAAJAIAAAAAAAAAAAAAAAA8L8"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": "lib/"
					},
					"BAAAAJMIAAAAAAAAlAgAAAAAAAAAAAAAlAgAAAAAAACVCAAAAAAAAAAAAACVCAAAAAAAAJYIAAAAAAAAAAAAAJYIAAAAAAAAlwgAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACTCAAAAAAAAJMIAAAAAAAAAAAAAAAA8L8"
				],
				[
					112,
					1,
					"insert",
					{
						"characters": "d:/lib/"
					},
					"CAAAAHAIAAAAAAAAcQgAAAAAAAAAAAAAcQgAAAAAAABxCAAAAAAAAAoAAABQOlxBcHBcYXBwcQgAAAAAAAByCAAAAAAAAAAAAAByCAAAAAAAAHMIAAAAAAAAAAAAAHMIAAAAAAAAdAgAAAAAAAAAAAAAdAgAAAAAAAB1CAAAAAAAAAAAAAB1CAAAAAAAAHYIAAAAAAAAAAAAAHYIAAAAAAAAdwgAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB6CAAAAAAAAHAIAAAAAAAAAAAAAAAA8L8"
				],
				[
					113,
					1,
					"right_delete",
					null,
					"AQAAAHcIAAAAAAAAdwgAAAAAAAABAAAAXA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3CAAAAAAAAHcIAAAAAAAAAAAAAAAA8L8"
				],
				[
					118,
					1,
					"left_delete",
					null,
					"AQAAAGYIAAAAAAAAZggAAAAAAAABAAAAOw",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABnCAAAAAAAAGcIAAAAAAAAAAAAAAAA8L8"
				],
				[
					123,
					1,
					"duplicate_line",
					null,
					"AQAAADkHAAAAAAAATAcAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4BwAAAAAAADgHAAAAAAAAAAAAAAAA8L8"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "gdip_all"
					},
					"CQAAAEIHAAAAAAAAQwcAAAAAAAAAAAAAQwcAAAAAAABDBwAAAAAAAAUAAABwcmludEMHAAAAAAAARAcAAAAAAAAAAAAARAcAAAAAAABFBwAAAAAAAAAAAABFBwAAAAAAAEYHAAAAAAAAAAAAAEYHAAAAAAAARwcAAAAAAAAAAAAARwcAAAAAAABIBwAAAAAAAAAAAABIBwAAAAAAAEkHAAAAAAAAAAAAAEkHAAAAAAAASgcAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCBwAAAAAAAEcHAAAAAAAAAAAAAAAA8L8"
				],
				[
					127,
					4,
					"left_delete",
					null,
					"BAAAAEkHAAAAAAAASQcAAAAAAAABAAAAbEgHAAAAAAAASAcAAAAAAAABAAAAbEcHAAAAAAAARwcAAAAAAAABAAAAYUYHAAAAAAAARgcAAAAAAAABAAAAXw",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABKBwAAAAAAAEoHAAAAAAAAAAAAAAAA8L8"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": "_all"
					},
					"BAAAAEYHAAAAAAAARwcAAAAAAAAAAAAARwcAAAAAAABIBwAAAAAAAAAAAABIBwAAAAAAAEkHAAAAAAAAAAAAAEkHAAAAAAAASgcAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABGBwAAAAAAAEYHAAAAAAAAAAAAAAAA8L8"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAKoHAAAAAAAAqwcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKoHAAAAAAAAqgcAAAAAAAAAAAAAAADwvw"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOEHAAAAAAAA4gcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOEHAAAAAAAA4QcAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAsIAAAAAAAADAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAsIAAAAAAAACwgAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAADoIAAAAAAAAOwgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADoIAAAAAAAAOggAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAGAIAAAAAAAAYQgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAIAAAAAAAAYAgAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJ5TAAAAAAAAn1MAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ5TAAAAAAAAnlMAAAAAAAAAAAAAAADwvw"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAANZTAAAAAAAA11MAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANZTAAAAAAAA1lMAAAAAAAAAAAAAAADwvw"
				],
				[
					23,
					1,
					"left_delete",
					null,
					"AQAAANZTAAAAAAAA1lMAAAAAAAABAAAAJw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANdTAAAAAAAA11MAAAAAAAAAAAAAAADwvw"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAANZTAAAAAAAA11MAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANZTAAAAAAAA1lMAAAAAAAAAAAAAAADwvw"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAJwEAAAAAAAAnQQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwEAAAAAAAAnAQAAAAAAAAAAAAAAADwvw"
				],
				[
					28,
					1,
					"left_delete",
					null,
					"AQAAAJwEAAAAAAAAnAQAAAAAAAABAAAAMg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0EAAAAAAAAnQQAAAAAAAAAAAAAAADwvw"
				],
				[
					32,
					1,
					"duplicate_line",
					null,
					"AQAAAE8HAAAAAAAAZQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4HAAAAAAAATgcAAAAAAAAAAAAAAADwvw"
				],
				[
					35,
					8,
					"left_delete",
					null,
					"CAAAAF8HAAAAAAAAXwcAAAAAAAABAAAAbF4HAAAAAAAAXgcAAAAAAAABAAAAbF0HAAAAAAAAXQcAAAAAAAABAAAAYVwHAAAAAAAAXAcAAAAAAAABAAAAX1sHAAAAAAAAWwcAAAAAAAABAAAAcFoHAAAAAAAAWgcAAAAAAAABAAAAaVkHAAAAAAAAWQcAAAAAAAABAAAAZFgHAAAAAAAAWAcAAAAAAAABAAAAZw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGAHAAAAAAAAYAcAAAAAAAAAAAAAAADwvw"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "globalcoderlib"
					},
					"DgAAAFgHAAAAAAAAWQcAAAAAAAAAAAAAWQcAAAAAAABaBwAAAAAAAAAAAABaBwAAAAAAAFsHAAAAAAAAAAAAAFsHAAAAAAAAXAcAAAAAAAAAAAAAXAcAAAAAAABdBwAAAAAAAAAAAABdBwAAAAAAAF4HAAAAAAAAAAAAAF4HAAAAAAAAXwcAAAAAAAAAAAAAXwcAAAAAAABgBwAAAAAAAAAAAABgBwAAAAAAAGEHAAAAAAAAAAAAAGEHAAAAAAAAYgcAAAAAAAAAAAAAYgcAAAAAAABjBwAAAAAAAAAAAABjBwAAAAAAAGQHAAAAAAAAAAAAAGQHAAAAAAAAZQcAAAAAAAAAAAAAZQcAAAAAAABmBwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgHAAAAAAAAWAcAAAAAAAAAAAAAAADwvw"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "lib/"
					},
					"BAAAAFgHAAAAAAAAWQcAAAAAAAAAAAAAWQcAAAAAAABaBwAAAAAAAAAAAABaBwAAAAAAAFsHAAAAAAAAAAAAAFsHAAAAAAAAXAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgHAAAAAAAAWAcAAAAAAAAAAAAAAADwvw"
				],
				[
					40,
					4,
					"left_delete",
					null,
					"BAAAAFsHAAAAAAAAWwcAAAAAAAABAAAAL1oHAAAAAAAAWgcAAAAAAAABAAAAYlkHAAAAAAAAWQcAAAAAAAABAAAAaVgHAAAAAAAAWAcAAAAAAAABAAAAbA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFwHAAAAAAAAXAcAAAAAAAAAAAAAAADwvw"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "<"
					},
					"AQAAAFgHAAAAAAAAWQcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFgHAAAAAAAAWAcAAAAAAAAAAAAAAADwvw"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": ">"
					},
					"AQAAAGcHAAAAAAAAaAcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGcHAAAAAAAAZwcAAAAAAAAAAAAAAADwvw"
				],
				[
					44,
					4,
					"right_delete",
					null,
					"BAAAAGgHAAAAAAAAaAcAAAAAAAABAAAALmgHAAAAAAAAaAcAAAAAAAABAAAAYWgHAAAAAAAAaAcAAAAAAAABAAAAaGgHAAAAAAAAaAcAAAAAAAABAAAAaw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgHAAAAAAAAaAcAAAAAAAAAAAAAAADwvw"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAJsIAAAAAAAAnAgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJsIAAAAAAAAmwgAAAAAAAAAAAAAAADwvw"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": ";"
					},
					"BQAAACRQAAAAAAAAJVAAAAAAAAAAAAAA608AAAAAAADsTwAAAAAAAAAAAACfTwAAAAAAAKBPAAAAAAAAAAAAAH5PAAAAAAAAf08AAAAAAAAAAAAAeioAAAAAAAB7KgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAABQAAAHoqAAAAAAAAeioAAAAAAAAAAAAAAAAAAH5PAAAAAAAAfk8AAAAAAAAAAAAAAAAAAJ9PAAAAAAAAn08AAAAAAAAAAAAAAAAAAOtPAAAAAAAA608AAAAAAAAAAAAAAAAAACRQAAAAAAAAJFAAAAAAAAAAAAAAAAAAAA"
				]
			]
		},
		{
			"contents": ";dll pixel search 1.6x faster, allegedly\n;0xFFRRGGBB color like 0xFF0000FF for blue. It's capable of searching for transparent pixels, even though there aren't any on the screen.\n/*\n0xff is a number represented in the hexadecimal numeral system \n(base 16). It's composed of two F numbers in hex. \nAs we know, F in hex is equivalent to 1111 in the binary numeral system.\n So, 0xff in binary is 11111111\n\n*/\n\npx(color) {\n\nstatic hdc, hbm, obm, pBits\nif !hdc {\n      ; struct BITMAPINFOHEADER - https://docs.microsoft.com/en-us/windows/win32/api/wingdi/ns-wingdi-bitmapinfoheader\n      hdc := DllCall(\"CreateCompatibleDC\", \"ptr\", 0, \"ptr\")\n      VarSetCapacity(bi, 40, 0)              ; sizeof(bi) = 40\n         NumPut(       40, bi,  0,   \"uint\") ; Size\n         NumPut(A_ScreenWidth, bi,  4,   \"uint\") ; Width\n         NumPut(-A_ScreenHeight, bi,  8,    \"int\") ; Height - Negative so (0, 0) is top-left.\n         NumPut(        1, bi, 12, \"ushort\") ; Planes\n         NumPut(       32, bi, 14, \"ushort\") ; BitCount / BitsPerPixel\n      hbm := DllCall(\"CreateDIBSection\", \"ptr\", hdc, \"ptr\", &bi, \"uint\", 0, \"ptr*\", pBits:=0, \"ptr\", 0, \"uint\", 0, \"ptr\")\n      obm := DllCall(\"SelectObject\", \"ptr\", hdc, \"ptr\", hbm, \"ptr\")\n}\n\n      ; Retrieve the device context for the screen.\n      static sdc := DllCall(\"GetDC\", \"ptr\", 0, \"ptr\")\n\n      ; Copies a portion of the screen to a new device context.\n      DllCall(\"gdi32\\BitBlt\"\n               , \"ptr\", hdc, \"int\", 0, \"int\", 0, \"int\", A_ScreenWidth, \"int\", A_ScreenHeight\n               , \"ptr\", sdc, \"int\", 0, \"int\", 0, \"uint\", 0x00CC0020 | 0x40000000) ; SRCCOPY | CAPTUREBLT\n\n         static bin := 0\n         if !bin {\n            ; C source code - https://godbolt.org/z/oYx39nr5s\n            code := (A_PtrSize == 4)\n            ? \"VYnli1UIi0UMi00QjQSCOcJzDTkKdQSJ0OsFg8IE6+9dww==\"\n            : \"idJIjQSRSDnBcw9EOQF1BInI6wZIg8EE6+zD\"\n            padding := (code ~= \"==$\") ? 2 : (code ~= \"=$\") ? 1 : 0\n            size := 3 * (StrLen(code) / 4) - padding\n            bin := DllCall(\"GlobalAlloc\", \"uint\", 0, \"uptr\", size, \"ptr\")\n            DllCall(\"VirtualProtect\", \"ptr\", bin, \"ptr\", size, \"uint\", 0x40, \"uint*\", old:=0)\n            DllCall(\"crypt32\\CryptStringToBinary\", \"str\", code, \"uint\", 0, \"uint\", 0x1, \"ptr\", bin, \"uint*\", size, \"ptr\", 0, \"ptr\", 0)\n         }\n\n         ; Pass the width * height, but the size is returned due to C interpreting Scan0 as a integer pointer.\n         ; So when doing pointer arithmetic, *Scan0 + 1 is actually adding 4 bytes.\n         byte := DllCall(bin, \"ptr\", pBits, \"uint\", A_ScreenWidth * A_ScreenHeight, \"uint\", color, \"int\")\n         if (byte == pBits + A_ScreenWidth * A_ScreenHeight * 4)\n            throw Exception(\"pixel not found\")\n         x := mod((byte - pBits) / 4, A_ScreenWidth)\n         y := ((byte - pBits) / 4) // A_ScreenWidth\n\n         return {x:x, y:y}\n\n}\n",
			"file": "/D/github/GlobalCoder/GlobalCoder/CustomMenuFiles/9 - Showcase & Examples/pixelsearch_DLL.ahk",
			"file_size": 2924,
			"file_write_time": 133165405870617221,
			"settings":
			{
				"buffer_size": 2866,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "/d/lib/btt.ahk",
			"settings":
			{
				"buffer_size": 35628,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"insert",
					{
						"characters": "d:/li"
					},
					"BgAAAPiKAAAAAAAA+YoAAAAAAAAAAAAA+YoAAAAAAAD5igAAAAAAABAAAAAlQV9MaW5lRmlsZSVcLi5c+YoAAAAAAAD6igAAAAAAAAAAAAD6igAAAAAAAPuKAAAAAAAAAAAAAPuKAAAAAAAA/IoAAAAAAAAAAAAA/IoAAAAAAAD9igAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAIiwAAAAAAAPiKAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": "b/"
					},
					"AgAAAP2KAAAAAAAA/ooAAAAAAAAAAAAA/ooAAAAAAAD/igAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAD9igAAAAAAAP2KAAAAAAAAAAAAAAAA8L8"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAOqKAAAAAAAA64oAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADqigAAAAAAAOqKAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/D/lib/Vis2.ahk",
			"settings":
			{
				"buffer_size": 121318,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAF4AAAAAAAAAXwAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABeAAAAAAAAAF4AAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/C/Users/dkzea/OneDrive/Documents/AutoHotkey/Lib/OCR.ahk",
			"settings":
			{
				"buffer_size": 5353,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAAHwDAAAAAAAAfAMAAAAAAAABAAAAPg",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9AwAAAAAAAH0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": ".ahk"
					},
					"BAAAAHwDAAAAAAAAfQMAAAAAAAAAAAAAfQMAAAAAAAB+AwAAAAAAAAAAAAB+AwAAAAAAAH8DAAAAAAAAAAAAAH8DAAAAAAAAgAMAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB8AwAAAAAAAHwDAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAAHcDAAAAAAAAdwMAAAAAAAABAAAAPA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB4AwAAAAAAAHgDAAAAAAAAAAAAAAAA8L8"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "all"
					},
					"AwAAAHsDAAAAAAAAfAMAAAAAAAAAAAAAfAMAAAAAAAB9AwAAAAAAAAAAAAB9AwAAAAAAAH4DAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7AwAAAAAAAHsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					3,
					"left_delete",
					null,
					"AwAAAH0DAAAAAAAAfQMAAAAAAAABAAAAbHwDAAAAAAAAfAMAAAAAAAABAAAAbHsDAAAAAAAAewMAAAAAAAABAAAAYQ",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+AwAAAAAAAH4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "_all"
					},
					"BAAAAHsDAAAAAAAAfAMAAAAAAAAAAAAAfAMAAAAAAAB9AwAAAAAAAAAAAAB9AwAAAAAAAH4DAAAAAAAAAAAAAH4DAAAAAAAAfwMAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB7AwAAAAAAAHsDAAAAAAAAAAAAAAAA8L8"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": "d:"
					},
					"AgAAAHcDAAAAAAAAeAMAAAAAAAAAAAAAeAMAAAAAAAB5AwAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB3AwAAAAAAAHcDAAAAAAAAAAAAAAAA8L8"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "/lib/"
					},
					"BQAAAHkDAAAAAAAAegMAAAAAAAAAAAAAegMAAAAAAAB7AwAAAAAAAAAAAAB7AwAAAAAAAHwDAAAAAAAAAAAAAHwDAAAAAAAAfQMAAAAAAAAAAAAAfQMAAAAAAAB+AwAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB5AwAAAAAAAHkDAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					3,
					"left_delete",
					null,
					"AwAAAIADAAAAAAAAgAMAAAAAAAABAAAASX8DAAAAAAAAfwMAAAAAAAABAAAARH4DAAAAAAAAfgMAAAAAAAABAAAARw",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACBAwAAAAAAAIEDAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "gdi"
					},
					"AwAAAH4DAAAAAAAAfwMAAAAAAAAAAAAAfwMAAAAAAACAAwAAAAAAAAAAAACAAwAAAAAAAIEDAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB+AwAAAAAAAH4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"duplicate_line",
					null,
					"AQAAAIsDAAAAAAAAqAMAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9AwAAAAAAAH0DAAAAAAAAAAAAAAAA8L8"
				],
				[
					36,
					1,
					"left_delete",
					null,
					"AQAAAH0DAAAAAAAAfQMAAAAAAAANAAAAL2dkaXBfYWxsLmFoaw",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB9AwAAAAAAAIoDAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"contents": "#include d:/lib/gdip_all.ahk ;C:\\Program Files\\AutoHotkey\\Lib\\gdip_all.ahk\n\n\n\n\n\nMenu, Tray, Icon , Shell32.dll, 14 , 1\n\n:*:gindex::\n        go(\"INDEX\")\n        return\n:*:ghotstrings::\n        go(\"HOTSTRINGS\")\n        return\n:*:gruns::\n        go(\"RUNS\") \n        return                \n:*:gwindows::\n        go(\"WINDOWS\") \n        return             \n:*:gspecial::\n        go(\"FORMATTING & SPECIALS\") \n        return \n:*:gword::\n        go(\"WORD\") \n        return                \n:*:gchrome::\n        go(\"CHROME\") \n        return              \n:*:gincludes::\n        go(\"INCLUDES\") \n        return\n\n\ngo(string){\nSetKeyDelay, 50,\nMsgBox, % \"0: `n \" string\nrawstring := string\nclipboard := \"x=[mid\" . rawstring\nMsgBox, % \"0: `n \" rawstring\n\nsend, ^f \nsend, {backspace}\nsend, ^v\nsend, {enter}\nclipboard := \"\"\nif string != index\n;send, {f3 2}\nsend, ^+{left 10}\nprefix := \"=[\"\nbracketstring := \"\" . rawstring . \"]\"\n\nclipboard := \"\" prefix . \"mid\" . bracketstring\nsend, ^v\nreturn\n}\n\n\n\n\n\n\nsavepic(){\npToken := Gdip_Startup()\nWinGet, hwnd, ID, A\npBitmap := Gdip_BitmapFromHWND(hwnd)\nGdip_SaveBitmapToFile(pBitmap, A_Desktop \"\\TestOutput.png\")\nGdip_DisposeImage(pBitmap)\nGdip_Shutdown(pToken)\n\n\nToolTip, Timed ToolTip`nThis will be displayed for 5 seconds.\nSetTimer, RemoveToolTip, -1000\nreturn\n}\n\nwinset(){\nwindow := WinExist(\"A\")\nmsgbox % \"window: \" window\nreturn window\n}\n\n\n\n\nWinActivate(window){\nmsgbox % \"win: \" window\nmsgbox % \"win: \" window\nWinActivate,  %window%\nreturn\n}\n;================;================bb\nclass chrome_class\n{\n;use it: example := new Chrome_group(2)\n\n    static count := 0\n\n  \n\n    __new(num:=0){\n\n    ;Gui +HwndMyGuiHwnd\n\n    ;gui, Show, noactivate\n    ;MsgBox, % \"count: \" this.count++ ;:= count++ \"`n\" . \"focus window to change\" \";;;\" count\n    ;MsgBox, % \"count: \" this.count ;:= count++ \"`n\" . \"focus window to change\" \";;;\" count\n\n\n    ;MsgBox, % \"Start: `n inside of chrome_group class :\" this.count . \" `n parameter passed in: \" num\n;     MsgBox, % \"7: this.num:\" this.num\n   ; this.num := num ; A := new chrome_group(2) ; A.num is 2.\n   ;  MsgBox, % \"8: this.num := *num* : \" this.num\n\n   if num = 2 \n\n   return this\n    }\n\n    winset(){\n\n    }\n    winactivate(){\n\n    }\n\n    /*\n    use:\n\n\n    */\n/*\n*/\n}\n\n\n\nRemoveToolTip:\nToolTip\nreturn  \n\nclass ManualArray1\n{\n    __Call(vFunc, oParams*)\n    {\n        ;MsgBox, % vFunc \" \" oParams.1 \" \" oParams.2\n        static obj\n        static obj2\n        if !IsObject(obj)\n            obj := {}, obj2 := {}\n        if (vFunc = \"Get\")\n            return obj[oParams.1]\n        if (vFunc = \"Set\")\n        {\n            if !ObjHasKey(obj, oParams.1)\n                ObjPush(obj2, oParams.1)\n            ObjRawSet(obj, oParams.1, oParams.2)\n        }\n        if (vFunc = \"Address\")\n            return &obj\n        if (vFunc = \"Address2\")\n            return &obj2\n        if (vFunc = \"Count\")\n            return NumGet(&obj + 4*A_PtrSize)\n        if (vFunc = \"GetKey\")\n            return obj2[oParams.1]\n        if (vFunc = \"GetValue\")\n            return obj[obj2[oParams.1]]\n    }\n}\nclass MyClassTestDefine\n{\n    a := \"A\"\n    b := {}\n    b.c := \"C\"\n    d := {}\n    d.e := {}\n    d.e.f := \"F\"\n    now := A_Now \" \" A_MSec\n    MyMethod()\n    {\n        static g\n        g++\n        MsgBox, % \"2 \" this.a \" \" this.b.c \" \" this.d.e.f \" \" this.now \" \" g\n    }\n}\nclass ManualArray\n{\n    obj:=[]\n    obj2:=[]\n    __Call(vFunc, oParams*)\n    {\n        if (vFunc = \"Get\")\n            return this.obj[oParams.1]\n        if (vFunc = \"Set\")\n        {\n            if !objHasKey(this.obj, oParams.1)\n                objPush(this.obj2, oParams.1)\n            objRawSet(this.obj, oParams.1, oParams.2)\n        }\n        if (vFunc = \"Address\")\n            return &this.obj\n        if (vFunc = \"Address2\")\n            return &this.obj2\n        if (vFunc = \"Count\")\n            return NumGet(&this.obj + 4*A_PtrSize)\n        if (vFunc = \"GetKey\")\n            return this.obj2[oParams.1]\n        if (vFunc = \"GetValue\")\n            return this.obj[this.obj2[oParams.1]]\n    }\n}\nclass fileobj1{ \ncount := __enum\n;static count := 1++\n}\nclass parsefile{\nfileobj := file\n}\n\n\n\nClass Window3{\n   __New(){\n   static num := new tmp\n;    Class Tmp{\n       A:=1++\n        Static B:=1++\n       \n   msgbox % num\n;}   \n}\n    \n    Get(){\n        WingetTitle TitleVar, A ; Get title from Active window.\n        This.Title:=TitleVar ; Set TitleVar to This.Title\n        \n        WinGet IDVar,ID,A ; Get ID from Active window.\n        This.ID:=IDVar ; Set IDVar to This.ID\n    }\n\n    Activate(){ ;Activates window with Title - This.Title \n        IfWinExist, % \"ahk_id \"This.ID\n            WinActivate % \"ahk_id \" This.ID\n        else\n            MsgBox % \"There is no Window with ID: \"This.ID\n    }  \n    AnnounceWinProps(){ ;Create message box with title and ID\n    \n        MsgBox % \"Title is: \" This.Title \"`n ID is: \" This.ID\n    }\n}\n\nClass log{\n    Title:= \"log\" ;Variable Title\n    \n    Activate() ;Activates window with Title - This.Title\n    { \n        IfWinExist, % This.Title\n            WinActivate \n        else\n            MsgBox % \"There is no Window: \"This.Title \"`nPleas Run Notepad!\"\n\n    }   \n}\n\n\nClass Window1{\n    Title:= \"Untitled - Notepad\" ;Variable Title\n    Activate() ;Activates window with Title - This.Title\n    { \n        IfWinExist, % This.Title\n            WinActivate \n        else\n            MsgBox % \"There is no Window: \"This.Title \"`nPleas Run Notepad!\"\n\n    }   \n}\n\nArrayHasKey(Array, MultiDimKey*) {\n    If !IsObject(Array)\n        return\n    For each, key in MultiDimKey {\n        If !Array.HasKey(key)\n            return false\n        Array := Array[key]\n    } return true\n}\n\nrun(path){\n\n    run % path\n    return\n}\n\nchrome_name(num:=0){  \n\nSetKeyDelay, 100\n;MsgBox, % \"1: `n \" num++\n\nif (num = 0)\n{\n\n;MsgBox, % \"num: `n \" num++\n\n;MsgBox, % \"0: num: \" num\nsend,{Alt 2}\nsend,{space 2}\nsend, l\nsend, w\nsend, % \"dkz\" . num\nsend,{enter}\nreturn num\n}\nif (num = 1)\n{\n    ;MsgBox, % \"0: num is : `n \" num++\n;num++\nsend,{Alt 2}\nsend,{space 2}\nsend, l\nsend, w\nsend, % \"dkz\" . num\nsend,{enter}\nMsgBox, % \"1:\" sent dkz1\nreturn num\n\n}\nif (num = 2)\n{\n\n;MsgBox, % \"2: `n num is : \" num\nsend,{Alt 2}\nsend,{space 2}\nsend, l\nsend, w\nsend, % \"dkz\" . num\nsend,{enter}\nMsgBox, % \"2:\" sent dkz2\nreturn\n\n}\n\n/*\nsend,{Alt 2}\nsend,{space 2}\nsend, l\nsend, w\nsend, dkz\nsend,{enter}\nreturn\n*/\n}\n\nchrome_group(num := 0){\n;MsgBox, % \"Start: `n inside of chrome_group class : `n parameter passed in: \" num\nthis.num := num ; A := new chrome_group(2) ; A.num is 2.\nif (num = 0)\n{\nstatic count := 0\ncount++\n;MsgBox, % \"0: count:\" count\nWinActivate, ahk_exe chrome.exe\nchrome_name()\nsleep, 100\nsend, !g\nsleep, 100\nMsgBox, % \"1: chrome window is :\"  dkz1 \"`n \"\nif IfMsgBox, yes \n;Continue\n{\nMsgBox, % \"5: put a gotosub here that uses shinsimagescan class\" \n}\nelse IfMsgBox, cancel \n{\nMsgBox, % \"4:\" \"canceled operation\"\nreturn\n}\nelse if (num := 1)\n{\nWinActivate, dkz1 \nWinWaitActive, dkz1\nsleep, 100\nsend, !g\nsleep, 100\nMsgBox, % \"1: chrome window is :\"  dkz1\nGoto, chrome_label\nreturn\n\n}\nelse if (num := 2)\n{\nsend,{Alt 2}\nsend,{space 2}\nsend, l\nsend, w\nsend, dkz2\nsend,{enter}\nMsgBox, % \"2: chrome window is :\" dkz2\nreturn\n\n}\n\n\n\nchrome_label:\n\nWinActivate, dkz\nscan := new Shinsimagescanclass(dkz)\n;scan.pixelregion()\n;0xF6F6F6\n;DD4D11\nif (scan.Pixel(0x8AB4F8,,x,y)) {\n    tooltip % \"Found a pixel at \" x \",\" y\n    mousemove,  x , y  \n    MouseClick, r, X, Y, 1, \n}\n\nreturn\n\n;return\n\n/*WinActivate, dkz \nWinWaitActive, dkz\nsleep, 100\nsend, !g\nsleep, 100\nreturn\n*/\n}\n\n\n\n\n    /*\n    use:\n\n\n    */\n/*\n*/\n\n}\n\n\n\n\n   \nff_group(){\nWinActivate, dkz1 \nWinWaitActive, dkz1\n;M(\"go\")\nsend, !g\n}\nreturn\n\n\n\ngetlog(){\n  ;  Loop, Read, InputFile [, OutputFile]\nLoop, Read, A_ScriptDir\\logs\\q-google.txt , file\nfor k,v in file\nmsgbox % A_Index is A_LoopField\n}\ngetwin() {\n    global log\n    FormatTime, time, , MMdd-HH-mm\n    WinGetActiveTitle, Title\n    WinGet, win_proc, ProcessName, A\n    WinGet, uniq_id, ID, A\n    ; ASCII 30 octal 036 Record Separator\n    if %uniq_id%\n    FileAppend, \u001e%A_Tab%%time%%A_Tab%%uniq_id%%A_Tab%%win_proc%%A_Tab%%Title%`n, *%log%\n}\ntimeSinceLastCall(id=1, reset=0){\n   global t\n   static arr:=array()\n   if (reset=1)\n   {\n      ((id=0) ? arr:=[] : (arr[id, 0]:=arr[id, 1]:=\"\", arr[id, 2]:=0))\n      return\n   }\n   arr[id, 2]:=!arr[id, 2]\n   arr[id, arr[id, 2]]:=A_TickCount  \n   ;msgbox % \"abs var:\" abs\n   return global abs(arr[id,1]-arr[id,0])\n}\ntarget(c){\n    send, !d\n    send, ^a\n    send, {delete}\nreturn\n}\ntarget2(){\nWinGet, hWnd, ID, A\nhCtl := \"\"\nif !hCtl ;check for treeview e.g. Win 7\n{\nControlGet, hCtl, Hwnd, , SysTreeView321, ahk_id %hWnd%\nif hCtl\nAcc := Acc_Get(\"Object\", \"outline\", 0, \"ahk_id \" hCtl)\n}\nmsgbox % oAcc.accChildCount\nLoop, % oAcc.accChildCount\nfor %A_Index% in % oAcc.accChildCount\n{\n    MsgBox, 4,, Control #%A_Index% is \"%A_LoopField%\". Continue?\n    IfMsgBox, No\n        break\n}\nLoop, % oAcc.accChildCount\nif (oAcc.accName(A_Index) = \"Desktop\")\nif (1, oAcc.accDoDefaultAction(A_Index))\nbreak\nLoop, % oAcc.accChildCount\nreturn\n}\nfs(){\napp := \"z:/\"\nrun explorer.exe \nWinWaitActive ahk_exe explorer.exe  \nsend, {f4} \nsend, ^a\nsend, %app%\nsend, {enter}\nreturn\n}\nClipChanged(Type) {\n    ToolTip Clipboard data type: %Type%\n    Sleep 1000\n    ToolTip  ; Turn off the tip.\n    return\n}\nGetTime(){\n    FormatTime, OutputVar\n    MsgBox, The time is %OutputVar%\n}\nGetTime2(){\n    FormatTime, OutputVar\n    Return OutputVar   ;value returned to calling variable\n}\nGetKeyHistoryText(){\n    active_window := WinActive(\"A\")\n    dhw := A_DetectHiddenWindows\n    DetectHiddenWindows, On\n    Process, Exist\n    hwnd := WinExist(\"ahk_class AutoHotkey ahk_pid \" . ErrorLevel)\n    was_active  := (hwnd=active_window)\n    was_visible := was_active || DllCall(\"IsWindowVisible\", \"UInt\", hwnd)\n    if (!was_active)\n    {   ; There seems to be no way to prevent KeyHistory from activating the window,\n        ; so block user input to prevent accidental somethings.\n        BlockInput, On\n        if (!was_visible) {\n            ; Seemed to work on XP, but not Vista:\n            ;WinGetPos, x, y         ; remember position\n            ;WinMove, -10000, -10000 ; should hopefully keep it out of the way...\n            ; Works, but shows an empty frame on Vista:\n            ;WinSet, Region, W0 H0 0-0\n            \n            WinGet, was_tp, Transparent\n            WinSet, Transparent, 0\n        }\n    }\n    KeyHistory\n    ; Get the variable list text.\n    ControlGetText, text, Edit1\n    if (!was_active)\n    {   ; un-block input\n        BlockInput, Off\n        if (!was_visible) {\n            WinHide             ; restore invisibility\n            ;WinMove, %x%, %y%   ; restore position\n            ;WinSet, Region\n            WinSet, Transparent, % (was_tp=\"\") ? \"OFF\" : was_tp\n        }\n    \n        ; Focus isn't always restored to the previously active window, so do this.\n        WinActivate, ahk_id %active_window%\n    }\n    DetectHiddenWindows, %dhw%\n    return text\n}\nCount(String, Needle, Type=\"\", SubPattern=\"\"){\n    Global\n    Local f := 1, n := 0, Output := \"\"\n    If (Type = \"\") {\n        StringReplace, String, String, %Needle%, , UseErrorLevel\n        n := ErrorLevel\n    } Else If Type {\n\n            WinSet, Transparent, % (was_tp=\"\") ? \"OFF\" : wa        While (f := RegExMatch(String, Needle, Output, f + StrLen(Output)))\n            n += 1, %Type%%n% := Output%SubPattern%\n        %Type% := n\n    } Else\n        RegExReplace(String, Needle, \"\", n)\n    Return n\n}\nss(  ){\n;global c = c++\n;msgbox % c\n;global c := c++\nrandom, rand, 1,10000000000\n;FileSelectFile, OutputVar [, Options, RootDir[\\DefaultFilename], Prompt, Filter]\n;global c := c + 1\nfrontproject = P:/app/(((snips)))\nFilePath = %frontproject%\\%rand%\nfrontfile = %filepath%.png\n\nif FileExist( frontfile . \".png\"){\n    tooltip, it do, ,,1\nreturn global frontfile, global frontproject , global c := c + 1\n\n}\n\ntooltip, created, ,,1, 1000\n  SplitPath, FilePath, FileName,, FileExt, FileNameNoExt\nif (FileExt != \"png\")   ; Appends the .png file extension if it is not already present \n  FilePath .= \".png\", FileName .= \".png\"\nWinWaitClose, Save Screenshot\nSleep, 200\npToken := Gdip_Startup()\npBitmap := Gdip_BitmapFromScreen(\"0|0|\" A_ScreenWidth \"|\" A_ScreenHeight)\nGdip_SaveBitmapToFile(pBitmap, FilePath)\nGdip_DisposeImage(pBitmap)\nGdip_Shutdown(pToken)\n;msgbox % saved to filepath\nmsgbox % frontproject \"-\" frontfile . \"frontproject - frontfiles\"\n;msgbox % c\nreturn global frontfile, global frontproject , global c := c + 1\n\n\n    \n\n\n} \np(){\n\n    send, !d\n    ;send, ^a\n    ;send, {del}\n    send, p:\n    send, {enter}\n    return\n}\nCenterImgSrchCoords(File, ByRef CoordX, ByRef CoordY){\n    static LoadedPic\n    LastEL := ErrorLevel\n    Gui, Pict:Add, Pic, vLoadedPic, % RegExReplace(File, \"^(\\*\\w+\\s)+\")\n    GuiControlGet, LoadedPic, Pict:Pos\n    Gui, Pict:Destroy\n    CoordX += LoadedPicW // 2\n    CoordY += LoadedPicH // 2\n    ErrorLevel := LastEL\n}\ngoexplore(){\n    WinActive(\"ahk_exe explorer.exe\")\n        WinWaitActive, ahk_exe explorer.exe\n        WinActivate, ahk_exe explorer.exe\n        send, !d\n        send, ^a \n        send, {delete}\n        send, %frontproject%\n}\nlistFiles(Folder) { ; list the file directory incl. subdirs\n    List := \"\"\n    Loop, Files, %Folder%\\*.*, R\n        if (A_LoopFileExt = \"lnk\") {\n            ; replace lnk-files with paths to linked target\n            FileGetShortCut, %A_LoopFileLongPath%, linkedTarget\n            List .= linkedTarget \"`r`n\"\n        } else\n            List .= A_LoopFileFullPath \"`r`n\"\n    return List\n}\nsearchahk(answer,outputdir){\nmsgbox % outputdir\n    SetWorkingDir, outputdir\n   ; FileSelectFolder, Outputdir , *StartingFolder, , Prompt\n    msgbox % outputdir\n    SetWorkingDir, outputdir\nmsgbox,% findstring(\"%answer%\", outputdir \"/*.ahk\")\n\n/*findstring(string, filepattern = \"*.*\", rec = 0, case = 0){\n    len := strlen(string)\n    if (len = 0)\n        return\n    loop,% filepattern, 0,% rec\n    {\n        fileread, x,% a_loopfilefullpath\n        if (pos := instr(x, string, case)){\n            positions .= a_loopfilefullpath \"|\" pos\n            while(pos := instr(x, string, case, pos+len))\n                positions .= \"|\" pos\n            positions .= \"`n\"\n        }\n    }\n    return, positions\n*/\n\n\n; edit: changed pattern to filepattern to reduce \"confusion\".\nreturn\n}\n\nfindstring1(string, filepattern = \"*.*\", rec = 1, case = 0){\n    len := strlen(string)\n    if (len = 0)\n        return\n    loop,% filepattern, 0,% rec\n    {\n        fileread, x,% a_loopfilefullpath\n        if (pos := instr(x, string, case)){\n            positions .= a_loopfilefullpath \"|\" pos\n            while(pos := instr(x, string, case, pos+len))\n                positions .= \"|\" pos\n            positions .= \"`n\"\n        }\n    }\n     return\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n; ==================================================================================================================================\n; Function:       Notifies about changes within folders.\n;                 This is a rewrite of HotKeyIt's WatchDirectory() released at\n;                    http://www.autohotkey.com/board/topic/60125-ahk-lv2-watchdirectory-report-directory-changes/\n; Tested with:    AHK 1.1.23.01 (A32/U32/U64)\n; Tested on:      Win 10 Pro x64\n; Usage:          WatchFolder(Folder, UserFunc[, SubTree := False[, Watch := 3]])\n; Parameters:\n;     Folder      -  The full qualified path of the folder to be watched.\n;                    Pass the string \"**PAUSE\" and set UserFunc to either True or False to pause respectively resume watching.\n;                    Pass the string \"**END\" and an arbitrary value in UserFunc to completely stop watching anytime.\n;                    If not, it will be done internally on exit.\n;     UserFunc    -  The name of a user-defined function to call on changes. The function must accept at least two parameters:\n;                    1: The path of the affected folder. The final backslash is not included even if it is a drive's root\n;                       directory (e.g. C:).\n;                    2: An array of change notifications containing the following keys:\n;                       Action:  One of the integer values specified as FILE_ACTION_... (see below).\n;                                In case of renaming Action is set to FILE_ACTION_RENAMED (4).\n;                       Name:    The full path of the changed file or folder.\n;                       OldName: The previous path in case of renaming, otherwise not used.\n;                       IsDir:   True if Name is a directory; otherwise False. In case of Action 2 (removed) IsDir is always False.\n;                    Pass the string \"**DEL\" to remove the directory from the list of watched folders.\n;     SubTree     -  Set to true if you want the whole subtree to be watched (i.e. the contents of all sub-folders).\n;                    Default: False - sub-folders aren't watched.\n;     Watch       -  The kind of changes to watch for. This can be one or any combination of the FILE_NOTIFY_CHANGES_...\n;                    values specified below.\n;                    Default: 0x03 - FILE_NOTIFY_CHANGE_FILE_NAME + FILE_NOTIFY_CHANGE_DIR_NAME\n; Return values:\n;     Returns True on success; otherwise False.\n; Change history:\n;     1.0.03.00/2021-10-14/just me        -  bug-fix for addding, removing, or updating folders.\n;     1.0.02.00/2016-11-30/just me        -  bug-fix for closing handles with the '**END' option.\n;     1.0.01.00/2016-03-14/just me        -  bug-fix for multiple folders\n;     1.0.00.00/2015-06-21/just me        -  initial release\n; License:\n;     The Unlicense -> http://unlicense.org/\n; Remarks:\n;     Due to the limits of the API function WaitForMultipleObjects() you cannot watch more than MAXIMUM_WAIT_OBJECTS (64)\n;     folders simultaneously.\n; MSDN:\n;     ReadDirectoryChangesW          msdn.microsoft.com/en-us/library/aa365465(v=vs.85).aspx\n;     FILE_NOTIFY_CHANGE_FILE_NAME   = 1   (0x00000001) : Notify about renaming, creating, or deleting a file.\n;     FILE_NOTIFY_CHANGE_DIR_NAME    = 2   (0x00000002) : Notify about creating or deleting a directory.\n;     FILE_NOTIFY_CHANGE_ATTRIBUTES  = 4   (0x00000004) : Notify about attribute changes.\n;     FILE_NOTIFY_CHANGE_SIZE        = 8   (0x00000008) : Notify about any file-size change.\n;     FILE_NOTIFY_CHANGE_LAST_WRITE  = 16  (0x00000010) : Notify about any change to the last write-time of files.\n;     FILE_NOTIFY_CHANGE_LAST_ACCESS = 32  (0x00000020) : Notify about any change to the last access time of files.\n;     FILE_NOTIFY_CHANGE_CREATION    = 64  (0x00000040) : Notify about any change to the creation time of files.\n;     FILE_NOTIFY_CHANGE_SECURITY    = 256 (0x00000100) : Notify about any security-descriptor change.\n;     FILE_NOTIFY_INFORMATION        msdn.microsoft.com/en-us/library/aa364391(v=vs.85).aspx\n;     FILE_ACTION_ADDED              = 1   (0x00000001) : The file was added to the directory.\n;     FILE_ACTION_REMOVED            = 2   (0x00000002) : The file was removed from the directory.\n;     FILE_ACTION_MODIFIED           = 3   (0x00000003) : The file was modified.\n;     FILE_ACTION_RENAMED            = 4   (0x00000004) : The file was renamed (not defined by Microsoft).\n;     FILE_ACTION_RENAMED_OLD_NAME   = 4   (0x00000004) : The file was renamed and this is the old name.\n;     FILE_ACTION_RENAMED_NEW_NAME   = 5   (0x00000005) : The file was renamed and this is the new name.\n;     GetOverlappedResult            msdn.microsoft.com/en-us/library/ms683209(v=vs.85).aspx\n;     CreateFile                     msdn.microsoft.com/en-us/library/aa363858(v=vs.85).aspx\n;     FILE_FLAG_BACKUP_SEMANTICS     = 0x02000000\n;     FILE_FLAG_OVERLAPPED           = 0x40000000\n; ==================================================================================================================================\n\n/*\n\nWatchFolder(Folder, UserFunc, SubTree := False, Watch := 0x03) {\n   Static DummyObject := {Base: {__Delete: Func(\"WatchFolder\").Bind(\"**END\", \"\")}}\n   Static TimerID := \"**\" . A_TickCount\n   Static TimerFunc := Func(\"WatchFolder\").Bind(TimerID, \"\")\n   Static MAXIMUM_WAIT_OBJECTS := 64\n   Static MAX_DIR_PATH := 260 - 12 + 1\n   Static SizeOfLongPath := MAX_DIR_PATH << !!A_IsUnicode\n   Static SizeOfFNI := 0xFFFF ; size of the FILE_NOTIFY_INFORMATION structure buffer (64 KB)\n   Static SizeOfOVL := 32     ; size of the OVERLAPPED structure (64-bit)\n   Static WatchedFolders := {}\n   Static EventArray := []\n   Static WaitObjects := 0\n   Static BytesRead := 0\n   Static Paused := False\n   ; ===============================================================================================================================\n   If (Folder = \"\")\n      Return False\n   SetTimer, % TimerFunc, Off\n   RebuildWaitObjects := False\n   ; ===============================================================================================================================\n   If (Folder = TimerID) { ; called by timer\n      If (ObjCount := EventArray.Count()) && !Paused {\n         ObjIndex := DllCall(\"WaitForMultipleObjects\", \"UInt\", ObjCount, \"Ptr\", &WaitObjects, \"Int\", 0, \"UInt\", 0, \"UInt\")\n         While (ObjIndex >= 0) && (ObjIndex < ObjCount) {\n            Event := NumGet(WaitObjects, ObjIndex * A_PtrSize, \"UPtr\")\n            Folder := EventArray[Event]\n            If DllCall(\"GetOverlappedResult\", \"Ptr\", Folder.Handle, \"Ptr\", Folder.OVLAddr, \"UIntP\", BytesRead, \"Int\", True) {\n               Changes := []\n               FNIAddr := Folder.FNIAddr\n               FNIMax := FNIAddr + BytesRead\n               OffSet := 0\n               PrevIndex := 0\n               PrevAction := 0\n               PrevName := \"\"\n               Loop {\n                  FNIAddr += Offset\n                  OffSet := NumGet(FNIAddr + 0, \"UInt\")\n                  Action := NumGet(FNIAddr + 4, \"UInt\")\n                  Length := NumGet(FNIAddr + 8, \"UInt\") // 2\n                  Name   := Folder.Name . \"\\\" . StrGet(FNIAddr + 12, Length, \"UTF-16\")\n                  IsDir  := InStr(FileExist(Name), \"D\") ? 1 : 0\n                  If (Name = PrevName) {\n                     If (Action = PrevAction)\n                        Continue\n                     If (Action = 1) && (PrevAction = 2) {\n                        PrevAction := Action\n                        Changes.RemoveAt(PrevIndex--)\n                        Continue\n                     }\n                  }\n                  If (Action = 4)\n                     PrevIndex := Changes.Push({Action: Action, OldName: Name, IsDir: 0})\n                  Else If (Action = 5) && (PrevAction = 4) {\n                     Changes[PrevIndex, \"Name\"] := Name\n                     Changes[PrevIndex, \"IsDir\"] := IsDir\n                  }\n                  Else\n                     PrevIndex := Changes.Push({Action: Action, Name: Name, IsDir: IsDir})\n                  PrevAction := Action\n                  PrevName := Name\n               } Until (Offset = 0) || ((FNIAddr + Offset) > FNIMax)\n               If (Changes.Length() > 0)\n                  Folder.Func.Call(Folder.Name, Changes)\n               DllCall(\"ResetEvent\", \"Ptr\", Event)\n               DllCall(\"ReadDirectoryChangesW\", \"Ptr\", Folder.Handle, \"Ptr\", Folder.FNIAddr, \"UInt\", SizeOfFNI\n                                              , \"Int\", Folder.SubTree, \"UInt\", Folder.Watch, \"UInt\", 0\n                                              , \"Ptr\", Folder.OVLAddr, \"Ptr\", 0)\n            }\n            ObjIndex := DllCall(\"WaitForMultipleObjects\", \"UInt\", ObjCount, \"Ptr\", &WaitObjects, \"Int\", 0, \"UInt\", 0, \"UInt\")\n            Sleep, 0\n         }\n      }\n   }\n   ; ===============================================================================================================================\n   Else If (Folder = \"**PAUSE\") { ; called to pause/resume watching\n      Paused := !!UserFunc\n      RebuildObjects := Paused\n   }\n   ; ===============================================================================================================================\n   Else If (Folder = \"**END\") { ; called to stop watching\n      For Event, Folder In EventArray {\n         DllCall(\"CloseHandle\", \"Ptr\", Folder.Handle)\n         DllCall(\"CloseHandle\", \"Ptr\", Event)\n      }\n      WatchedFolders := {}\n      EventArray := []\n      Paused := False\n      Return True\n   }\n   ; ===============================================================================================================================\n   Else { ; called to add, update, or remove folders\n      Folder := RTrim(Folder, \"\\\")\n      VarSetCapacity(LongPath, MAX_DIR_PATH << !!A_IsUnicode, 0)\n      If !DllCall(\"GetLongPathName\", \"Str\", Folder, \"Ptr\", &LongPath, \"UInt\", MAX_DIR_PATH)\n         Return False\n      VarSetCapacity(LongPath, -1)\n      Folder := LongPath\n      If (WatchedFolders.HasKey(Folder)) { ; update or remove\n         Event :=  WatchedFolders[Folder]\n         FolderObj := EventArray[Event]\n         DllCall(\"CloseHandle\", \"Ptr\", FolderObj.Handle)\n         DllCall(\"CloseHandle\", \"Ptr\", Event)\n         EventArray.Delete(Event)\n         WatchedFolders.Delete(Folder)\n         RebuildWaitObjects := True\n      }\n      If InStr(FileExist(Folder), \"D\") && (UserFunc <> \"**DEL\") && (EventArray.Count() < MAXIMUM_WAIT_OBJECTS) {\n         If (IsFunc(UserFunc) && (UserFunc := Func(UserFunc)) && (UserFunc.MinParams >= 2)) && (Watch &= 0x017F) {\n            Handle := DllCall(\"CreateFile\", \"Str\", Folder . \"\\\", \"UInt\", 0x01, \"UInt\", 0x07, \"Ptr\",0, \"UInt\", 0x03\n                                          , \"UInt\", 0x42000000, \"Ptr\", 0, \"UPtr\")\n            If (Handle > 0) {\n               Event := DllCall(\"CreateEvent\", \"Ptr\", 0, \"Int\", 1, \"Int\", 0, \"Ptr\", 0)\n               FolderObj := {Name: Folder, Func: UserFunc, Handle: Handle, SubTree: !!SubTree, Watch: Watch}\n               FolderObj.SetCapacity(\"FNIBuff\", SizeOfFNI)\n               FNIAddr := FolderObj.GetAddress(\"FNIBuff\")\n               DllCall(\"RtlZeroMemory\", \"Ptr\", FNIAddr, \"Ptr\", SizeOfFNI)\n               FolderObj[\"FNIAddr\"] := FNIAddr\n               FolderObj.SetCapacity(\"OVLBuff\", SizeOfOVL)\n               OVLAddr := FolderObj.GetAddress(\"OVLBuff\")\n               DllCall(\"RtlZeroMemory\", \"Ptr\", OVLAddr, \"Ptr\", SizeOfOVL)\n               NumPut(Event, OVLAddr + 8, A_PtrSize * 2, \"Ptr\")\n               FolderObj[\"OVLAddr\"] := OVLAddr\n               DllCall(\"ReadDirectoryChangesW\", \"Ptr\", Handle, \"Ptr\", FNIAddr, \"UInt\", SizeOfFNI, \"Int\", SubTree\n                                              , \"UInt\", Watch, \"UInt\", 0, \"Ptr\", OVLAddr, \"Ptr\", 0)\n               EventArray[Event] := FolderObj\n               WatchedFolders[Folder] := Event\n               RebuildWaitObjects := True\n            }\n         }\n      }\n      If (RebuildWaitObjects) {\n         VarSetCapacity(WaitObjects, MAXIMUM_WAIT_OBJECTS * A_PtrSize, 0)\n         OffSet := &WaitObjects\n         For Event In EventArray\n            Offset := NumPut(Event, Offset + 0, 0, \"Ptr\")\n      }\n   }\n   ; ===============================================================================================================================\n   If (EventArray.Count() > 0)\n      SetTimer, % TimerFunc, -100\n   Return (RebuildWaitObjects) ; returns True on success, otherwise False\n}\n*/\n\n/*  \n\n\n*/\n\n\n;test\n/*\n||||=====================\n||||=====================\n||||\n||||\n||||\n||||\n||||=====================\n||||=====================\n||||\n||||\n||||\n||||\n||||\n||||\n*/\n\nreplaceFile(File, Content){\n    FileDelete, %File%\n    FileAppend, %Content%, %File%\n}\nReturn\n; .......\nfindstring(string, filepattern = \"*.*\", rec = 0, case = 0){\n    msgbox % filepattern\n    msgbox %  \"findstring: \" outputdir\n    len := strlen(string)\n    if (len = 0)\n        return\n    loop,% filepattern, 0,% rec\n    {\n        msgbox % a_loopfilefullpath\n        fileread, x,% a_loopfilefullpath\n        if (pos := instr(x, string, case)){\n            positions .= a_loopfilefullpath \"|\" pos\n            while(pos := instr(x, string, case, pos+len))\n                positions .= \"|\" pos\n            positions .= \"`n\"\n        }\n    }\n    return, positions\n}\n\n/*replaceFile(File, Content){\n    FileDelete, %File%\n    FileAppend, %Content%, %File%\n}\n*/\n\nini( filename = 0, updatemode = 0 ){\n;\n; updates From/To a whole .ini file\n;\n; By default the update mode is set to 0 (Read)\n; and creates variables like this:\n; %Section%%Key% = %value%\n;\n; You don't have to state the updatemode when reading, just use\n;\n; update(filename)\n;\n; The function can be called to write back updated variables to\n; the .ini by setting the updatemode to 1, like this:\n;\n; update(filename, 1)\n;\n\nLocal s, c, p, key, k, write\n\n   if not filename\n      filename := SubStr( A_ScriptName, 1, -3 ) . \"ini\"\n\n   FileRead, s, %filename%\n\n   Loop, Parse, s, `n`r, %A_Space%%A_Tab%\n   {\n      c := SubStr(A_LoopField, 1, 1)\n      if (c=\"[\")\n         key := SubStr(A_LoopField, 2, -1)\n      else if (c=\";\")\n         continue\n      else {\n         p := InStr(A_LoopField, \"=\")\n         if p {\n         k := SubStr(A_LoopField, 1, p-1)\n       if updatemode=0\n          %key%%k% := SubStr(A_LoopField, p+1)\n       if updatemode=1\n       {\n          write := %key%%k%\n          IniWrite, %write%, %filename%, %key%, %k%    \n       }\n         }\n      }\n   }\n}\n\nfindHWND(controlNames,executableName){\n\n    WinGet, windowIds, List,% \"ahk_exe \" . executableName                       \n    Loop, %windowIds%                                                   ; Note: ControlList gives a `n delimited string, and List gives a pseudo array.\n    {\n        WinGet,tmpList,ControlList,% \"ahk_id \" . windowIds%A_Index%     ; From doc: \"Controls are sorted according to their Z-order, \n        if (tmpList=controlNames)                                       ; which is usually the same order as TAB key navigation if the window supports tabbing\" so the order should be well defined.\n            return windowIds%A_Index%                                   ; Window found, return its HWND.\n    }\n    \n    return 0                                                            ; Window not found. \n}\n\nExplorer_GetSelection(hwnd=\"\") {\n    hwnd := hwnd ? hwnd : WinExist(\"A\")\n    WinGetClass class, ahk_id %hwnd%\n    if (class=\"CabinetWClass\" or class=\"ExploreWClass\" or class=\"Progman\")\n        for window in ComObjCreate(\"Shell.Application\").Windows\n            if (window.hwnd==hwnd)\n    sel := window.Document.SelectedItems\n    for item in sel\n    ToReturn .= item.path \"`n\"\n    return Trim(ToReturn,\"`n\")\n}\n\nm(x*){\n    static Buttons:={YNC:\"Yes,No,Cancel\",YN:\"Yes,No\",OC:\"OK,Cancel\",ARI:\"Abort,Retry,Ignore\"}\n    m:=New MsgBox(),Default:=1\n    for a,b in x{\n        Cmd:=StrSplit(b,\":\")\n        if(Cmd.1=\"Btn\")\n            Btn:=Buttons[Cmd.2]\n        else if(Cmd.1=\"HTML\"){\n            HTML:=1\n        }else if(Cmd.1=\"Def\"){\n            Default:=Cmd.2\n        }else{\n            Msg.=IsObject(b)?Obj2String(b):b \"`r`n\"\n        }\n    }\n    m[HTML?\"SetHTML\":\"SetText\"](Msg)\n    if(Btn)\n        m.SetButtons(Btn)\n    return m.Show(\"Win\",Default)\n}\n\nObj2String(Obj,FullPath:=1,BottomBlank:=0){\n    static String,Blank\n    if(FullPath=1)\n        String:=FullPath:=Blank:=\"\"\n    if(IsObject(Obj)&&!Obj.XML){\n        for a,b in Obj{\n            if(IsObject(b)&&b.OuterHtml)\n                String.=FullPath \".\" a \" = \" b.OuterHtml\n            else if(IsObject(b)&&!b.XML)\n                Obj2String(b,FullPath \".\" a,BottomBlank)\n            else{\n                if(BottomBlank=0)\n                    String.=FullPath \".\" a \" = \" (b.XML?b.XML:b) \"`n\"\n                else if(b!=\"\")\n                    String.=FullPath \".\" a \" = \" (b.XML?b.XML:b) \"`n\"\n                else\n                    Blank.=FullPath \".\" a \" =`n\"\n            }\n        }\n    }else if(Obj.XML)\n        String.=FullPath Obj.XML \"`n\"\n    return String Blank\n}\n\nClass MsgBox{\n    static Keep:=[]\n    _Event(Name,Event){\n        local\n        static\n        Node:=Event.srcElement\n        CTRL:=this\n        if(Name=\"MouseDown\"){\n            Mode:=A_CoordModeMouse,Delay:=A_WinDelay\n            SetWinDelay,-1\n            CoordMode,Mouse,Screen\n            if(Node.ID=\"Title\"){\n                MouseGetPos,XX,YY\n                WinGetPos,X,Y,,,% this.ID\n                OffX:=XX-X,OffY:=YY-Y,LastX:=XX,LastY:=YY\n                while(GetKeyState(\"LButton\")){\n                    MouseGetPos,X,Y\n                    if(LastX!=X||LastY!=Y)\n                        WinMove,% this.ID,,% X-OffX,% Y-OffY\n                    LastX:=X,LastY:=Y\n                    Sleep,20\n                }\n            }\n            CoordMode,Mouse,%Mode%\n            SetWinDelay,%Delay%\n        }else if(Name=\"OnClick\"){\n            if(Node.ID=\"Close\"){\n                this.ResultValue:=Chr(127)\n                Gui,% this.Win \":Destroy\"\n            }else if(Node.ID=\"Settings\"){\n                return m(\"Settings Coming Soon\")\n                TT:=this\n                SetTimer,ShowSettingsWindow,-1\n                return\n                ShowSettingsWindow:\n                Gui,MsgBoxSettings:Destroy\n                Gui,MsgBoxSettings:Default\n                Gui,Color,0,0\n                Gui,Font,c0xAAAAAA\n                Gui,Add,Text,,% \"Settings For: \" TT.ParentTitle\n                Gui,Show\n                return\n            }else if(Node.ID=\"Testing\"){\n                this.ResultValue:=Node.Value\n            }if(Node.NodeName=\"Button\"){\n                this.ResultValue:=Node.Value\n            }\n        }\n    }__New(Options:=\"\"){\n        local\n        global MsgBox\n        static wb\n        Win:=\"MyMsgBox\" A_TickCount\n        WinGetActiveTitle,Title\n        Gui,%Win%:Destroy\n        Gui,%Win%:Default\n        Gui,-Caption +HWNDMain +LabelMsgBox. ;+Resize\n        Gui,Margin,0,0\n        WinGet,HWND,ID,A\n        Ver:=this.FixIE(11)\n        MsgBox.Keep[Main]:=this\n        Gui,Add,ActiveX,vwb HWNDIE,mshtml\n        this.FixIE(Ver),this.Owner:=HWND,this.HWND:=IE,this.Win:=Win,this.ParentTitle:=Title,this.ID:=\"ahk_id\" Main+0,this.KeyResult:=[],this.BoundResult:=this.Result.Bind(this),this.CSS:=[]\n        RegRead,CheckReg,HKCU\\SOFTWARE\\Microsoft\\Windows\\DWM,ColorizationColor\n        Color:=(CC:=SubStr(Format(\"{:x}\",CheckReg+0),-5))?CC:\"AAAAAA\",this.ThemeColor:=\"#\" Color,wb.Navigate(\"About:Blank\")\n        for a,b in {Border:DllCall(\"GetSystemMetrics\",Int,33,Int)-1}\n            this[a]:=b\n        Gui,Color,% \"0x\" Color,% \"0x\" Color\n        for a,b in {Color:\"Grey\",Background:\"#000000\"}\n            this[a]:=b\n        for a,b in Options\n            this[a]:=b\n        IconCode:=(II:=Icons[this.Icon]).Code\n        while(wb.ReadyState!=4)\n            Sleep,10\n        this.Doc:=wb.Document,Master:=this.CreateElement(\"Div\",,\"-MS-User-Select:None;Margin:0px;Width:100%\",\"Master\"),Root:=this.CreateElement(\"Div\",Master,\"\",\"Root\"),this.Doc.Body.SetAttribute(\"Style\",\"Background-Color:\" this.Background \";Margin:0px;Display:Flex\"),this.NormalCSS:=[],this.ButtonCSS:=[],Style:=this.Doc.Body.Style\n        for a,b in {ScrollBarBaseColor:this.Background,ScrollBarFaceColor:this.ThemeColor,ScrollBarArrowColor:this.ThemeColor,ScrollBarTrackColor:this.Background}\n            Style[a]:=b\n        Outer:=this.CreateElement(\"Div\",Root,,\"Outer\"),this.Outer:=Outer,Header:=this.CreateElement(\"Div\",Outer,\"Cursor:Move;Width:100%\",\"Header\")\n        for a,b in [[\"Title\",\"Div\",Header,\"Float:Left;Align-Items:Center;-MS-User-Select:None;text-overflow:ellipsis;overflow:hidden;white-space:nowrap;\",\"Window Title\"]\n                 ,[\"Settings\",\"Div\",Header,\"Position:Absolute;Float:Left;Cursor:Hand;Background-Color:Pink;Display:Flex;Justify-Content:Center;Align-Items:Center;Color:Black;-MS-User-Select:None\",\"S\"]\n                 ,[\"Close\",\"Div\",Header,\"Position:Absolute;Float:Left;Cursor:Hand;Background-Color:Red;Display:Flex;Justify-Content:Center;Align-Items:Center;Color:Black;-MS-User-Select:None\",\"X\"]]\n            New:=this.CreateElement(b.2,b.3,b.4),New.ID:=b.1,New.InnerText:=b.5,New.SetAttribute(\"Class\",\"Header\")\n        Icon:=this.CreateElement(\"Div\",Master,\"Display:Inline-Block;Padding-Left:4px;Padding-Right:4px;User-Select:Text;Float:Left;Justify-Content:Center;Align-Items:Center\",\"Icon\"),Icon.SetAttribute(\"Class\",\"Icon\"),this.Text:=this.CreateElement(\"Div\",Master,\"Display:Block;OverFlow:Auto;-MS-User-Select:Text;White-Space:NoWrap\",\"Text\")\n        if(II.Color!=\"\")\n            Icon.Style.Color:=II.Color\n        this.Text.SetAttribute(\"Class\",\"Text\")\n        Hotkey,IfWinActive,% this.ID\n        for a,b in {Esc:this.Escape.Bind(this),Space:(Enter:=this.Enter.Bind(this)),Enter:Enter\n                 ,Left:(Arrows:=this.Arrows.Bind(this)),Right:Arrows,Up:Arrows,Down:Arrows}\n            Hotkey,%a%,%b%,On\n        this.ButtonDiv:=this.CreateElement(\"Div\",Master,,\"Buttons\"),this.SetButtons(),this.CreateElement(\"Div\",Master,\"Visibility:Hidden;Position:Absolute;Width:Auto;Height:Auto\",\"GetSize\"),Script:=this.CreateElement(\"Script\",Root),Script.InnerText:=\"onclick=function(event){ahk_event('OnClick',event);\" \"};ondblclick=function(event){ahk_event('OnDoubleClick',event);\" \"};onmousedown=function(event){ahk_event('MouseDown',event);\" \"};\",Settings.ID:=\"Settings\",Close.ID:=\"Close\",Button.ID:=\"Testing\",this.Doc.ParentWindow.ahk_event:=this._Event.Bind(this)\n        if(this.Gradient)\n            this.SetBackground({0:this.ThemeColor,100:\"#000\"}),this.SetBackground({0:this.ThemeColor,100:\"#000\"},\"Icon\")\n        this.CSS.Button:=this.CreateElement(\"Style\",Root),this.CSS.Header:=this.CreateElement(\"Style\",Root),this.CSS.GetSize:=this.CreateElement(\"Style\",Root),this.CSS.Text:=this.CreateElement(\"Style\",Root),this.CSS.Icon:=this.CreateElement(\"Style\",Root),this.SetCSS({\"Header\":{Size:20,Background:this.ThemeColor},\"Button\":{Size:20},\"Icon\":{Size:120}}),this.SetIcon(this.Icon),this.SetCSS({Text:{Color:this.Color},Header:{Color:this.Color},Button:{Color:this.Color,Background:(this.Gradient?\"-ms-linear-gradient(Top,\" this.ThemeColor \" 0%,#383838 70%,#000000 100%)\":this.ThemeColor),Border:\"1px Solid \" this.Background}})\n        return this\n    }Arrows(){\n        local\n        Button:=this.GetActive().Value,ID:=this.OrderTab[Button],ID:=ID+(A_ThisHotkey~=\"i)\\b(Up|Left)\\b\"?-1:1),ID:=ID>this.TabOrder.MaxIndex()?1:ID<=0?this.TabOrder.MaxIndex():ID,this.TabOrder[ID].Obj.Focus()\n    }BuildCSS(Obj){\n        local\n        for a,b in {Size:\"Font-Size\"}\n            if(Value:=Obj[a])\n                Obj[b]:=Value \"px\",Obj.Delete(a)\n        Total:=\"{\"\n        for a,b in Obj\n            Total.=a \":\" b \";\"\n        return Total \"}\"\n    }BuildGradient(Color){\n        local\n        Start:=\"Top\"\n        for a,b in Color{\n            if(a=\"Start\")\n                Start:=b\n            else\n                Gradient.=b \" \" a \"%,\"\n        }return Color:=Gradient?\"-ms-linear-gradient(\" Start \",\" Trim(Gradient,\",\") \")\":Color\n    }ClearHotkeys(){\n        Hotkey,IfWinActive,% this.ID\n        for a,b in this.KeyResult\n            Hotkey,%a%,Off\n        this.KeyResult:=[]\n    }CreateElement(Type,Parent:=\"\",Style:=\"\",ID:=\"\"){\n        local\n        New:=this.Doc.CreateElement(Type),(Parent?Parent.AppendChild(New):this.Doc.Body.AppendChild(New))\n        if(Style)\n            New.SetAttribute(\"Style\",Style)\n        if(ID)\n            New.ID:=ID\n        return New\n    }Enter(){\n        this.GetActive().Click()\n    }Escape(){\n        Gui,% this.Win \":Destroy\"\n    }FixIE(Version=0){ ;Thanks GeekDude\n        local\n        static Versions:={7:7000,8:8888,9:9999,10:10001,11:11001}\n        Key:=\"Software\\Microsoft\\Internet Explorer\\MAIN\\FeatureControl\\FEATURE_BROWSER_EMULATION\",Version:=Versions[Version]?Versions[Version]:Version\n        if(A_IsCompiled)\n            ExeName:=A_ScriptName\n        else\n            SplitPath,A_AhkPath,ExeName\n        RegRead,PreviousValue,HKCU,%Key%,%ExeName%\n        if(!Version)\n            RegDelete,HKCU,%Key%,%ExeName%\n        else\n            RegWrite,REG_DWORD,HKCU,%Key%,%ExeName%,%Version%\n        return PreviousValue\n    }GetActive(){\n        return this.Doc.ActiveElement\n    }GetID(ID){\n        return this.Doc.GetElementById(ID)\n    }Monitor(Monitor:=\"\"){\n        local\n        SysGet,Count,MonitorCount\n        SysGet,Primary,MonitorPrimary\n        Obj:=[]\n        while(A_Index<=Count){\n            SysGet,Mon,MonitorWorkArea,%A_Index%\n            Obj[A_Index]:={Left:MonLeft,Top:MonTop,Right:MonRight,Bottom:MonBottom,W:MonRight-MonLeft,H:MonBottom-MonTop}\n        }return Obj.Count()=1?Obj.1:Obj[Monitor]?Obj[Monitor]:Obj[Primary]\n    }Result(){\n        local\n        this.ResultValue:=this.KeyResult[A_ThisHotkey]\n    }SetBackground(Color,ID:=\"Text\"){\n        local\n        this.SetCSS({(ID):{Background:this.BuildGradient(Color)}})\n    }SetButtons(ButtonsCSV:=\"OK\",Default:=\"Clipboard,ClipExit,E&xitApp,FileDump\"){\n        local\n        this.ClearHotkeys()\n        for a,b in this.ButtonsCSS\n            b.ParentNode.RemoveChild(b)\n        Buttons:=StrSplit(ButtonsCSV,\",\"),this.OrderTab:=[],this.TabOrder:=[],ID:=1,this.ButtonsCSS:=[]\n        while(aa:=this.Doc.GetElementsByTagName(\"Button\").Item[0])\n            aa.ParentNode.RemoveChild(aa)\n        for a,b in StrSplit(Default,\",\")\n            Buttons.Push(b)\n        if(FileExist(A_MyDocuments \"\\AutoHotkey\\Lib\\Studio.ahk\"))\n            Buttons.Push(\"Studio\")\n        this.Hotkeys:=[]\n        for a,Text in Buttons{\n            Button:=this.CreateElement(\"Button\",this.ButtonDiv)\n            Button.Value:=RegExReplace(Text,\"&\")\n            Button.ID:=\"Button\" ++ID\n            if(RegExMatch(Text,\"O)&(.)\",Found)){\n                if(this.Hotkeys[Found.1])\n                    Letter:=this.GetHotkey(Text)\n                else\n                    Letter:=Found.1\n            }else\n                Letter:=this.GetHotkey(Text)\n            if(Letter)\n                this.SetHotkey(Letter,Button.Value)\n            Button.InnerHTML:=RegExReplace(Button.Value,Letter,\"<u>\" Letter \"</u>\")\n            this.OrderTab[Button.Value]:=this.TabOrder.Push({ID:Button.Value,Obj:Button,ButtonID:ID}),Style:=Button.Style,Style.Cursor:=\"Hand\",Button.SetAttribute(\"Class\",\"Button\"),this.Buttons[Button.Value]:=Button,Button.SetAttribute(\"ButtonID\",ID)\n        }\n    }GetHotkey(Text){\n        for a,Letter in StrSplit(RegExReplace(Text,\"(\\W|\\s)\")){\n            if(!this.Hotkeys[Letter])\n                return Letter,this.Hotkeys[Letter]:=1\n        }\n    }SetButtonCSS(Object){\n        local\n        for Name,Obj in Object{\n            if(!Button:=this.ButtonCSS[Name])\n                Button:=this.ButtonCSS[Name]:=[]\n            for a,b in Obj\n                Button[a]:=(a=\"Background\"?this.BuildGradient(b):b)\n            if(!OO:=this.ButtonsCSS[Name])\n                OO:=this.ButtonsCSS[Name]:=this.CreateElement(\"Style\")\n            OO.InnerText:=\"#Button\" this.Buttons[Name].GetAttribute(\"ButtonID\") this.BuildCSS(Button)\n    }}SetCSS(Object){\n        local\n        for Type,Obj in Object{\n            if(!Normal:=this.NormalCSS[Type])\n                Normal:=this.NormalCSS[Type]:=[]\n            for a,b in Obj\n                Normal[a]:=b\n            this.CSS[Type].InnerText:=\".\" Type this.BuildCSS(Normal)\n            if(Type=\"Header\"&&(VV:=OO[\"Font-Size\"]))\n                if(RegExMatch(VV,\"O)(\\d+)\",Found))\n                    this.GetID(\"Close\").Style.Width:=Round(Found.1*1.5) \"px\",Found:=\"\"\n    }}SetHotkey(Key,Value){\n        local\n        Result:=this.BoundResult\n        Hotkey,%Key%,%Result%,On\n        this.KeyResult[Key]:=Value\n    }SetHTML(Text*){\n        local\n        for a,b in Text\n            (a=HTML&&b=1?(HTML:=1):(Msg.=(IsObject(b)?this.Obj2String(b):b)))\n        this.Text.InnerHTML:=RegExReplace(Msg,\"\\R\",\"<br>\")\n    }SetIcon(Icon){\n        local\n        static Icons:={\"!\":{Code:\"&#x26A0;\",Color:\"Yellow\"},X:{Code:\"&#x2297;\",Color:\"Red\"},\"?\":{Code:\"&#x2753;\",Color:\"Blue\"},I:{Code:\"&#x24D8;\",Color:\"Blue\"}},Img\n        IconObj:=this.GetID(\"Icon\")\n        if(!Icon)\n            IconObj.Style.Display:=\"None\"\n        else\n            IconObj.Style.Display:=\"Flex\"\n        if(InStr(Icon,\"http\")&&!Image)\n            (Img:=this.CreateElement(\"Img\",this.GetID(\"Icon\"))),Img.SRC:=this.Icon,Img.Style.MaxWidth:=200,Img.Style.MaxHeight:=200,IconObj.Style.Display:=\"Flex\"\n        else\n            IconObj.InnerHTML:=(II:=Icons[Icon])?II.Code:Icon\n        if(II.Color)\n            this.SetCSS({\"Icon\":{Color:II.Color}})\n    }SetText(Text*){\n        local\n        for a,b in Text\n            Msg.=(IsObject(b)?this.Obj2String(b):b)\n        this.GetID(\"Text\").InnerText:=Msg\n    }Show(Name:=\"\",Default:=1,Ico:=\"\"){\n        local\n        this.ResultValue:=\"\",this.Doc.GetElementsByTagName(\"Button\").Item[Default-1].Focus(),Text:=this.GetID(\"Text\"),Mon:=this.Monitor(),this.Name:=Name?Name:this.Name,(TT:=this.Doc.GetElementById(\"Title\")).InnerText:=this.Name\n        Gui,% this.Win \":Show\",w0 h0 Hide\n        Ico:=this.Doc.GetElementById(\"Icon\"),IcoWidth:=Ico.ScrollWidth,IcoHeight:=Ico.ScrollHeight,this.Doc.GetElementById(\"Header\").Style.Height:=TT.ScrollHeight,ButtonWidth:=0,Height:=[],Sub:=0\n        for a,b in [Close:=this.GetID(\"Close\"),Settings:=this.GetID(\"Settings\")]\n            Obj:=this.Doc.GetElementById(b),Sub+=Obj.ClientWidth\n        Title:=this.GetID(\"Title\"),this.SetCSS({\"Header\":{Height:Title.ScrollHeight}})\n        for a,b in this.TabOrder\n            Rect:=b.Obj.GetBoundingClientRect(),ButtonWidth+=Ceil(Rect.Right-Rect.Left),Height[Ceil(Rect.Height)]:=1\n        if(ButtonWidth>Mon.W)\n            return this.SetCSS({\"Button\":{Size:20}}),this.Show(Name)\n        MaxW:=W:=A_ScreenWidth-100,MaxH:=H:=A_ScreenHeight-100,HH:=Height.MaxIndex(),AddW:=Text.OffSetWidth-Text.ClientWidth,AddH:=Text.OffSetHeight-Text.ClientHeight\n        if((NH:=Text.ScrollHeight+Title.ScrollHeight+HH+AddH)<Mon.H)\n            H:=NH,AddW:=0\n        if((NH:=IcoHeight+Title.ScrollHeight+HH+AddH)>H)\n            H:=NH\n        if((NW:=Text.ScrollWidth+IcoWidth+AddW)<Mon.W)\n            W:=NW\n        if(W<ButtonWidth)\n            W:=ButtonWidth\n        Width:=Floor(Close.ScrollWidth/2),Close.Style.PaddingLeft:=Width,Close.Style.PaddingRight:=Width\n        if(W<Settings.ScrollWidth+Close.ScrollWidth)\n            return this.SetCSS({\"Header\":{Size:30,Height:\"\"}}),this.Show(Name)\n        Gui,% this.Win \":Show\",xCenter yCenter w%W% h%H%\n        ButtonWidth:=0\n        for a,b in this.TabOrder\n            Rect:=b.Obj.GetBoundingClientRect(),ButtonWidth+=Ceil(Rect.Right-Rect.Left),Height[Ceil(Rect.Height)]:=1\n        if(ButtonWidth>Mon.W)\n            return this.SetCSS({\"Button\":{Size:20}}),this.Show(Name)\n        if(W<ButtonWidth)\n            Gui,% this.Win \":Show\",xCenter yCenter w%ButtonWidth% h%H%\n        Gui,% this.Win \":+Owner\" this.Owner \" +MinSize\" ButtonWidth \"x\" TT.ScrollHeight+Height.MaxIndex()+10\n        while(!this.ResultValue)\n            Sleep,400\n        if(this.ResultValue=\"ClipExit\"){\n            Clipboard:=Trim(RegExReplace(this.Doc.GetElementById(\"Text\").InnerText,\"\\<\\/?br\\>\",\"`r`n\"),\"`r`n\")\n            ExitApp\n        }\n        if(this.ResultValue=\"FileDump\"){\n            x:=ComObjActive(\"{DBD5A90A-A85C-11E4-B0C7-43449580656B}\")\n            Text:=Trim(RegExReplace(this.Doc.GetElementById(\"Text\").InnerText,\"\\<\\/?br\\>\",\"`r`n\"),\"`r`n\")\n            x.TempFile(Text)\n            ExitApp\n        }\n        this.ResultValue:=this.ResultValue=Chr(127)?\"\":this.ResultValue\n        if(this.ResultValue=\"Clipboard\"){\n            Clipboard:=Trim(RegExReplace(this.Doc.GetElementById(\"Text\").InnerText,\"\\<\\/?br\\>\",\"`r`n\"),\"`r`n\")\n            Gui,% this.Win \":Destroy\"\n            return \"Clipboard\"\n        }else if(this.ResultValue=\"ExitApp\")\n            ExitApp\n        else if(this.ResultValue=\"Studio\"){\n            if(x:=ComObjActive(\"{DBD5A90A-A85C-11E4-B0C7-43449580656B}\"))\n                x.DebugWindow(Trim(RegExReplace(this.Doc.GetElementById(\"Text\").InnerText,\"\\<\\/?br\\>\",\"`r`n\"),\"`r`n\"))\n            ExitApp\n        }Gui,% this.Win \":Hide\"\n        return this.ResultValue\n    }Size(a:=\"\",W:=\"\",H:=\"\"){\n        local Settings,Close,Height,Title\n        static Pos:=[]\n        this:=IsObject(this)?this:MsgBox.Keep[this]\n        WinGet,Style,Style,% this.ID\n        if(!W||!H)\n            W:=Pos.W,H:=Pos.H\n        Pos:={W:W,H:H},Close:=this.GetID(\"Close\"),Settings:=this.GetID(\"Settings\"),Border:=Style&0x40000!=0?this.Border:0\n        ControlMove,,%Border%,%Border%,%W%,%H%,% \"ahk_id\" this.HWND\n        Close.Style.Right:=\"0\"\n        Settings.Style.Right:=Close.ClientWidth\n        Pos1:=Close.GetBoundingClientRect()\n        this.Doc.GetElementById(\"Title\").Style.Width:=W-(Close.ScrollWidth+Settings.ScrollWidth)\n        Height:=this.Doc.GetElementsByTagName(\"Button\").Item[0].OffSetHeight\n        Title:=this.GetID(\"Title\").ScrollHeight\n        this.Doc.GetElementById(\"Icon\").Style.Height:=H-Height-Title\n        this.Doc.GetElementById(\"Text\").Style.Height:=H-Height-Title\n    }\n}\n\nDistances(lat1,lon1,lat2,lon2){\n    Dist:={} ;Create object for storage\n    static p:=0.017453292519943295 ;1 degree in radian\n    Dist.Kilometers:=12742*ASin(Sqrt(0.5-Cos((lat2-lat1)*p)/2+Cos(lat1*p)*Cos(lat2*p)*(1-Cos((lon2-lon1)*p))/2)) ;Formula borrowed from Internet search\n    Dist.Meters:=Dist.Kilometers*1000 ;meters\n    Dist.Miles:=Dist.Kilometers/1.609344 ;miles\n    Dist.Feet:=Dist.Kilometers/0.0003048 ;feet\n    Dist.Yards:=Dist.Feet/3\n    return Dist\n}\n\n\nfront(filename,dir){\n;StringSplit, OutputArray, InputVar , Delimiters, OmitChars\n\n    InputBox, name, \"name,path\"\n random, ranVar, 1, 100000000\n msgbox % ranvar\n ranvar := StrSplit(ranvar, \",\", %a_space% \" `t\")\n\nTestString := \"This is a test.\"\nStringSplit, word_array, TestString, %A_Space%, .  ; Omits periods.\nMsgBox, The 4th word is %word_array4%.\n\ncolors := \"red,green,blue\"\nfor index, color in StrSplit(colors, \",\")\n    MsgBox % \"Color number \" index \" is \" color\n\n    return global frontfile, frontproject\n}\n\ngetCode(Order) { ; to fill in the second parameter of Template\n    return repeat(1, Order) \",\" repeat(2, Order) \",\" repeat(3, Order)\n     . \",\" repeat(4, Order) \",\" repeat(5, Order) \",\" repeat(6, Order)\n}\n\nrepeat(str, n) { ; return str repeated n*n times\n    Result := \"\"\n    Loop, % n * n\n        Result .= str\n    return Result\n}\n\nfun(){\n    global myfun\n    myfun:=new fun()\n}\n\nclass fun{\n    __new(){\n        return this\n    }\n    fun(){\n        \n    }\n}\n\nStrAppendEachLine(str, appendix){\n \n    return, RegExReplace(str, \"m`n)^(.+?)(?<!\" appendix \")$\", \"$1\" appendix)\n}\nfileAppendEachLine(filename, appendix){\n    hmm := FileOpen(filename, \"r`n\").read()\n    FileOpen(filename, \"w`n\").write(RegExReplace(hmm, \"m`n)^(.+?)(?<!\" appendix \")$\", \"$1\" appendix))\n    return\n}\n\nz_stringreplace(string, find, rep ){\n    MsgBox, % \"0: `n \" find rep\n   ; StringReplace, r, s, - , ||| , All\n    StringReplace, r, s, %find% , %rep% , All\nreturn r\n}\n\n\n\n\nremovespace(ans){\n\n;ReplacedStr := StrReplace(Haystack, Needle , ReplaceText, OutputVarCount, Limit)\n;Fronttext := clipboard\nNewStr := StrReplace(ans, A_Space, \"_\")\n;ReplacedStr := StrReplace(Haystack, Needle , ReplaceText, OutputVarCount, Limit)\nclipboard := newstr\nreturn newStr \n}\n\nTrayIcon_GetInfo(sExeName := \"\"){\n    DetectHiddenWindows, % (Setting_A_DetectHiddenWindows := A_DetectHiddenWindows) ? \"On\" :\n    oTrayIcon_GetInfo := {}\n    For key, sTray in [\"Shell_TrayWnd\", \"NotifyIconOverflowWindow\"]\n    {\n        idxTB := TrayIcon_GetTrayBar(sTray)\n        WinGet, pidTaskbar, PID, ahk_class %sTray%\n        \n        hProc := DllCall(\"OpenProcess\", UInt, 0x38, Int, 0, UInt, pidTaskbar)\n        pRB   := DllCall(\"VirtualAllocEx\", Ptr, hProc, Ptr, 0, UPtr, 20, UInt, 0x1000, UInt, 0x4)\n\n        SendMessage, 0x418, 0, 0, ToolbarWindow32%idxTB%, ahk_class %sTray%   ; TB_BUTTONCOUNT\n        \n        szBtn := VarSetCapacity(btn, (A_Is64bitOS ? 32 : 20), 0)\n        szNfo := VarSetCapacity(nfo, (A_Is64bitOS ? 32 : 24), 0)\n        szTip := VarSetCapacity(tip, 128 * 2, 0)\n        \n        Loop, %ErrorLevel%\n        {\n            SendMessage, 0x417, A_Index - 1, pRB, ToolbarWindow32%idxTB%, ahk_class %sTray%   ; TB_GETBUTTON\n            DllCall(\"ReadProcessMemory\", Ptr, hProc, Ptr, pRB, Ptr, &btn, UPtr, szBtn, UPtr, 0)\n\n            iBitmap := NumGet(btn, 0, \"Int\")\n            IDcmd   := NumGet(btn, 4, \"Int\")\n            statyle := NumGet(btn, 8)\n            dwData  := NumGet(btn, (A_Is64bitOS ? 16 : 12))\n            iString := NumGet(btn, (A_Is64bitOS ? 24 : 16), \"Ptr\")\n\n            DllCall(\"ReadProcessMemory\", Ptr, hProc, Ptr, dwData, Ptr, &nfo, UPtr, szNfo, UPtr, 0)\n\n            hWnd  := NumGet(nfo, 0, \"Ptr\")\n            uID   := NumGet(nfo, (A_Is64bitOS ? 8 : 4), \"UInt\")\n            msgID := NumGet(nfo, (A_Is64bitOS ? 12 : 8))\n            hIcon := NumGet(nfo, (A_Is64bitOS ? 24 : 20), \"Ptr\")\n\n            WinGet, pID, PID, ahk_id %hWnd%\n            WinGet, sProcess, ProcessName, ahk_id %hWnd%\n            WinGetClass, sClass, ahk_id %hWnd%\n\n            If !sExeName || (sExeName = sProcess) || (sExeName = pID)\n            {\n                DllCall(\"ReadProcessMemory\", Ptr, hProc, Ptr, iString, Ptr, &tip, UPtr, szTip, UPtr, 0)\n                Index := (oTrayIcon_GetInfo.MaxIndex()>0 ? oTrayIcon_GetInfo.MaxIndex()+1 : 1)\n                oTrayIcon_GetInfo[Index,\"idx\"]     := A_Index - 1\n                oTrayIcon_GetInfo[Index,\"IDcmd\"]   := IDcmd\n                oTrayIcon_GetInfo[Index,\"pID\"]     := pID\n                oTrayIcon_GetInfo[Index,\"uID\"]     := uID\n                oTrayIcon_GetInfo[Index,\"msgID\"]   := msgID\n                oTrayIcon_GetInfo[Index,\"hIcon\"]   := hIcon\n                oTrayIcon_GetInfo[Index,\"hWnd\"]    := hWnd\n                oTrayIcon_GetInfo[Index,\"Class\"]   := sClass\n                oTrayIcon_GetInfo[Index,\"Process\"] := sProcess\n                oTrayIcon_GetInfo[Index,\"Tooltip\"] := StrGet(&tip, \"UTF-16\")\n                oTrayIcon_GetInfo[Index,\"Tray\"]    := sTray\n            }\n        }\n        DllCall(\"VirtualFreeEx\", Ptr, hProc, Ptr, pRB, UPtr, 0, Uint, 0x8000)\n        DllCall(\"CloseHandle\", Ptr, hProc)\n    }\n    DetectHiddenWindows, %Setting_A_DetectHiddenWindows%\n    Return oTrayIcon_GetInfo\n}\n\n; ----------------------------------------------------------------------------------------------------------------------\n; Function .....: TrayIcon_Hide\n; Description ..: Hide or unhide a tray icon.\n; Parameters ...: IDcmd - Command identifier associated with the button.\n; ..............: bHide - True for hide, False for unhide.\n; ..............: sTray - 1 or Shell_TrayWnd || 0 or NotifyIconOverflowWindow.\n; Info .........: TB_HIDEBUTTON message - http://goo.gl/oelsAa\n; ----------------------------------------------------------------------------------------------------------------------\nTrayIcon_Hide(IDcmd, sTray := \"Shell_TrayWnd\", bHide:=True){\n    (sTray == 0 ? sTray := \"NotifyIconOverflowWindow\" : sTray == 1 ? sTray := \"Shell_TrayWnd\" : )\n    DetectHiddenWindows, % (Setting_A_DetectHiddenWindows := A_DetectHiddenWindows) ? \"On\" :\n    idxTB := TrayIcon_GetTrayBar()\n    SendMessage, 0x404, IDcmd, bHide, ToolbarWindow32%idxTB%, ahk_class %sTray% ; TB_HIDEBUTTON\n    SendMessage, 0x1A, 0, 0, , ahk_class %sTray%\n    DetectHiddenWindows, %Setting_A_DetectHiddenWindows%\n}\n\n; ----------------------------------------------------------------------------------------------------------------------\n; Function .....: TrayIcon_Delete\n; Description ..: Delete a tray icon.\n; Parameters ...: idx - 0 based tray icon index.\n; ..............: sTray - 1 or Shell_TrayWnd || 0 or NotifyIconOverflowWindow.\n; Info .........: TB_DELETEBUTTON message - http://goo.gl/L0pY4R\n; ----------------------------------------------------------------------------------------------------------------------\nTrayIcon_Delete(idx, sTray := \"Shell_TrayWnd\"){\n    (sTray == 0 ? sTray := \"NotifyIconOverflowWindow\" : sTray == 1 ? sTray := \"Shell_TrayWnd\" : )\n    DetectHiddenWindows, % (Setting_A_DetectHiddenWindows := A_DetectHiddenWindows) ? \"On\" :\n    idxTB := TrayIcon_GetTrayBar()\n    SendMessage, 0x416, idx, 0, ToolbarWindow32%idxTB%, ahk_class %sTray% ; TB_DELETEBUTTON\n    SendMessage, 0x1A, 0, 0, , ahk_class %sTray%\n    DetectHiddenWindows, %Setting_A_DetectHiddenWindows%\n}\n\n; ----------------------------------------------------------------------------------------------------------------------\n; Function .....: TrayIcon_Remove\n; Description ..: Remove a tray icon.\n; Parameters ...: hWnd, uID.\n; ----------------------------------------------------------------------------------------------------------------------\nTrayIcon_Remove(hWnd, uID){\n        NumPut(VarSetCapacity(NID,(A_IsUnicode ? 2 : 1) * 384 + A_PtrSize * 5 + 40,0), NID)\n        NumPut(hWnd , NID, (A_PtrSize == 4 ? 4 : 8 ))\n        NumPut(uID  , NID, (A_PtrSize == 4 ? 8  : 16 ))\n        Return DllCall(\"shell32\\Shell_NotifyIcon\", \"Uint\", 0x2, \"Uint\", &NID)\n}\n\n; ----------------------------------------------------------------------------------------------------------------------\n; Function .....: TrayIcon_Move\n; Description ..: Move a tray icon.\n; Parameters ...: idxOld - 0 based index of the tray icon to move.\n; ..............: idxNew - 0 based index where to move the tray icon.\n; ..............: sTray - 1 or Shell_TrayWnd || 0 or NotifyIconOverflowWindow.\n; Info .........: TB_MOVEBUTTON message - http://goo.gl/1F6wPw\n; ----------------------------------------------------------------------------------------------------------------------\nTrayIcon_Move(idxOld, idxNew, sTray := \"Shell_TrayWnd\"){\n    (sTray == 0 ? sTray := \"NotifyIconOverflowWindow\" : sTray == 1 ? sTray := \"Shell_TrayWnd\" : )\n    DetectHiddenWindows, % (Setting_A_DetectHiddenWindows := A_DetectHiddenWindows) ? \"On\" :\n    idxTB := TrayIcon_GetTrayBar()\n    SendMessage, 0x452, idxOld, idxNew, ToolbarWindow32%idxTB%, ahk_class %sTray% ; TB_MOVEBUTTON\n    DetectHiddenWindows, %Setting_A_DetectHiddenWindows%\n}\n\n; ----------------------------------------------------------------------------------------------------------------------\n; Function .....: TrayIcon_Set\n; Description ..: Modify icon with the given index for the given window.\n; Parameters ...: hWnd       - Window handle.\n; ..............: uId        - Application defined identifier for the icon.\n; ..............: hIcon      - Handle to the tray icon.\n; ..............: hIconSmall - Handle to the small icon, for window menubar. Optional.\n; ..............: hIconBig   - Handle to the big icon, for taskbar. Optional.\n; Return .......: True on success, false on failure.\n; Info .........: NOTIFYICONDATA structure  - https://goo.gl/1Xuw5r\n; ..............: Shell_NotifyIcon function - https://goo.gl/tTSSBM\n; ----------------------------------------------------------------------------------------------------------------------\nTrayIcon_Set(hWnd, uId, hIcon, hIconSmall:=0, hIconBig:=0){\n    d := A_DetectHiddenWindows\n    DetectHiddenWindows, On\n    ; WM_SETICON = 0x0080\n    If ( hIconSmall ) \n        SendMessage, 0x0080, 0, hIconSmall,, ahk_id %hWnd%\n    If ( hIconBig )\n        SendMessage, 0x0080, 1, hIconBig,, ahk_id %hWnd%\n    DetectHiddenWindows, %d%\n\n    VarSetCapacity(NID, szNID := ((A_IsUnicode ? 2 : 1) * 384 + A_PtrSize*5 + 40),0)\n    NumPut( szNID, NID, 0                           )\n    NumPut( hWnd,  NID, (A_PtrSize == 4) ? 4   : 8  )\n    NumPut( uId,   NID, (A_PtrSize == 4) ? 8   : 16 )\n    NumPut( 2,     NID, (A_PtrSize == 4) ? 12  : 20 )\n    NumPut( hIcon, NID, (A_PtrSize == 4) ? 20  : 32 )\n    \n    ; NIM_MODIFY := 0x1\n    Return DllCall(\"Shell32.dll\\Shell_NotifyIcon\", UInt,0x1, Ptr,&NID)\n}\n\n; ----------------------------------------------------------------------------------------------------------------------\n; Function .....: TrayIcon_GetTrayBar\n; Description ..: Get the tray icon handle.\n; ----------------------------------------------------------------------------------------------------------------------\nTrayIcon_GetTrayBar(Tray:=\"Shell_TrayWnd\"){\n    DetectHiddenWindows, % (Setting_A_DetectHiddenWindows := A_DetectHiddenWindows) ? \"On\" :\n    WinGet, ControlList, ControlList, ahk_class %Tray%\n    RegExMatch(ControlList, \"(?<=ToolbarWindow32)\\d+(?!.*ToolbarWindow32)\", nTB)\n    Loop, %nTB%\n    {\n        ControlGet, hWnd, hWnd,, ToolbarWindow32%A_Index%, ahk_class %Tray%\n        hParent := DllCall( \"GetParent\", Ptr, hWnd )\n        WinGetClass, sClass, ahk_id %hParent%\n        If !(sClass = \"SysPager\" or sClass = \"NotifyIconOverflowWindow\" )\n            Continue\n        idxTB := A_Index\n        Break\n    }\n    DetectHiddenWindows, %Setting_A_DetectHiddenWindows%\n    Return  idxTB\n}\n\n; ----------------------------------------------------------------------------------------------------------------------\n; Function .....: TrayIcon_GetHotItem\n; Description ..: Get the index of tray's hot item.\n; Info .........: TB_GETHOTITEM message - http://goo.gl/g70qO2\n; ----------------------------------------------------------------------------------------------------------------------\nTrayIcon_GetHotItem(){\n    idxTB := TrayIcon_GetTrayBar()\n    SendMessage, 0x447, 0, 0, ToolbarWindow32%idxTB%, ahk_class Shell_TrayWnd ; TB_GETHOTITEM\n    Return ErrorLevel << 32 >> 32\n}\n\n; ----------------------------------------------------------------------------------------------------------------------\n; Function .....: TrayIcon_Button\n; Description ..: Simulate mouse button click on a tray icon.\n; Parameters ...: sExeName - Executable Process Name of tray icon.\n; ..............: sButton  - Mouse button to simulate (L, M, R).\n; ..............: bDouble  - True to double click, false to single click.\n; ..............: index    - Index of tray icon to click if more than one match.\n; ----------------------------------------------------------------------------------------------------------------------\n\nTrayIcon_Button(sExeName, sButton := \"L\", bDouble := false, index := 1){\n    DetectHiddenWindows, % (Setting_A_DetectHiddenWindows := A_DetectHiddenWindows) ? \"On\" :\n    WM_MOUSEMOVE      = 0x0200\n    WM_LBUTTONDOWN    = 0x0201\n    WM_LBUTTONUP      = 0x0202\n    WM_LBUTTONDBLCLK = 0x0203\n    WM_RBUTTONDOWN    = 0x0204\n    WM_RBUTTONUP      = 0x0205\n    WM_RBUTTONDBLCLK = 0x0206\n    WM_MBUTTONDOWN    = 0x0207\n    WM_MBUTTONUP      = 0x0208\n    WM_MBUTTONDBLCLK = 0x0209\n    sButton := \"WM_\" sButton \"BUTTON\"\n    oIcons := {}\n    oIcons := TrayIcon_GetInfo(sExeName)\n    msgID  := oIcons[index].msgID\n    uID    := oIcons[index].uID\n    hWnd   := oIcons[index].hWnd\n    if bDouble\n        PostMessage, msgID, uID, %sButton%DBLCLK, , ahk_id %hWnd%\n    else\n        PostMessage, msgID, uID, %sButton%DOWN, , ahk_id %hWnd%\n        PostMessage, msgID, uID, %sButton%UP, , ahk_id %hWnd%\n    \n    DetectHiddenWindows, %Setting_A_DetectHiddenWindows%\n    return\n}\n\n;==============================[]=================================[]\n\nlv(folder) {\n    Gui, Add, ListView, background000000 cFFFFFF -Hdr r20 w200 h200 gMyListView2 AltSubmit, Name\n        Loop, Files, % folder \"\\*\", D\n        {\n            LV_Add(\"\", A_LoopFileName, A_LoopFileSizeKB)\n            LV_ModifyCol()  ; Auto-size each column to fit its contents.\n            LV_ModifyCol(2, \"Integer\")  ; For sorting purposes, indicate that column 2 is an integer.\n            FolderList .= A_LoopFileName . \"`n\"\n        }\n    Gui, Show\n    return \n\nGuiContextMenu2:  ; Launched in response to a right-click or press of the Apps key.\nif (A_GuiControl != \"MyListView2\")  ; This check is optional. It displays the menu only for clicks inside the ListView.\n    return\n; Show the menu at the provided coordinates, A_GuiX and A_GuiY. These should be used\n; because they provide correct coordinates even if the user pressed the Apps key:\nMenu, MyContextMenu, Show, %A_GuiX%, %A_GuiY%\nreturn\n\nMyListView2:\nif (A_GuiEvent = \"DoubleClick\")  ; There are many other possible values the script can check.\n{\n    LV_GetText(FileName, A_EventInfo, 1) ; Get the text of the first field.\n    LV_GetText(FileDir, A_EventInfo, 2)  ; Get the text of the second field.\n    \n    Run %Dir%\\%FileName%,, UseErrorLevel\n    ;Run %FileDir%\\%FileName%,, UseErrorLevel\n    if ErrorLevel\n        MsgBox Could not open \"%FileDir%\\%FileName%\".\n}\nreturn\n\n\n}\n\n\n;==============================[]=================================[]\n\nsendword(){\n\nsend := clipboard . \"`n\"\nsend := send . \"`n\"\nclipboard := send\noWord := ComObjActive(\"Word.Application\")\noWord.Selection.PasteAndFormat(0)  ; Original Formatting\nsend := \"\"\nclipboard := \"\"\n\n/*\nWinGet, firsthwnd, id, A\n sub := WinActive(\"A\")\n\nWinActivate, ahk_exe WINWORD.EXE\nWinWaitActive, ahk_exe WINWORD.EXE\n;send, #5\nsleep, 100\nsend, ^end\nsend, {enter}\nsend, ^v \nsleep,100\n;send, %clipboard%\nsend, {enter}\nsleep, 5000\nWinMinimize, A\n\nWinWaitNotActive, ahk_exe WINWORD.EXE\nWinActivate, ahk_id %firsthwnd%\nWinActivate, ahk_id %sub%\n*/\n  }\nreturn\n;----Open the selected favorite\n",
			"file": "/p/app/app/((start)-class&fn.ahk",
			"file_size": 66419,
			"file_write_time": 133165398791280291,
			"settings":
			{
				"buffer_size": 64582,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					5,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAOw",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAABAAAAAAAAAAEAAAAAAAAAAAAAAAAA8L8"
				],
				[
					8,
					1,
					"left_delete",
					null,
					"AQAAADEAAAAAAAAAMQAAAAAAAAABAAAAMg",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAyAAAAAAAAADIAAAAAAAAAAAAAAAAA8L8"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAAkAAAAAAAAACgAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "d:/"
					},
					"AwAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAJAAAAAAAAAAkAAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "lib"
					},
					"AwAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "/gdip_"
					},
					"BgAAAA8AAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAARAAAAAAAAAAAAAAARAAAAAAAAABIAAAAAAAAAAAAAABIAAAAAAAAAEwAAAAAAAAAAAAAAEwAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABUAAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAPAAAAAAAAAA8AAAAAAAAAAAAAAAAA8L8"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "all.ahk"
					},
					"BwAAABUAAAAAAAAAFgAAAAAAAAAAAAAAFgAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABgAAAAAAAAAAAAAABgAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABsAAAAAAAAAAAAAABsAAAAAAAAAHAAAAAAAAAAAAAAA",
					"CAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAVAAAAAAAAABUAAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "/D/github/GlobalCoder/GlobalCoder/singles/inc/Project.ahk",
			"settings":
			{
				"buffer_size": 5865,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/github/GlobalCoder/GlobalCoder/.git/config",
			"settings":
			{
				"buffer_size": 349,
				"line_ending": "Unix"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": ";\n; AutoHotkey Version: 1.x\n; Language:       English\n; Platform:       Win9x/NT\n; Author:         Jack Dunning, ceeditor@computoredge.com\n;\n; Script Function: Barebones To-Do List App\n; This is the color version of ToDoList.ahk from the AutoHotkey column dated April 31, 2014 \n;\n; exit\n#NoTrayIcon\nScrollLock & esc::\nf24 & esc::\n;/\nExitApp\n;//\n#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.\n#persistent\nSendMode Input  ; Recommended for new scripts due to its superior speed and reliability.\nSetWorkingDir %A_ScriptDir%  ; Ensures a consistent starting directory.\n\n#SingleInstance force\nOnExit, UpdateFile\n\nGui, default\nGui +AlwaysOnTop +Resize\nGui, Add, ListView, sort r10 checked -readonly vMyListView gMyListView AltSubmit, Items To Do \nGui, Add, Button, section gAddItem,Add to list\nGui, Add, Edit, ys r20 vNewItem w180 , <Enter New Item Here>\n\n;LV_ModifyCol(2, 0)\n\nSelectedRow := 0\n\nIfExist, ToDoList.txt\n{\nLoop, Read, ToDoList.txt\n  {\n  If (A_index = 1 and SubStr(A_LoopReadLine, 1, 1) = \"x\")\n     {\n       WinPos := A_LoopReadLine\n       If Substr(WinPos, 2, 1) = \"-\"\n         WinPos := \"x600 y200 w360 h220\"\n\n       Continue\n     }\n  If SubStr(A_LoopReadLine, 1, 1) = \"*\"\n    {\n     StringTrimLeft, CheckedText, A_LoopReadLine, 1\n     LV_Add(\"Check\", CheckedText,A_Index-1)\n    }\n  Else\n     LV_Add(\"\", A_LoopReadLine,A_Index-1)\n  }\n\n}\n\n\n\nLV_ModifyCol(1,\"AutoHdr\")\n\nMenu, MyContextMenu, Add, Edit, EditItem\nMenu, MyContextMenu, Add, Delete, DeleteItem\nMenu, Tray, Add, Show To Do List, ShowTodo\n\n\nIfExist, ToDoList.txt\n  {\n     Gui, Show, %WinPos% , To Do List\n  }\nElse\n  {\n     WinGetPos,X1,Y1,W1,H1,Program Manager\n     X2 := W1-300\n     Gui, Show, x%x2% y50 , To Do List\n  }\n\nLV_ColorInitiate() ; (Gui_Number, Control) - defaults to: (1, SysListView321)\nSetColor()\n\n \nHotkey, ^!t, ShowTodo\nReturn\n\n\n\n\n\nShowTodo:\ntoggle := !toggle\nif (toggle)\n{\n\n  Gui, Show,, To Do List\n  LV_ColorInitiate()\n  SetColor()\n}\nelse \nWinMinimize, To Do List \n;gui, show,,hide\n\nReturn\n\nMyListView:\n;  GUI, +LastFound\n  HighlightRow := A_EventInfo\n  If A_GuiEvent = e\n    UpdateFile()\n  If (A_GuiEvent = \"I\") and (InStr(ErrorLevel, \"C\", true))\n        LV_ColorChange(HighlightRow, \"0x660000\", \"0xCC99FF\") \n  If (A_GuiEvent = \"I\") and (InStr(ErrorLevel, \"c\", true))\n        LV_ColorChange(HighlightRow, \"0x000000\", \"0xFFFFFF\") \n;  MsgBox, %A_GuiEvent% %ErrorLevel%\nReturn\n\nGuiContextMenu:  ; Launched in response to a right-click or press of the Apps key.\nif A_GuiControl <> MyListView  ; Display the menu only for clicks inside the ListView.\n    return\n\n  LV_GetText(EditText, A_EventInfo) \n; Show the menu at the provided coordinates, A_GuiX and A_GuiY.  These should be used\n; because they provide correct coordinates even if the user pressed the Apps key:\nMenu, MyContextMenu, Show , %A_GuiX%, %A_GuiY%\nreturn\n\n\nDeleteItem:  ; The user selected \"Clear\" in the context menu.\nRowNumber = 0  ; This causes the first iteration to start the search at the top.\n\nLoop\n{\n    ; Since deleting a row reduces the RowNumber of all other rows beneath it,\n    ; subtract 1 so that the search includes the same row number that was previously\n    ; found (in case adjacent rows are selected):\n    RowNumber := LV_GetNext(RowNumber - 1)\n    if not RowNumber  ; The above returned zero, so there are no more selected rows.\n        break\n    LV_Delete(RowNumber)  ; Clear the row from the ListView.\n}\nUpdateFile()\nSetColor()\n\nreturn\n\nAddItem:\n  Gui, Submit, NoHide\n\nIf SelectedRow = 0\n{\n  LV_Add(\"\", trim(NewItem))\n}\nelse\n{\n  LV_Modify(SelectedRow,\"\",Trim(NewItem))\n  SelectedRow := 0\n  GuiControl, ,Button1, Add to list\n}\n  UpdateFile()\n  LV_ModifyCol(1,\"AutoHdr\")\n\n  SetColor()\n\nReturn\n\nEditItem:\n  SelectedRow := LV_GetNext()\n  GuiControl, ,Edit1, %EditText%\n  GuiControl, ,Button1, Update\nReturn\n\nUpdateFile:\n  DetectHiddenWindows On\n  UpdateFile()\n  ExitApp\nReturn\n\nGuiSize:  ; Expand or shrink the ListView in response to the user's resizing of the window.\nif A_EventInfo = 1  ; The window has been minimized.  No action needed.\n    return\n; Otherwise, the window has been resized or maximized. Resize the ListView to match.\nGuiControl, Move, MyListView, % \"W\" . (A_GuiWidth - 20) . \" H\" . (A_GuiHeight - 40)\nGuiControl, Move, Button1, % \"y\" . (A_GuiHeight - 30) \nGuiControl, Move, Edit1, % \"y\" . (A_GuiHeight - 30) . \"W\" . (A_GuiWidth - 90)\n\n\nReturn\n\nUpdateFile()\n  {\n    FileDelete, ToDoList.txt\n    WinGetPos, X, Y, Width, Height, To Do List\n    Width -= 16\n    Height -= 38\n    FileAppend, x%x% y%y% w%Width% h%Height% `n, ToDoList.txt\n    Loop % LV_GetCount()\n     {\n       Gui +LastFound\n       SendMessage, 4140, A_Index - 1, 0xF000, SysListView321 \n       IsChecked := (ErrorLevel >> 12) - 1\n       If IsChecked\n        {\n          LV_GetText(Text, A_Index)\n          FileAppend, *%Text% `n, ToDoList.txt\n        }\n         else\n        {\n          LV_GetText(Text, A_Index)\n          FileAppend, %Text% `n, ToDoList.txt\n        }\n      }\n   }\n\nSetColor() {\n  Loop, % LV_GetCount()\n  {\n       SendMessage, 4140, A_Index - 1, 0xF000, SysListView321 \n       IsChecked := (ErrorLevel >> 12) - 1\n       If IsChecked\n         LV_ColorChange(A_Index, \"0x660000\", \"0xCC99FF\")\n       Else\n         LV_ColorChange(A_Index, \"0x000000\", \"0xFFFFFF\") \n \n  }\n}\n\n; These are the functions that change the row colors. \n; I only changed WM_NOTIFY( p_w, p_l, p_m ) for this app\n\nLV_ColorInitiate(Gui_Number=1, Control=\"\") ; initiate listview color change procedure \n{ \n  global hw_LV_ColorChange \n  If Control =\n    Control =SysListView321\n  Gui, %Gui_Number%:+Lastfound \n  Gui_ID := WinExist() \n  ControlGet, hw_LV_ColorChange, HWND,, %Control%, ahk_id %Gui_ID% \n  OnMessage( 0x4E, \"WM_NOTIFY\" ) \n} \n\nLV_ColorChange(Index=\"\", TextColor=\"\", BackColor=\"\") ; change specific line's color or reset all lines\n{ \n  global\n  If Index = \n    Loop, % LV_GetCount() \n      LV_ColorChange(A_Index) \n  Else\n    { \n    Line_Color_%Index%_Text := TextColor \n    Line_Color_%Index%_Back := BackColor \n   WinSet, Redraw,, ahk_id %hw_LV_ColorChange% \n    } \n}\n\n\n\nWM_NOTIFY( p_w, p_l, p_m )\n{ \n  local  draw_stage, Current_Line, Index\n  if ( DecodeInteger( \"uint4\", p_l, 0 ) = hw_LV_ColorChange ) { \n      if ( DecodeInteger( \"int4\", p_l, 8 ) = -12 ) {                            ; NM_CUSTOMDRAW \n          draw_stage := DecodeInteger( \"uint4\", p_l, 12 ) \n          if ( draw_stage = 1 )                                                 ; CDDS_PREPAINT \n              return, 0x20                                                      ; CDRF_NOTIFYITEMDRAW \n          else if ( draw_stage = 0x10000|1 ){                                   ; CDDS_ITEM \n              Current_Line := DecodeInteger( \"uint4\", p_l, 36 )+1 \n;              LV_GetText(Index, Current_Line, 2) \n              If (Line_Color_%Current_Line%_Text != \"\"){ \n                  EncodeInteger( Line_Color_%Current_Line%_Text, 4, p_l, 48 )   ; foreground \n                  EncodeInteger( Line_Color_%Current_Line%_Back, 4, p_l, 52 )   ; background \n                } \n            } \n        } \n    } \n} \n\nDecodeInteger( p_type, p_address, p_offset, p_hex=true )\n{ \n  old_FormatInteger := A_FormatInteger \n  ifEqual, p_hex, 1, SetFormat, Integer, hex \n  else, SetFormat, Integer, dec \n  StringRight, size, p_type, 1 \n  loop, %size% \n      value += *( ( p_address+p_offset )+( A_Index-1 ) ) << ( 8*( A_Index-1 ) ) \n  if ( size <= 4 and InStr( p_type, \"u\" ) != 1 and *( p_address+p_offset+( size-1 ) ) & 0x80 ) \n      value := -( ( ~value+1 ) & ( ( 2**( 8*size ) )-1 ) ) \n  SetFormat, Integer, %old_FormatInteger% \n  return, value \n} \n\nEncodeInteger( p_value, p_size, p_address, p_offset )\n{ \n  loop, %p_size% \n    DllCall( \"RtlFillMemory\", \"uint\", p_address+p_offset+A_Index-1, \"uint\", 1, \"uchar\", p_value >> ( 8*( A_Index-1 ) ) ) \n} \n\n\n#IfWinActive, To Do List\n^a::LV_Modify(0,\"Select\")\n^!w:: exitapp\nesc::exitapp\n^#::reload\nreturn\n#IfWinActive",
			"file": "/D/github/GlobalCoder/GlobalCoder/singles/single_files/1_ToDoList.ahk",
			"file_size": 8202,
			"file_write_time": 133159163099054116,
			"settings":
			{
				"buffer_size": 7900,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/User/AHK_V2.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					""
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Default"
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Run"
				]
			],
			[
				"Packages/AutoHotkey/AutoHotkey.sublime-build",
				"Default"
			]
		],
		[
			[
				[
					"Packages/Golang Build/Go.sublime-build",
					""
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Run"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Test"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Install"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Cross-Compile (Interactive)"
				],
				[
					"Packages/Golang Build/Go.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Golang Build/Go.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/User/AHK2.sublime-build",
					""
				],
				[
					"Packages/User/AHK_V2 - Copy.sublime-build",
					""
				],
				[
					"Packages/User/AHK_V2.sublime-build",
					""
				],
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					""
				],
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					"Default"
				],
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/AHK_V2.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"term",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"",
				"AutoHotkey v2 - runner"
			],
			[
				"terminus",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"termin",
				"Terminus: List Shells"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"refres",
				"Preferences: LSP Settings"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"syntaxfold ke",
				"Preferences: SyntaxFold Keybindings - Default"
			],
			[
				"syntax",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"fold ",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"ke",
				"Preferences: Key Bindings"
			],
			[
				"syntaxa",
				"SyntaxFold: Fold All"
			],
			[
				"settings",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"preferences pack",
				"Preferences: SyntaxFold Keybindings - Default"
			],
			[
				"package",
				"Package Control: List Unmanaged Packages"
			],
			[
				"resouu",
				"PackageResourceViewer: Open Resource"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"history",
				"History: Revert Modification"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Preferences: SideBarTools Settings"
			],
			[
				"view",
				"View: Toggle Side Bar"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"viewer",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"white sp",
				"Trim Trailing White Space"
			],
			[
				"du",
				"File: Duplicate"
			],
			[
				"ahk",
				"AutoHotkey - Run"
			],
			[
				"dupl",
				"File: Duplicate"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"com",
				"AutoHotkey - Compile"
			],
			[
				"search",
				"File: Search Files"
			],
			[
				"find ",
				"Preferences: Search in Project Settings – Default"
			],
			[
				"conda",
				"Conda: List Packages"
			],
			[
				"high",
				"HighlightWords: Highlight Words"
			],
			[
				"highl",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"goto",
				"Goto Documentation"
			],
			[
				"rename",
				"Rename File"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 164.0,
		"history":
		[
			"sublime.log_commands(True)",
			"gh repo clone hi5/Rufaydium-Webdriver"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/github/GlobalCoder/GlobalCoder/.git/ORIG_HEAD",
		"/D/github/GlobalCoder/GlobalCoder/.git/config",
		"/D/github/GlobalCoder/GlobalCoder/.git/HEAD",
		"/D/github/GlobalCoder/GlobalCoder/GlobalCoder.ahk",
		"/D/github/GlobalCoder/GlobalCoder/.git/hooks/push-to-checkout.sample",
		"/D/github/GlobalCoder/GlobalCoder/.git/refs/heads/newbranch",
		"/D/github/GlobalCoder/GlobalCoder/.git/refs/remotes/origin/HEAD",
		"/D/github/GlobalCoder/GlobalCoder/singles/globalcoder-captain.ahk",
		"/D/github/GlobalCoder/GlobalCoder/GlobalCoder2.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/inc/Project.ahk",
		"/P/.desktop/_Ahk_/ahk-zips/example.ahk",
		"/P/App/App/json/json/tests/test-all.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/single_files/windowmenu.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/mainwindow.ahk",
		"/D/lib/more libs/Splash-Gui/splashConsole.ahk",
		"/D/lib/btt.ahk",
		"/P/App/App/((start)-ifs.ahk",
		"/P/App/app/btt.ahk",
		"/D/lib/OCR.ahk",
		"/C/Users/dkzea/OneDrive/Documents/AutoHotkey/Lib/1_globalcoder_duplicateline.ahk",
		"/C/Program Files/AutoHotkey/Lib/Vis2.ahk",
		"/C/Program Files/AutoHotkey/Lib/Gdip.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/single_files/SampleSaveFile.ahk",
		"/D/github/GlobalCoder/GlobalCoder/node_modules/stringc.ahk/export.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/test-guimenu.ahk",
		"/C/Users/dkzea/OneDrive/Desktop/(start)/logs/q-google.txt",
		"/P/App/App/!.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/AHK-Project-Manager.ahk",
		"/d/github/globalcoder/globalcoder/singles/includes.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/AHK-Project-Manager.config",
		"/D/github/GlobalCoder/GlobalCoder/singles/single_files/windowsmenu.ahk",
		"/D/github/GlobalCoder/GlobalCoder/!.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/lemon_runner.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/main window.ahk",
		"/D/github/GlobalCoder/GlobalCoder/CustomMenuFiles/6 - Examples/ahk/img/image_to_afile.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/Captain.ini",
		"/D/github/GlobalCoder/GlobalCoder/singles/1_snippetholder.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/windowsmenu.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/SampleSaveFile.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/1_ToDoList.ahk",
		"/D/github/GlobalCoder/GlobalCoder/.gitignore",
		"/D/github/GlobalCoder/GlobalCoder/includes.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/geturl(usingACC).ahk",
		"/D/github/GlobalCoder/GlobalCoder/WordlistLearned.txt",
		"/D/github/GlobalCoder/GlobalCoder/singles/AHK Project Manager.config",
		"/D/github/GlobalCoder/GlobalCoder/backup-globalcoder-12-19-2022.txt",
		"/C/Users/dkzea/OneDrive/Desktop/workspaceStorage/70c14e793c306c912025db7890b32769/workspace.json",
		"/D/github/GlobalCoder/GlobalCoder/GlobalCoder.ahk.log",
		"/P/App/App/discord-item.ahk",
		"/P/App/App/.singles/exkeyfromlist.ahk",
		"/P/App/App/.singles/inputbox-FB.ahk",
		"/P/App/App/.singles/inputbox.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/trayExamples.ahk",
		"/P/App/App/.singles/inputbox-FB(master).ahk",
		"/D/ahk/(COPY-OF-ALL-Modified-RECENTLY)/discord-tool2.ahk",
		"/D/ahk/(COPY-OF-ALL-Modified-RECENTLY)/discord-chunjee-gps3-class-tool (2).ahk",
		"/C/Users/dkzea/OneDrive/Documents/AutoHotkey/discord-shuttercoder.ahk",
		"/P/App/App/.singles/gui2.ahk",
		"/D/github/GlobalCoder/GlobalCoder/collection/discord-ex.ahk",
		"/D/github/GlobalCoder/GlobalCoder/collection/discord-tool.ahk",
		"/P/DCIM/ahk/discord_code.ahk",
		"/D/AHKZeanah/.Front/discord-testdb.ahk",
		"/P/App/App/(Appmaster)/App/sb.traytest.ahk",
		"/Z/code/AHK/(start)/Tools/New folder/tools.ahk",
		"/P/App/App/(Appmaster)/App/(ext)/t5.ahk",
		"/P/App/App/.singles/tool9.ahk",
		"/D/github/GlobalCoder/GlobalCoder/collection/tools_WORKING.ahk",
		"/P/App/App/tools-1.ahk",
		"/P/App/App/tools-1 (2).ahk",
		"/D/ahk/start/Tools/New folder/tools.ahk",
		"/P/App/App/master-multiple-tools-time-tracking.ahk",
		"/D/github/GlobalCoder/GlobalCoder/collection/1_globalcoder/0_globalcoder_windowMenu.ahk",
		"/D/(Projects)/globalcoder/SQLiteDB_sample-myexample.ahk",
		"/D/github/GlobalCoder/GlobalCoder/collection/!.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/keypress-osd.ahk",
		"/D/github/GlobalCoder/GlobalCoder/collection/1_AHK-Project-Manager/AHK Project Manager.config",
		"/D/mssa/gitFolder/MSSA_CCAD8_LiveDemos/README_WK10.md",
		"/D/github/GlobalCoder/GlobalCoder/singles/DotnetCLI.ahk",
		"/D/github/GlobalCoder/GlobalCoder/collection/1_AHK-Project-Manager/AHK Project Manager.ahk",
		"/D/github/GlobalCoder/GlobalCoder/collection/[]todo fileheader.ahk",
		"/D/github/GlobalCoder/GlobalCoder/2globalcoder.ahkp",
		"/D/github/GlobalCoder/GlobalCoder/projmanagerahkp backup.txt",
		"/D/lib/class_SQLiteDB_L.ahk",
		"/D/lib/Class_SQLiteDB_AHK1.ahk",
		"/D/lib/Class_SQLiteDB.ahk",
		"/D/lib/Class_sqlite3.ahk",
		"/D/lib/class_sqlite_Light.ahk",
		"/D/lib/Class_sqlite.ahk",
		"/D/lib/class_SQLite_L.ahk",
		"/D/lib/Class_SQLiteDB (2).ahk",
		"/C/Program Files/AutoHotkey/Lib/struct.ahk",
		"/C/Users/dkzea/OneDrive/Documents/AutoHotkey/Lib/Base.ahk",
		"/D/lib/Base2.ahk",
		"/D/github/GlobalCoder/GlobalCoder/collection/1_globalcoder/scratch/sqliteex2.ahk",
		"/E/mssa/collection/1_globalcoder/scratch/example.ahk",
		"/D/globalcoder/scratch/example.ahk",
		"/D/(Projects)/globalcoder/SQLiteDB_sample4.ahk",
		"/D/(Projects)/globalcoder/SQLiteDB_sampleCheck.ahk",
		"/D/(Projects)/globalcoder/SQLiteDB_sample.ahk",
		"/D/(Projects)/globalcoder/scratch/Class_SQLiteDB.ahk",
		"/D/(Projects)/globalcoder/SQLiteDB_sample-workshop.ahk",
		"/D/(Projects)/globalcoder/Lib/Class_SQLiteDB.ahk",
		"/D/(Projects)/globalcoder/SQLiteDB_sample2.ahk",
		"/D/(Projects)/globalcoder/lib/Class_SQLiteDB.ahk",
		"/D/(Projects)/mssa/collection/1_globalcoder/scratch/example.ahk",
		"/E/mssa/collection/MISC/GlobalCoder-Main/AHK/example.ahk",
		"/D/(Projects)/globalcoder/scratch/SQLiteDB_sample-myexample.ahk",
		"/D/github/GlobalCoder/GlobalCoder/collection/1_globalcoder/scratch/example.ahk",
		"/D/(Projects)/mssa/collection/MISC/GlobalCoder-Main/AHK/example.ahk",
		"/D/(Projects)/mssa/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/VMR/examples/ui_example.ahk",
		"/D/lib/README.md",
		"/D/(Projects)/mssa/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/AHK_V2/examples/CreateDirectoryMap_example.ahk2",
		"/D/github/GlobalCoder/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/example.ahk",
		"/D/(Projects)/globalcoder/scratch/example.ahk",
		"/D/(Projects)/mssa/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK_V2/examples/Webview2-example 4.ahk2",
		"/D/(Projects)/mssa/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/classes/_examples/class_BTT--example 2.ahk",
		"/D/(Projects)/mssa/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/classes/_examples/class_AHDLib-example1.ahk",
		"/D/(Projects)/mssa/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK_V2/examples/Webview2-example.ahk2",
		"/D/(Projects)/mssa/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/AHK_V2/examples/scintilla_example.ahk",
		"/D/(Projects)/mssa/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/classes/_examples/class_ColorTip-example.ahk",
		"/E/mssa/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/libs/a-f/examples/callbackcreate_example.ahk",
		"/P/App/repos-GitHub/AHK-libs-and-classes-collection/classes/_examples/class_sqlite_Light-example.ahk",
		"/P/App/repos-GitHub/AHK-libs-and-classes-collection/classes/_examples/class_Multipart_example1.ahk",
		"/D/(Projects)/mssa/collection/MISC/GlobalCoder-Main/AHK/(start)/lib/!examples/hXexample.ahk",
		"/D/(Projects)/mssa/collection/MISC/GlobalCoder-Main/AHK/(start)/lib/!examples/huffmann_example.ahk",
		"/D/(Projects)/mssa/collection/MISC/GlobalCoder-Main/AHK/(start)/lib/!examples/FileSelectSpecific_example.ahk",
		"/E/mssa/collection/MISC/GlobalCoder-Main/AHK/(start)/lib/!examples/FindInstalled-example.ahk",
		"/D/(Projects)/mssa/collection/MISC/GlobalCoder-Main/AHK/(start)/lib/AHK-libs-and-classes-collection-master/libs/a-f/examples/AHKSock/example_2_server_transmitfile.ahk"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"btt(",
			"gdip",
			"switch",
			"minimized",
			"main window",
			"gui, test",
			"#if",
			"gui, 1",
			"xbutton1",
			"windowsmenu",
			"hotke",
			"labels",
			"run()",
			"^",
			"exit",
			"exit:",
			"f24 & es",
			",",
			"showtodo",
			"^!t",
			"todolistview",
			"showtodo",
			"todo",
			"(",
			") {",
			"){",
			"gdip",
			"lv_modify(){",
			"lv_modify",
			"lv_mod",
			",",
			"runin",
			"runcin",
			"addfo",
			"add",
			"*/",
			"f24 & 1",
			"custom1",
			"googler",
			"google(",
			"chrome",
			"google(",
			"google()",
			"google",
			"google()",
			"google(1)",
			"github",
			"gobutton1",
			"lv",
			"menuhandler1",
			"f24 & ",
			"prepa",
			"readwordlist",
			"gobutton1",
			"gomenu",
			";endregion",
			";region",
			"addwordtolist",
			"addse",
			"exit",
			"menu",
			"minerva \n",
			"This is the first \n",
			"This is the first example of text inserted from Minerva.\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"gui, 1",
			"gui, test"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/D/github/GlobalCoder/GlobalCoder/.gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8257,
						"regions":
						{
						},
						"selection":
						[
							[
								555,
								555
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "git ignore",
							"buffer_scroll_name": "7db617e5",
							"lsp_uri": "file:///D:/github/GlobalCoder/GlobalCoder/.gitignore",
							"spell_check": false,
							"syntax": "Packages/Git Formats/Git Ignore.sublime-syntax",
							"tabs_extra_last_activated": 1672069561.8,
							"tabs_extra_last_activated_sheet_index": 2
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/D/github/GlobalCoder/GlobalCoder/!.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21535,
						"regions":
						{
						},
						"selection":
						[
							[
								10844,
								10844
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "bc8483b0",
							"lsp_uri": "file:///D:/github/GlobalCoder/GlobalCoder/%21.ahk",
							"spell_check": false,
							"syntax": "Packages/User/ahkpkgcustom/AutoHotkey.tmLanguage",
							"tab_size": 8,
							"tabs_extra_last_activated": 1672673165.89,
							"tabs_extra_last_activated_sheet_index": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7558.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/D/github/GlobalCoder/GlobalCoder/CustomMenuFiles/9 - Showcase & Examples/pixelsearch_DLL.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2866,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "a99f4fbe",
							"lsp_uri": "file:///D:/github/GlobalCoder/GlobalCoder/CustomMenuFiles/9%20-%20Showcase%20%26%20Examples/pixelsearch_DLL.ahk",
							"spell_check": false,
							"syntax": "Packages/User/ahkpkgcustom/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1672066877.68,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 684.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/d/lib/btt.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 35628,
						"regions":
						{
						},
						"selection":
						[
							[
								35563,
								35563
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "867d6df0",
							"lsp_uri": "file:///D:/lib/btt.ahk",
							"spell_check": false,
							"syntax": "Packages/User/ahkpkgcustom/AutoHotkey.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1672066536.92,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14725.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/D/lib/Vis2.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 121318,
						"regions":
						{
						},
						"selection":
						[
							[
								95,
								95
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "12ad0394",
							"lsp_uri": "file:///D:/lib/Vis2.ahk",
							"spell_check": false,
							"syntax": "Packages/User/ahkpkgcustom/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1672066381.64,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/Users/dkzea/OneDrive/Documents/AutoHotkey/Lib/OCR.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5353,
						"regions":
						{
						},
						"selection":
						[
							[
								893,
								893
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "12386f19",
							"lsp_uri": "file:///C:/Users/dkzea/OneDrive/Documents/AutoHotkey/Lib/OCR.ahk",
							"spell_check": false,
							"syntax": "Packages/User/ahkpkgcustom/AutoHotkey.tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1672264019.38,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 370.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/p/app/app/((start)-class&fn.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 64582,
						"regions":
						{
						},
						"selection":
						[
							[
								28,
								28
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "16629a27",
							"lsp_uri": "file:///P:/app/app/%28%28start%29-class%26fn.ahk",
							"spell_check": false,
							"syntax": "Packages/User/ahkpkgcustom/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"tabs_extra_last_activated": 1672066271.77,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/D/github/GlobalCoder/GlobalCoder/singles/inc/Project.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5865,
						"regions":
						{
						},
						"selection":
						[
							[
								189,
								189
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "a2d3d562",
							"lsp_uri": "file:///D:/github/GlobalCoder/GlobalCoder/singles/inc/Project.ahk",
							"spell_check": false,
							"syntax": "Packages/User/ahkpkgcustom/AutoHotkey.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1672680659.67,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/D/github/GlobalCoder/GlobalCoder/.git/config",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 349,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"bs_sintax": "git config",
							"buffer_scroll_name": "ed3507ef",
							"lsp_uri": "file:///D:/github/GlobalCoder/GlobalCoder/.git/config",
							"spell_check": false,
							"syntax": "Packages/Git Formats/Git Config.sublime-syntax",
							"tab_size": 8,
							"tabs_extra_last_activated": 1672680665.87,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/D/github/GlobalCoder/GlobalCoder/singles/single_files/1_ToDoList.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7900,
						"regions":
						{
						},
						"selection":
						[
							[
								140,
								140
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey",
							"buffer_scroll_name": "53461d16",
							"lsp_uri": "file:///D:/github/GlobalCoder/GlobalCoder/singles/single_files/1_ToDoList.ahk",
							"spell_check": false,
							"syntax": "Packages/User/ahkpkgcustom/AutoHotkey.tmLanguage",
							"tab_size": 2,
							"tabs_extra_last_activated": 1672060687.54,
							"tabs_extra_last_activated_sheet_index": 8,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 54.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.747664197708,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 338.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 196.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.golang_build":
	{
		"height": 108.0
	},
	"pinned_build_system": "",
	"project": "GlobalCoder Workspace.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"P:\\App\\App\\ws\\tools & WS.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 300.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			]
		]
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 317.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
