{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"setwork",
				"SetWorkingDir"
			],
			[
				"rc",
				"RCtrl"
			],
			[
				"a_",
				"A_Index"
			],
			[
				"Loop",
				"Loop parse"
			],
			[
				"msgb",
				"MsgBox"
			],
			[
				"go",
				"Gosub"
			],
			[
				"sys",
				"SysGet"
			],
			[
				"a_loo",
				"A_LoopFileName"
			],
			[
				"no",
				"NoTrayIcon"
			],
			[
				"work",
				"SetWorkingDir"
			],
			[
				"DE",
				"Destroy"
			],
			[
				"msg",
				"MsgBox"
			],
			[
				"got",
				"Goto"
			],
			[
				"file",
				"FileAppend"
			],
			[
				"close",
				"Close()"
			],
			[
				"gui",
				"Gui"
			],
			[
				"Guic",
				"GuiEscape"
			],
			[
				"guio",
				"GuiClose"
			],
			[
				"hide",
				"HideGUI"
			],
			[
				"ahk_",
				"ahk_exe"
			],
			[
				"setw",
				"SetWorkingDir"
			],
			[
				"a_this",
				"A_ThisFunc"
			],
			[
				"c",
				"CustomMenuFiles"
			],
			[
				"winwai",
				"WinWaitActive"
			],
			[
				"Input",
				"InputBox"
			],
			[
				"input",
				"InputBox"
			],
			[
				"stringre",
				"StringReplace"
			],
			[
				"a_pro",
				"A_ProgramFiles"
			],
			[
				"a_script",
				"A_ScriptFullPath"
			],
			[
				"regexr",
				"RegExReplace()"
			],
			[
				"FileCreate",
				"FileCreateDir"
			],
			[
				"exist",
				"FileExist()"
			],
			[
				"timesin",
				"A_TimeSincePriorHotkey"
			],
			[
				"a_p",
				"A_TimeSincePriorHotkey"
			],
			[
				"a_ho",
				"A_PriorHotkey"
			],
			[
				"fileappen",
				"FileAppend"
			],
			[
				"a_screen",
				"A_ScreenHeight"
			],
			[
				"a_scr",
				"A_ScreenWidth"
			],
			[
				"winget",
				"WinGetTitle"
			],
			[
				"Winget",
				"WinGetTitle"
			],
			[
				"setk",
				"SetKeyDelay"
			],
			[
				"a_pr",
				"A_PriorHotkey"
			],
			[
				"too",
				"ToolTip"
			],
			[
				"string",
				"StringReplace"
			],
			[
				"strre",
				"StrReplace()"
			],
			[
				"repl",
				"StrReplace()"
			],
			[
				"win",
				"WinActivate"
			],
			[
				"change",
				"changeFirstName"
			],
			[
				"rnd",
				"Round()"
			],
			[
				"str",
				"StrSplit()"
			],
			[
				"getke",
				"GetKeyState()"
			],
			[
				"br",
				"Break"
			],
			[
				"ifwi",
				"IfWinActive"
			],
			[
				"winwait",
				"WinWaitActive"
			],
			[
				"caps",
				"CapsLock"
			],
			[
				"Sendi",
				"SendInput"
			],
			[
				"sen",
				"SendMessage"
			],
			[
				"retur",
				"ReturnValue"
			],
			[
				"sendmod",
				"SendMode"
			],
			[
				"contro",
				"ControlList"
			],
			[
				"inire",
				"IniRead"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "/*\n\nGlobalCoder: Purpose and Value-Statement:\n                        [ CODING & LEARNING *UNITOOL* ]\n                        \n    \"Learning tool, Tracking tool, Individual Information Management - no dependance \"\"\n    ;\n    ;                [features]\n    -ocr [x]\n    -regexer [x]\n    -ghost-folders [x...] [benefit] - interfaceless folder creation\n    -global google[todo] [benefit] - interfaceless google searcher and information grouper\n    -\n    -\n    -\n    -\n    -\n~~~~~~~~~~~~~~~~w~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nFOR:\n\n[Instructor - features:]\n    -Presentation - mode -> non window specific drawing\n    -Keys-Screen-Display - Shows Key shortcuts on screen of typed code\n    -- allows for better OCR-ing of CODE, READABILITY, and ultimately \n    communication EFFECTIVENESS\n    -Non window specific note-taking\n        -day specific, project specific, use-case specific, feature specific\n\n\n[ STUDENT ]\n    - WINDOW Tracking\n    - \n        -NON-SPECIFIC:\n            - non window specific note-taking\n            - non window specific doc reference for code Language\n            - non window specific code intellisense/ cursor functionality within all IDEs/Editors\n            - non window specific GLOBAL-Computer:\n                /STAT Tracking \n                / Logging, \n                /Data capture, \n                /archiving, and\n                /implimentation-Of\n\n        *WINDOW-SPECIFICs:*\n            - functionlity and referencing \n            - information Identificaiton / \n            - OCR 'purposing' / \n            - Data Collection Mechanisms\n\n\n\n[ CODER ]\n    - global git\n    - global google\n    - global globs\n    - global learning\n    - global stat-tracking\n    - global referencing \n    - global Real-Time Analysis of user(self), projects, days, etc\n\n\n\n[ Universally-ANY-Group(ed)-Member-of-a-team ]\n    -Communication effectiveness-\n        -/note-taking \n        / referencing \n        / long-term optimization of workflow and meeting flow\n\n    i.e.\n     *NON IDE-SPECIFIC CODING*\n        ( universal editor-likeness )\n        -hotkeys to remap/changing IDE shortcut keys to map to \n        -hotkeys converted to hotstring/menu items per window-instance\n\n[ MS ]\n    -MS.com is a neverending chain of references \n    that will result in 500 tabs\n    in one 'session' of viewing.\n\n    -MS teams sucks - concept is great\n    -Whiteboard sucks - concept is great\n    -The website sucks - too many reference linking page to page with short\n    snips in each mi-nute section..\n\n    edge is getting better -> vs. chrome especially. my theory;\n    -chrome and google benefit for single 'threaded' usage of browser,\n    therefore result:  discourages automation\n     -edge can afford to allow for automation/multi threaded tracking of browser\n     ;and therefore allows 'more of' automation functionality...\n\n\n\nGlobalCoder is FOR MicroSoft. \nGlobalCoder HELPS MicroSoft/Students/Teachers/TEAMS Functionality.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n[ ZEANAHS REFERENCING }\nsublime.log_commands(True)\n\n//Todo\n;coder playground - parse clipboard, identify functions and hotkeys used within, save as new ahk script\n;with the main function as the name,---> if multifunctions, identify root word between all], save copied ahk to file with\n;auto-generated name scheme, add functions and file path to global list of tracked/added scripts. \n\n*/\n;===================================================== Seldom Changing Directives \n#Requires AutoHotkey v1.1.34.03\n#ErrorStdOut\n#Persistent\n#NoEnv\n#SingleInstance\n#WinActivateForce\n#KeyHistory\n#installKeybdHook\n#InstallMouseHook\nsetbatchlines,-1\nSetTitleMatchMode, 2\nDetectHiddenWindows, on\n\n#include d:/lib\n#include vis2.ahk\n#Include Gdip_All.ahk\n#Include d:/lib/((functions)).ahk\n\n;===================================================== Sometimes Changing Directives\nSetKeyDelay, 50\nMenu, Tray, Icon , Shell32.dll, 14 , 1\n;menu, tray, icon ,  %A_ScriptDir%\\ico\\heat\\compass.ico\n\n;Menu, Tray, Icon , %A_ScriptFullPath%/ico/heat/compass.ico\n\nTrayTip, GlobalCoder, Started %nowtime%\nSleep 800   ; Let it display for 3 seconds.\n;HideTrayTip()\nFormatTime, nowtime , YYYYMMDDHH24MISS, MMdd--HHmm\n;=====================================================\n\nGui, Font,Q4, MS Sans Serif ;opts-> (c)olor (s)ize (w)eight (Q)uality\nGui, Font,, Arial\nGui, Font,, Verdana  ; Preferred font.\n\n;MsgBox, % \"0: `n [Time] `n\" \napplicationname=GlobalCoder\n\n;CurHK:=\"~^f24\"    \n ;CurHK.=\" & a\"\n;Hotkey % CurHK, globalcoderdash\n\nglobal g := {}\n\nglobal current = %A_DD%/%A_MM%/%A_YYYY% \",\" %A_Hour% \":\" %A_Min%\nglobal rootpath := \"d:/code\"\nglobal refpath := \"\"\nglobal notepath := \"\"\nglobal frontproject := \"d:/code/test/\" \nglobal frontpic := frontproject . \"/.pic\"\nglobal frontquestion := frontproject . \"/.Questions\"\nglobal runcount := \"\"\nglobal inilang := \"\"\nglobal projectfolder := \"\"\nglobal sandboxfolder := \"\"\nglobal ids := \"\"\n;C:\\Users\\%UserName%\\AppData\\Roaming\\Code\\User\\snippets\n\nGosub,INIREAD\nGosub,MENU\nGosub,TRAYMENU\nreturn\n;==={ functions }==================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\nsendVS(string){\n  clipboard = %string% ;sets clipboard to function input (string) variable\n  send, ^v\n  return\n}\ngenerateMain(){\n  string := \"using System; `nusing \" . LibraryName . \"; `n`n namespace \" ConsoleName \"`n `t{ `n `t`t class Program `n `t`t`t\"\n  return string\n}\ngenerateNamespace(){\n  string := \" namespace \" LibraryName \"`n { `n `t`t public class Placeholder\"\n  return string\n}\n\nclone(dir){\n  SourceFolder = d:\\code\\mssa\\.Templates\\.vscode\n  if SourceFolder =\n        return\n  TargetFolder = %dir%\n  if TargetFolder =\n      return\n  MsgBox, 4, , A copy of the folder \"%SourceFolder%\" will be put into \"%TargetFolder%\".  Continue?\n  IfMsgBox, No\n      return\n  SplitPath, SourceFolder, SourceFolderName  ; Extract only the folder name from its full path.\n  FileCopyDir, %SourceFolder%, %TargetFolder%\\%SourceFolderName%\n  if ErrorLevel\n  MsgBox The folder could not be copied, perhaps because a folder of that name already exists in \"%TargetFolder%\".\n    return\n}\n\nnewsubject(path := \"\"){\n  if (path = \"\")\n  path := frontproject\n\n  ;inputbox, ProjName,, \" Name your Project: `n this is the SLN file created. \" ,,,,,,,,SLN_\n  InputBox, subject ,, \"enter a subject\"\n  frontproject := \"D:\\code\\mssa\\.notes\\\" . subject ;\".txt\"\n  if fileexist(frontproject . \"note.txt\"){\n  MsgBox, already exists.\n  return frontproject\n   }\n\n  filecreatedir, % frontproject\n  fileappend,\"init\", % frontproject \"\\note.txt\"  \n  return frontproject\n  }\n\nnewnote(path := \"\"){\n  if (path = \"\")\n  path := frontproject\n\n  ;inputbox, ProjName,, \" Name your Project: `n this is the SLN file created. \" ,,,,,,,,SLN_\n  InputBox, note,, % frontproject - \"new note:\"\n  fileappend, `n %note% , % frontproject \"\\note.txt\"\n  return\n}\nselectsubject(path := \"\"){\n  if (path = \"\")\n  path := frontproject\n\n  Gui, Add, ListView, background000000 cFFFFFF -Hdr r20 w200 h200 gMyListView3, Name\n  Loop, d:\\code\\mssa\\* , 2 ; 2 = folders only\n  LV_Add(\"\", A_LoopFileName, A_LoopFileSizeKB)\n  LV_ModifyCol()  ; Auto-size each column to fit its contents.\n  LV_ModifyCol(2, \"Integer\")  ; For sorting purposes, indicate that column 2 is an integer.\n  FolderList .= A_LoopFileName . \"`n\"\n\nGui, Show\n\n  \n  MyListView3:\n    if A_GuiEvent = DoubleClick  ; There are many other possible values the script can check.\n    {\n      LV_GetText(FileName, A_EventInfo, 1) ; Get the text of the first field.\n      LV_GetText(FileDir, A_EventInfo, 2)  ; Get the text of the second field.\n    frontproject = d:\\code\\mssa\\%filename%\n    GuiControl,, Folder, %frontproject%\n    gui, destroy\n  \n}\nreturn frontproject\n}\n\nnew(){\n  inputbox, rootfolder ,, \"Enter a complete path as root folder `n Right arrow to accept auto-suggest\" ,,,,,,,, D:/globalcoder\n\n  MsgBox, % \" ^1 means ctrl + 1 will activate the key block `n i.e press ^1 to start setup of c# project\" \n  MsgBox, % \" ^esc  auto-reloads/'aborts' current thread \"\n  return rootfolder\n}\nterminal(rootfolder){\n  run, cmd.exe\n\n;RUN, C:/Program Files/Git/bin/bash.exe -i -l\n  WinActivate, ahk_exe WindowsTerminal.exe\n  WinWaitActive, ahk_exe WindowsTerminal.exe\n  send, \"cd \" rootfolder \n  send, ^+5 ; this is MY shortcut to open git bash inside windows terminal\n  WinActivate, % \"GitBash\"\n  WinWaitActive,  % \"GitBash\" ; MINGW64:/c/Users/%A_UserName%\n  clipboard = cd %rootfolder% ; add your root folder path here\n  SendEvent, ^v\n  send, {enter}\n}\nwaitgitbash(){\n  WinActivate, % \"GitBash\"\n  WinWaitActive,  % \"GitBash\" ; MINGW64:/c/Users/%A_UserName%\n  send, ^v\n}\n\nconsole(){\n  inputbox, consoleName\n  string := \"dotnet new console -n \"\"\" \"\" consoleName \"\"\" \"\n  send(string)\n  string := \"dotnet new classlib -n \"\"\" \"\" consoleName . \"library\" \"\"\" \"\n  send(string)\n}\nsetup(rootfolder := \"A_ScriptDir\"){ ;activate anywhere\n  dir = %rootfolder%\n  inputbox, ProjName,, \" Name your Project: `n this is the SLN file created. \" ,,,,,,,,SLN_\n  dir := dir \"\\\" . projName\n  ;FileCreateDir, % dir \"/\" . projName\n  FileCreateDir, % dir\n ; WinActivate, GitBash\n  ;WinWaitActive,  MINGW64:/c/Users/%A_UserName%\n\n  waitgitbash()\n\n  send, % \"cd \" . ProjName\n  SendInput, {enter} \n  MsgBox, % \"1: `n evaluate results...\" dir ; (combined at start of fn) dir \"/\" . projName \n\n  string := \"dotnet new sln -n  \"\"\" \"\" ProjName  \"\"\" \" \n  send(string)\n\n  inputbox, consoleName,, \" Name your Project: `n this is the Console App. \" ,,,,,,,,Console_%projName%\n  string := \"dotnet new console -n \"\"\" \"\" consoleName \"\"\" \"\n  send(string)\n\n  inputbox, LibraryName,, \" Name your Project: `n this is an additional file library. \" ,,,,,,,,%ConsoleName%library\n  string := \"dotnet new classlib -n \"\"\" \"\" LibraryName \"\"\" \"\n  send(string)\n\n  string := \"dotnet sln \" ProjName \".sln add **/*.csproj\"\n  send(string)\n\n  string := \"dotnet add \" ConsoleName \"/\" ConsoleName \".csproj reference \" libraryName \"/\" libraryName \".csproj\"\n  send(string)\n\n  send(\"cd \" . ConsoleName)\n  send(\"code .\")\n\n  return dir\n}\n\n\nHideTrayTip() {\n    TrayTip  ; Attempt to hide it the normal way.\n    if SubStr(A_OSVersion,1,3) = \"10.\" {\n        Menu Tray, NoIcon\n        Sleep 200  ; It may be necessary to adjust this sleep.\n        Menu Tray, Icon\n        return\n    }\n}\n\nWM_MOUSEMOVE(wParam,lParam){\n  Global hCurs\n  MouseGetPos,,,,ctrl\n  If ctrl in Static9,Static13,Static17\n    DllCall(\"SetCursor\",\"UInt\",hCurs)\n  Return\n}\n\nst_printArr(array, depth=5, indentLevel=\"\"){\n    for k, v in Array\n    {\n        list.= indentLevel \"[\" k \"]\" ;first start building up each the key names\n        if (IsObject(v) && depth>1) ;is this \"end\" level? are there more levels?\n            list.=\"`n\" st_printArr(v, depth-1, indentLevel . \"    \") ;yep the value is another object so we are not at the end level, start all over one level down this branch\n        Else\n            list.=\" -> \" v ;we reached the end of one branch! (or the final branch)\n    ; list.=\"`n\"\n        list:=rtrim(list, \"`r`n `t\") \"`n\" ;add a tab for the next indent level\n    }\n    return rtrim(list)\n}\n\nadmin(){\nSetWorkingDir, %A_ScriptDir%\nif not A_IsAdmin\nRun, *RunAs %A_ProgramFiles%/autohotkey/autohotkey.exe \"%A_ScriptFullPath%\" ,,, NewPID\nprocess, priority, %newpid%, high\nexitapp\n}\n\nconfigurehotkey(){\nCurHK:=\"~`\"    \n;CurHK.=\" & a\"\nHotkey % CurHK, DDHK\nGui Add,DropDownList,gChangehotkey vNewHK,~F1|~F2|~F3   ;Create a DDL with the keys\nGui Show\nReturn  \n}\n\nterminal2(){\n    ;run, cmd.exe, \n    run, \"C:\\Program Files\\Git\\git-bash.exe\" --cd-to-home\n    ;WinGet, BashWindow\n    ;\n    WinActivate, ahk_exe WindowsTerminal.exe\n    ;winwaitactive, ahk_exe windowsterminal.exe\n    ;send, ^+6\n    ; this is MY shortcut to open git bash inside windows terminal\n    ;bashwindow := WinActive(\"A\")\n    ;WinWaitActive, ahk_id bashwindow\n    \n    ;WinWaitActive, bashwindow\n    clipboard = cd d:/code/MSSA ; add your root folder path here\n    SendEvent, ^v\n    send, {enter}\n}\n\nconsole2(){\n    inputbox, consoleName\n    string := \"dotnet new console -n \"\"\" \"\" consoleName \"\"\" \"\n    send(string)\n    string := \"dotnet new classlib -n \"\"\" \"\" consoleName . \"library\" \"\"\" \"\n    send(string)\n}\nsetup2(){ ;activate anywhere\n    \n    inputbox, ProjName,, \"Name your Project: `n this is the SLN file created. `n`n Make sure GIT BASH is under this dialogue box `n unless v2 version `n which will require manual paste of generated CLI commands.\" `n  ,,,,,,,,SLN_\n    dir := dir \"/\" . projName\n    ;FileCreateDir, % dir \"/\" . projName\n    FileCreateDir, % dir\n    WinActivate, MINGW64:/d/code/mssa\n    ;senddir)\n    ;WinWaitActive,  MINGW64:/c/Users/%A_UserName%\n\n    send(\"cd \" . dir, \"folder created. \")\n    ;SendInput, {enter} \n    MsgBox, % \"1: `n evaluate results...\" dir ; (combined at start of fn) dir \"/\" . projName \n\n    string := \"dotnet new sln -n  \"\"\" \"\" ProjName  \"\"\" \" \n    send(string)\n\n    inputbox, consoleName,, \" Name your Project: `n this is the Console App. \" ,,,,,,,,Console_%projName%\n    string := \"dotnet new console -n \"\"\" \"\" consoleName \"\"\" \"\n    send(string)\n\n    inputbox, LibraryName,, \" Name your Project: `n this is an additional file library. \" ,,,,,,,,%ConsoleName%library\n    string := \"dotnet new classlib -n \"\"\" \"\" LibraryName \"\"\" \"\n    send(string)\n\n    string := \"dotnet sln \" ProjName \".sln add **/*.csproj\"\n    send(string)\n    \n    string := \"dotnet add \" ConsoleName \"/\" ConsoleName \".csproj reference \" libraryName \"/\" libraryName \".csproj\"\n    send(string)\n\n    send(\"cd \" . ConsoleName)\n    send(\"code .\")\n    msgbox, \"generate debug files & exit\"\n    send(\"cd .. && code .\")\n    return dir\n}\n\nsend(string, Msg:=\"\"){ ;send within console\n\n    send, {backspace 5} ;ensures blank terminal line before inputting to terminal  via clipboard\n    clipboard = %string% ;sets clipboard to function input (string) variable\n    MsgBox, % \"message: \" . Msg . \"Command placed in clipboard :  `n \" string \" `n paste results in git bash then press ok to continue. \" \n    ;send, ^v ; paste clipboard\n    ;send, {enter}\n}\n\nclone2(dir){\n    SourceFolder = d:\\code\\mssa\\.Templates\\.vscode\n    if SourceFolder =\n            return\n    TargetFolder = %dir%\n    if TargetFolder =\n        return\n    MsgBox, 4, , A copy of the folder \"%SourceFolder%\" will be put into \"%TargetFolder%\".  Continue?\n    IfMsgBox, No\n        return\n    SplitPath, SourceFolder, SourceFolderName  ; Extract only the folder name from its full path.\n    FileCopyDir, %SourceFolder%, %TargetFolder%\\%SourceFolderName%\n    if ErrorLevel\n    MsgBox The folder could not be copied, perhaps because a folder of that name already exists in \"%TargetFolder%\".\n        return\n}\n\nnewsubject2(path := \"\"){\n    if (path = \"\")\n    path := notepath\n    MsgBox, % \"0: `n \" path\n\n    ;inputbox, ProjName,, \" Name your Project: `n this is the SLN file created. \" ,,,,,,,,SLN_\n    InputBox, subject ,, \"enter a subject\"\n    frontproject := path \"\\\" . subject ;\".txt\"\n\n    if fileexist(frontproject . \"note.txt\"){\n    MsgBox, already exists... init archive()\n\n    return frontproject\n     }\n\n    filecreatedir, % frontproject\n    fileappend,-init, % frontproject \"\\.notes.txt\"  \n    return frontproject\n    }\n\narchive2(){\n    Loop, % rootpath . \"\\*\" , 2 ; 2 = folders only\n    ;Loop, HKLM|HKU|HKCU|HKCR|HKCC [, Key, IncludeSubkeys?, Recurse?]`n{`n RegName := A_LoopRegName`n RegType := A_LoopRegType`n command2`n}\n    return\n}\n\nnewnote2(path := \"\"){\n\n    if (path = \"\")\n    path = %frontproject%\nstatic note := \"vnewnote\"\n    ;inputbox, ProjName,, \" Name your Project: `n this is the SLN file created. \" ,,,,,,,,SLN_\nGui,Font,Courier New\nGui,Add,Edit,vnote -Wrap W400,\nGui,Font\nGui,Add,Button,GnewnoteOK Default W75,&OK\nGui,Add,Button,GnewnoteCANCEL x+5 W75,&Cancel\nGui,Show ;%applicationname% ;Settings\n\n\nnewnoteOK:\nGui,Submit\nFileDelete,%applicationname%.ini\nFileAppend,%newini%,%applicationname%.ini\nReturn\n\n\nnewnoteCANCEL:\nGui,Destroy\nHotkey,%captainhotkey%,captainHOTKEY,On\nReturn\n\n\n\n\n    ;InputBox, note,, % frontproject - \"new note:\"\n    fileappend, `n %note% `; , % frontproject \"\\.notes.txt\"\n    return\n}\nselectsubject2(path := \"\"){\n    if (path = \"\")\n    ;frontproject := rootpath\n\n    Gui, Add, ListView, background000000 cFFFFFF -Hdr r20 w200 h200 gMyListView3, Name\n    ;Loop, d:\\code\\mssa\\* , 2 ; 2 = folders only\n    Loop, % rootpath . \"\\*\" , 2 ; 2 = folders only\n\n    LV_Add(\"\", A_LoopFileName, A_LoopFileSizeKB)\n    LV_ModifyCol()  ; Auto-size each column to fit its contents.\n    LV_ModifyCol(2, \"Integer\")  ; For sorting purposes, indicate that column 2 is an integer.\n    FolderList .= A_LoopFileName . \"`n\"\n\n    Gui, Show\n\n    \n    MyListView4:\n        if A_GuiEvent = DoubleClick  ; There are many other possible values the script can check.\n        {\n        LV_GetText(FileName, A_EventInfo, 1) ; Get the text of the first field.\n        LV_GetText(FileDir, A_EventInfo, 2)  ; Get the text of the second field.\n        ;frontproject = d:\\code\\mssa\\.notes\\%filename%\n        frontproject := rootpath . \"/\" . filename . \"/\"\n\n        files := lv(frontproject)\n\n        msgbox, % frontproject \"`n files:\" files ;filename ;filedir\n        GuiControl,, Folder, %frontproject%\n        gui, destroy\n    \n    }\nreturn frontproject\n}\n\nrun2(path:=\"\"){\n;if (path = \"\" )\n    ;path = %frontproject%\n\n    ;run, %path%\n    run, % path\n    return\n}\n\nsnipewindow2(frontproject:=\"\"){\nmsgbox, snipewindow\nstatic counter := 1\n;ensure consistant pic location relative to the chosen folder.\n;not left parameterless incase another location desired.\nsavepath := frontproject . \"/\" . ++counter . \".png\"\n\n    if (fileexist(savepath )){\n        loop\n    {\n        msgbox, % must have existed, to be here...\n        savepath :=  frontproject . \"/\" . ++counter\n        } Until (!fileexist(savepath . \".png\"))\n    msgbox, it shouldnt exist, you should be here\n    frontproject := savepath . \".png\"\n    msgbox, % savepath . \".png\"\n    msgbox, % \"picture should be here:  \" frontproject\n    ;msgbox, % \n    \n    pToken := Gdip_Startup()\n    WinGet, hwnd, ID, A\n    msgbox, % hwnd \"or: \" ID\n    pBitmap := Gdip_BitmapFromHWND(hwnd)\n    Gdip_SaveBitmapToFile(pBitmap, frontproject)\n    Gdip_DisposeImage(pBitmap)\n    Gdip_Shutdown(pToken)\n\n        }\n    }\n    alterclipboard2(string, ReplaceWith := \"\", ToReplace*){\n    outvar := \"\"\n    oldstring := clipboard\n    if replacewith := \"\"\n        replacewith := a_space\n    if clipboard = \"\"\n        clipboard := string\n\n    x := RegExMatch(clipboard, \"O){\", outvar)\n    Msgbox, % \"0: `n result:\" x \"-\" OutVar\n\n    y := RegExReplace(clipboard, \"O){\",\";___\", \"outvar\",-1, 1)\n    clipboard := y\n    MsgBox, % \"1: `n replaced result: \" y \n}\n\n; want to pass in O){ , O)}, etc\nalterClipboard(ReplaceWith := \"\", ToReplace*) {\n    oldstring := clip := clipboard\n    if ReplaceWith = \"\"\n        ReplaceWith := A_Space\n\n    for _, v in ToReplace {\n        clip := StrReplace(clip, v, ReplaceWith)\n    }\n    clipboard := clip\n}\n\n\n^!+y::\nalterclipboard(clipboard, \";\" ,\"{\")\nreturn\n\nRemoveComments(Line){\n  If !(Pos := InStr(Trim(Line), \";\"))\n    Return Line             ; no quote character in this line\n\n  If (Pos = 1)\n    Return                  ; whole line is pure comment\n\n  ;remove comments (first clean line of quotes strings)\n  If (Pos := RegExMatch(RemoveQuotedStrings(Line), \"\\s+;.*$\"))\n    Line := SubStr(Line, 1, Pos - 1)\n\n  Return Line\n}\n\nRemoveQuotedStrings(Line){\n  ;the concept how to remove quoted strings was taken from CoCo's ListClasses script (line 77; http://ahkscript.org/boards/viewtopic.php?p=43349#p42793)\n  ;replace quoted strings with dots and dashes to keep length of line constant, and that other character positions do not change\n  static q := Chr(34)       ; quote character\n\n  ;Replace quoted literal strings             1) replace two consecutive quotes with dots\n  CleanLine := StrReplace(Line, q . q, \"..\")\n\n  Pos := 1                                 ;  2) replace ungreedy strings in quotes with dashes\n  Needle := q . \".*?\" . q\n  While Pos := RegExMatch(CleanLine, Needle, QuotedString, Pos){\n    ReplaceString =\n    Loop, % StrLen(QuotedString)\n       ReplaceString .= \"-\"\n    CleanLine := RegExReplace(CleanLine, Needle, ReplaceString, Count, 1, Pos)\n  }\n  Return CleanLine\n}\n\n; This is called any time any of the edit boxes on the RegExMatch tab are changed.\nUpdateMatch:\n    Gui Submit, NoHide\n    \n    if not isint(mStartPos) {\n        mStartPos := 1\n        Gui Font, cRed \n        GuiControl Font, mStartPos\n    }else {\n        Gui Font, cDefault\n        GuiControl Font, mStartPos\n    }\n    \n    ;when needle is broken in several lines comments are stripped off every line and lines with text are concatenated\n    LineArray := StrSplit(mNeedle, \"`n\", \"`r\")\n    If (LineArray.MaxIndex() > 1) {\n      tmp =\n      For i, Line in LineArray\n        If (CleanLine := RemoveComments(Trim(Line)))\n          tmp .= CleanLine\n      mNeedle := tmp\n    }\n    ; Set Needle to return an object ( O maybe set even twice)\n    mNeedle := RegExReplace(mNeedle, \"^(\\w*)\\)\", \"O$1)\", cnt)\n    if (! cnt) {\n        mNeedle := \"O)\" mNeedle\n    }\n\n    If mLF\n      mNeedle := \"`n\" mNeedle\n    If mCR\n      mNeedle := \"`r\" mNeedle\n    If mAnyCRLF\n      mNeedle := \"`a\" mNeedle    \n\n    Match =\n    FoundPos := RegExMatch(mHaystack, mNeedle, Match, mStartPos)\n    if (ErrLvl := ErrorLevel) {\n        Gui Font, cRed \n        GuiControl Font, mNeedle\n        ResultText := \"FoundPos: \" FoundPos \"`n\" \n                    . \"ErrorLevel: `n\" ErrLvl \"`n`n\"\n                    . \"Needle: `n\"\"\" mNeedle \"\"\"`n`n\"\n    }else {\n        Gui Font, cDefault\n        GuiControl Font, mNeedle\n        ResultText := \"FoundPos: \" FoundPos \"`n\"\n        ResultText .= \"Match: \" Match.Value() \"`n\"\n                   . \"Needle: `n\"\"\" mNeedle \"\"\"`n`n\"\n        Loop % Match.Count() {\n            ResultText .= \"Match[\"\n            ResultText .= (Match.Name[A_Index] = \"\") \n                        ? A_Index \n                        :  Match.Name[A_Index] \n            ResultText .= \"]: \" Match[A_Index] \"`n\"\n                       \n        }\n    }\n    \n    GuiControl, , mResult, %ResultText%\nreturn\n\n; This is called any time any of the edit boxes on the RegExReplace tab are changed.\nUpdateReplace:\n    Gui Submit, NoHide\n    \n    If not isint(rStartPos) {\n        rStartPos := 1\n        Gui Font, cRed \n        GuiControl Font, rStartPos\n    }Else {\n        Gui Font, cDefault\n        GuiControl Font, rStartPos\n    }\n    \n    If not isint(rLimit) {\n        rLimit := -1\n        Gui Font, cRed \n        GuiControl Font, rLimit\n    }Else {\n        Gui Font, cDefault\n        GuiControl Font, rLimit\n    }\n    \n    ;when needle is broken in several lines comments are stripped off every line and lines with text are concatenated\n    LineArray := StrSplit(rNeedle, \"`n\", \"`r\")\n    If (LineArray.MaxIndex() > 1) {\n      tmp =\n      For i, Line in LineArray\n        If (CleanLine := RemoveComments(Trim(Line)))\n          tmp .= CleanLine\n      rNeedle := tmp\n    }\n\n    If rLF\n      rNeedle := \"`n\" rNeedle\n    If rCR\n      rNeedle := \"`r\" rNeedle\n    If rAnyCRLF\n      rNeedle := \"`a\" rNeedle    \n    \n    NewStr := RegExReplace(rHaystack, rNeedle, rReplacement, rCount, rLimit, rStartPos)\n    If (ErrLvl := ErrorLevel) {\n        Gui Font, cRed \n        GuiControl Font, rNeedle\n        ResultText := \"Count: \" rCount \"`n\" \n                    . \"ErrorLevel: `n\" ErrLvl \"`n`n\"\n                    . \"Needle: `n\"\"\" rNeedle \"\"\"`n`n\"\n    }Else {\n        Gui Font, cDefault\n        GuiControl Font, rNeedle\n        ResultText := \"Count: \" rCount \"`n\" \n                    . \"NewStr: `n\" NewStr\n    }\n    \n    GuiControl, , rResult, %ResultText%\nreturn\n\nMakeGui:\n    Gui, +ReSize +MinSize\n    Gui Font, s10, Consolas\n    Gui Add, Tab2, r25 w430 vTabSelection, RegExMatch|RegExReplace\n    \n    Gui Tab, RegExMatch\n        Gui Add, Text, , Text to be searched:\n        Gui Add, Edit, r10 w400 vmHaystack gUpdateMatch\n        Gui Add, Text, Section vmTxtRegEx, Regular Expression:  Option\n        Gui Add, Checkbox, x+2 vmLF gUpdateMatch, ``n\n        Gui Add, Checkbox, x+2 vmCR gUpdateMatch, ``r\n        Gui Add, Checkbox, x+2 vmAnyCRLF gUpdateMatch, ``a\n        Gui Add, Edit, xs r5 w305 vmNeedle gUpdateMatch\n        Gui Add, Text, x+15 ys vmTxtStart, Start: (1)\n        Gui Add, Edit, r1 w75 vmStartPos gUpdateMatch, 1\n        Gui Add, Text, xs vmTxtResult, Results:\n        Gui Add, Edit, r14 w400 +readonly -TabStop vmResult\n        \n    Gui Tab, RegExReplace\n        Gui Add, Text, , Text to be searched:\n        Gui Add, Edit, r10 w400 vrHaystack gUpdateReplace, \n        Gui Add, Text, Section vrTxtRegEx, Regular Expression:  Option\n        Gui Add, Checkbox, x+2 vrLF gUpdateReplace, ``n\n        Gui Add, Checkbox, x+2 vrCR gUpdateReplace, ``r\n        Gui Add, Checkbox, x+2 vrAnyCRLF gUpdateReplace, ``a\n        Gui Add, Edit, xs r5 w305 vrNeedle gUpdateReplace, \n        Gui Add, Text, vrTxtReplace, Replacement Text:\n        Gui Add, Edit, r2 w305 vrReplacement gUpdatereplace,\n        Gui Add, Text,  vrTxtResult, Results:\n        Gui Add, Edit, r10 w400 +readonly -TabStop vrResult\n        Gui Add, Text, ys xs+320 Section vrTxtStart, Start: (1)\n        Gui Add, Edit, r1 w75 vrStartPos gUpdateReplace, 1\n        Gui Add, Text, xs y+15 vrTxtLimit, Limit: (-1)\n        Gui Add, Edit, r1 w75 vrLimit gUpdateReplace, -1\nreturn\n\nIsInt(str) {\n    if str is integer\n        return true\n    else\n        return false\n}\n\nGuiSize(GuiHwnd, EventInfo, Width, Height){\n  AutoXYWH(\"wh\", \"TabSelection\")\n  AutoXYWH(\"wh0.333\", \"mHaystack\", \"rHaystack\")\n  AutoXYWH(\"y0.3333\", \"mTxtRegEx\", \"rTxtRegEx\", \"mLF\", \"mCR\", \"mAnyCRLF\", \"rLF\", \"rCR\", \"rAnyCRLF\")\n  AutoXYWH(\"xy0.3333\", \"mTxtStart\", \"rTxtStart\", \"mStartPos\", \"rStartPos\", \"rTxtLimit\", \"rLimit\", \"\", \"\")\n  AutoXYWH(\"y0.3333wh0.333\", \"mNeedle\", \"\")\n  AutoXYWH(\"y0.6666\", \"mTxtResult\", \"rTxtResult\")\n  AutoXYWH(\"y0.6666wh0.333\", \"mResult\", \"rResult\")\n  \n  AutoXYWH(\"y0.3333wh0.166\", \"rNeedle\")\n  AutoXYWH(\"y0.5wh0.166\", \"rReplacement\")\n  AutoXYWH(\"y0.5\", \"rTxtReplace\", \"\")\n}\n\nAutoXYWH(DimSize, cList*){   ;https://www.autohotkey.com/boards/viewtopic.php?t=1079\n  Static cInfo := {}\n\n  If (DimSize = \"reset\")\n    Return cInfo := {}\n\n  For i, ctrl in cList {\n    ctrlID := A_Gui \":\" ctrl\n    If !cInfo.hasKey(ctrlID) {\n      ix := iy := iw := ih := 0 \n      GuiControlGet i, %A_Gui%: Pos, %ctrl%\n      MMD := InStr(DimSize, \"*\") ? \"MoveDraw\" : \"Move\"\n      fx := fy := fw := fh := 0\n      For i, dim in (a := StrSplit(RegExReplace(DimSize, \"i)[^xywh]\"))) \n        If !RegExMatch(DimSize, \"i)\" . dim . \"\\s*\\K[\\d.-]+\", f%dim%)\n          f%dim% := 1\n\n      If (InStr(DimSize, \"t\")) {\n        GuiControlGet hWnd, %A_Gui%: hWnd, %ctrl%\n        hParentWnd := DllCall(\"GetParent\", \"Ptr\", hWnd, \"Ptr\")\n        VarSetCapacity(RECT, 16, 0)\n        DllCall(\"GetWindowRect\", \"Ptr\", hParentWnd, \"Ptr\", &RECT)\n        DllCall(\"MapWindowPoints\", \"Ptr\", 0, \"Ptr\", DllCall(\"GetParent\", \"Ptr\", hParentWnd, \"Ptr\"), \"Ptr\", &RECT, \"UInt\", 1)\n        ix := ix - NumGet(RECT, 0, \"Int\")\n        iy := iy - NumGet(RECT, 4, \"Int\")\n      }\n\n      cInfo[ctrlID] := {x:ix, fx:fx, y:iy, fy:fy, w:iw, fw:fw, h:ih, fh:fh, gw:A_GuiWidth, gh:A_GuiHeight, a:a, m:MMD}\n    } Else {\n      dgx := dgw := A_GuiWidth - cInfo[ctrlID].gw, dgy := dgh := A_GuiHeight - cInfo[ctrlID].gh\n      Options := \"\"\n      For i, dim in cInfo[ctrlID][\"a\"]\n        Options .= dim (dg%dim% * cInfo[ctrlID][\"f\" . dim] + cInfo[ctrlID][dim]) A_Space\n      GuiControl, % A_Gui \":\" cInfo[ctrlID].m, % ctrl, % Options\n} } }\n\n;---------------------------------------------------------------------\n; ##captain\n;------------------------------------------------------------------------------\n\ncaptainHOTKEY:\nMouseGetPos,mx,my,mwin,mctrl\nSendMessage,0x84,,(my<<16)|mx,,ahk_id %mwin% ;WM_NCHITTEST=0x84\nIf ErrorLevel=2 ;HTCAPTION\n    ;gosub, captainCHANGE\n  Menu,menu,Show \n\nReturn\ncaptainroll:\nWinGetPos, , , , active_height, A\nif active_height > 30  ; Value needs to be a little larger to allow it to work.\n  WinMove, A, , , , , 25\nelse\n{\n    \n  ;WinGetPos, , , , desk_height, Program Manager\n  ;WinMove, A, , , , , %desk_height%\n  WinRestore, A\n  WinMaximize, A\n}\nreturn\ncaptaincrunch:\nWinGetTitle, OutputVar, A ;Gets the windows title\nwinactivate ; activates the window\nWinRestore, %OutputVar%\n;Change the width and Height of title bar here\nWinMove, %OutputVar%, , 0, 0, 500, 35 ;\nreturn\n\n[]\nMENU:\nMenu,menu,Add,&Copy caption,COPY\nMenu,menu,Add,C&hange caption,captainCHANGE\nMenu,menu,Add, caption c&runch,captaincrunch\nMenu,menu,Add,r&oll caption,captainroll\n\nReturn\n\n\nCOPY:\nWinGetTitle,title,ahk_id %mwin%\nClipboard:=title\nTOOLTIP(\"Caption copied: \" title)\nReturn\n\n;\n;captainhotkey\ncaptainCHANGE:\nWinGetTitle,title,ahk_id %mwin%\nInputBox,newtitle,%applicationname%,%title%:,,,,,,,,%title%\n;If ErrorLevel=0\n  If (newtitle<>title)\n  {\n    WinSetTitle,ahk_id %mwin%,,%newtitle%\n    ids:=ids . mwin \",\"\n    title_%mwin%:=newtitle\n    SetTimer,UPDATE,-1000\n  }  \nReturn\n\nUPDATE:\nLoop,Parse,ids,`,\n{\n  IfWinNotExist,ahk_id %A_LoopField%\n  {\n    StringReplace,ids,ids,% A_LoopField \",\",\n    title_%A_LoopField%=\n    Continue\n  }\n  WinGetTitle,ctitle,ahk_id %A_LoopField%\n  If (ctitle<>title_%A_LoopField%)\n    WinSetTitle,ahk_id %A_LoopField%,,% title_%A_LoopField%\n}\nSetTimer,UPDATE,-1000\nReturn\n\n\nTOOLTIP(tip)\n{\n  ToolTip,%tip%\n  SetTimer,TOOLTIPOFF,-3000\n}\n\nTOOLTIPOFF:\nToolTip,\nReturn\n\nsendclipboard(string := \"\", bool := \"1\"){\n        if (bool = 1){\n             clipboard := string \n                send, ^v \n                return   \n        }\nsend, ^c \nsend, ^v\nreturn \n}\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ SETTINGS ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n\nconfigure(){\n; Ini is created in folder specified to be the home location\n     \nini := \"\"\nini=\n(\n[Settings]\niniroot=value\nkey2=D:/code/test/references ;references\nkey3=D:/code/test/notes ;notes\nkey4=value\nkey5=value\nkey6=value\nkey7=value\nsandboxfolder=D:/code/test/sandbox\nprojectfolder=D:/code/test/projects\nlang=autohotkey\n[counter]\nappruns=1\nkey2=value\nkey3=value\ncaptainhotkey=mButton \n)\ninputbox, rootfolder ,, \"Enter a complete path as root folder `n Right arrow to accept auto-suggest\" ,,,,,,,, D:/code/test\nif (!FileExist(rootfolder))\nfileCreateDir, %rootfolder% \n\nrootpath = %rootfolder%\nFileAppend,%ini%,%rootfolder%\\%applicationname%.ini\nIniWrite, %rootfolder% `;rootfolder, %rootfolder%, Settings, key1\nIniWrite, %rootfolder% `;rootfolder, %rootfolder%\\%applicationname%.ini, settings, iniroot\nMsgBox, % \"0: `n \" rootfolder \"`n created ( with ini file )(hopefully..)\"\n  \nIniWrite, %rootfolder%/references `;references, %A_ScriptFullPath%, settings, key2\nIniWrite, %rootfolder%/references `;references, %rootfolder%\\%applicationname%.ini, settings, key2\nIfnotExist, %rootfolder%/notes\nFileCreateDir, %rootfolder%/references\n\nIniWrite, %rootfolder%/notes `;notes, %A_ScriptFullPath%, settings, key3\nIniWrite, %rootfolder%/notes `;notes, %rootfolder%\\%applicationname%.ini, settings, key3\nIfnotExist, %rootfolder%/notes\nFileCreateDir, %rootfolder%/notes\n_referencedir = %rootfolder%/references\n_notesdir = %rootfolder%/references\n\nFileCreateDir, %rootfolder%/sandbox\nIniWrite,%rootfolder%/sandbox, %A_ScriptFullPath%, settings, sandboxfolder\nIniWrite, %rootfolder%/sandbox, %rootfolder%\\%applicationname%.ini, settings, sandboxfolder\n\n\nFileCreateDir, %rootfolder%/projects\nIniWrite, %rootfolder%/projects, %A_ScriptFullPath%, settings, projectfolder\nIniWrite, %rootfolder%/projects, %rootfolder%\\%applicationname%.ini, settings, projectfolder\n\ninputbox,outvar, \"lang ex: csharp,ahk\" ,,,,,,,, autohotkey\nIniWrite,%outvar%, %A_ScriptFullPath%, settings, lang\nIniWrite, %outvar%, %rootfolder%\\%applicationname%.ini, settings, lang\nIniWrite, 1, %A_ScriptFullPath%, counter, appruns\nIniWrite, 1, %rootfolder%\\%applicationname%.ini, counter, appruns\n\nMsgBox, % \"0: `n will copy globalcoder to rootpath?: `n\" rootpath \"-\"A_ScriptFullPath\nFileCopy, %A_ScriptFullPath%, %rootpath%\nrun(rootpath) \nMsgBox, % \"0: `n delete this file after it exits\" \nExitApp\nreturn\n}\n\nINIREAD:\n;msgbox, % iniroot . \"\\\" applicationname . \".ini\"\nif(!FileExist(\"globalcoder.ini\")) {\n  ini=\n(\n[Settings]\niniroot=value\nkey2=value\nkey3=value\nkey4=value\nkey5=value\nkey6=value\nkey7=value\n[counter]\nappruns=1\nkey2=value\nkey3=value\ncaptainhotkey=mButton \n; Ini is created in folder where first ran\n)\nmsgbox, % \"`n apparently doesnt exist\" applicationname  gcini\n; Ini is created in folder specified to be the home location\nconfigure()\n  return\n}\nif (iniroot = \"value\"){\nconfigure()\n;MsgBox, % \"0: `n will copy globalcoder to rootpath?: `n\" roopath\nif ErrorLevel exitapp\nFileCopy, A_ScriptFullPath, rootpath ,\nrun(rootpath) \n}\n\n; established settings here\nIniRead,iniroot, %A_WorkingDir%\\%applicationname%.ini, Settings, iniroot\nIniRead,appruns, %A_WorkingDir%\\%applicationname%.ini, Counter\nIniRead,captainhotkey,%A_WorkingDir%\\%applicationname%.ini,Counter,captainhotkey\nHotkey,%captainhotkey%,captainHOTKEY,On\n\nIniRead, rootpath, %A_WorkingDir%\\%applicationname%.ini, Settings, iniroot\nIniRead,refpath, %A_WorkingDir%\\%applicationname%.ini, Settings, key2\nIniRead,notepath, %A_WorkingDir%\\%applicationname%.ini, Settings, key3\nIniRead,inilang, %A_WorkingDir%\\%applicationname%.ini, Settings, lang\niniread, runcount, %A_WorkingDir%\\%applicationname%.ini, counter, key1\n;MsgBox, % \"3: `n \" rootpath\n;MsgBox, % \"0: `n \"  refpath \n;MsgBox, % \"1: `n \" notepath\n;MsgBox, % \"2: `n \" inilang\n;MsgBox, % \"2: `n \" runcount\nruncount++\nIniWrite, %runcount%, %A_WorkingDir%\\%applicationname%.ini,counter, appruns\nreturn\n\n^+i::\ngcini := A_WorkingDir . \"\\\" . applicationname . \".ini\"\niniobj := {}\niniobj := ini2array(gcini)\n;print(iniobj)\n\nfor k,v in iniobj\nMsgBox, % \"0: `n \" k \"--\" v\nfor k,v in iniobj.pos\n{\ns .= k \" -- \" v \"`n\"\n;MsgBox, % \"0: `n \" k \" -- \" v \"\"\n} \ns .= \"`n---------\"\nfor k,v in iniobj.globalcoder\n{\ns .= k \" -- \" v \"`n\"\n;MsgBox, % \"0: `n \" k \" -- \" v \"\"\n} \ns .= \"`n---------\"\nfor k,v in iniobj.settings\n{  \ns .= k \" -- \" v \"`n\"\n;MsgBox, % \"0: `n \" k \" -- \" v\n}\ns .= \"`n---------\"\nfor k,v in iniobj.counter\n{\ns .= k \" -- \" v \"`n\"\n;MsgBox, % \"0: `n \" k \" -- \" v\n\ns .= \"`n---------\"\nMsgBox, % \"0: `n \" s\nreturn\n}\n\nexplorer(){\n    WinActive(\"ahk_exe explorer.exe\")\n        WinWaitActive, ahk_exe explorer.exe\n        WinActivate, ahk_exe explorer.exe\n        send, {f4}\n        send, ^a \n        send, {delete}\n        send, %frontproject%\n}\n\nreplaceFile2(File, Content){\n    FileDelete, %File%\n    FileAppend, %Content%, %File%\n}\nReturn\n\nINI2Array(iniFile){\n    ;MsgBox, % \"0: `n \" inifile\n    iniarray := []\n    IniRead, SectionNames, % iniFile\n    \n    for i, Sec in StrSplit(SectionNames, \"`n\")\n    {   \n        IniRead, SecLines, % iniFile, % Sec\n        for k, line in StrSplit(SecLines, \"`n\")\n        {\n                IniRead, Val , % iniFile, % Sec, % Key := substr(line, 1, instr(line,\"=\")-1)\n                iniarray[Sec,Key] := Val\n        }\n    }\n    return iniarray\n}\n\nini2( filename = 0, updatemode = 0 ){\nLocal s, c, p, key, k, write\n\n   if not filename\n   {\n      filename := 2 . SubStr( A_ScriptName, 1, -3 ) . \"ini\"\n   }\n\n\n    ;FileRead, OutputVar, Filename\n    ;Loop, Parse, InputVar [, Delimiters|CSV, OmitChars]\n   FileRead, s, %filename%\n   Loop, Parse, s, `n`r, %A_Space%%A_Tab%\n   {\n      c := SubStr(A_LoopField, 1, 1)\n      if (c=\"[\")\n      {\n\n         key := SubStr(A_LoopField, 2, -1)\n         ;MsgBox, % \"0: `n \" key\n      }\n      else if (c=\";\")\n         continue\n      else {\n         p := InStr(A_LoopField, \"=\")\n         if p {\n         k := SubStr(A_LoopField, 1, p-1)\n         ;MsgBox, % \"1: `n pk: \" p \"-\" k\n       if updatemode=0\n          %key%%k% := SubStr(A_LoopField, p+1)\n          test := %key%%k% := SubStr(A_LoopField, p+1)\n           ; MsgBox, % \"2: `n \" test\n       if updatemode=1\n       {\n          write := %key%%k%\n         ; MsgBox, % \"3: `n key k filename write: `n\" key k filename write\n          IniWrite, %write%, %filename%, %key%, %k%    \n       }\n         }\n      }\n   }\n}\n\nTRAYMENU:\nMenu,Tray,NoStandard\nMenu,Tray,Add,%applicationname% Ref, SETTINGSref\nMenu,Tray,Add,\nMenu,Tray,Add, Regexer, settingsregexer\nMenu,Tray,Add, Recent Files, settingsrecent\nMenu,Tray,Add, Window Spy, settingswinspy\nMenu,Tray,Add,&Settings...,SETTINGS\nMenu,Tray,Add,\nMenu,Tray,Add,&Reload...,Settingsreload\nMenu,Tray,Add,&Listvars...,Settingslistvars\nMenu,Tray,Add,&About...,ABOUT\nMenu,Tray,Add,E&xit,EXIT\nmenu, tray, Click, 1 \nMenu,Tray,Default,%applicationname% Ref\nMenu,Tray,Tip,%applicationname%\nReturn\n\n\n\n\n\n\n\n\nSETTINGS:\n;Hotkey,%hotkey%,HOTKEY,Off\nGui,Destroy\nFileRead,ini,%applicationname%.ini\nGui,Font,Courier New\nGui,Add,Edit,Vnewini -Wrap W400,%ini%\nGui,Font\nGui,Add,Button,GSETTINGSOK Default W75,&OK\nGui,Add,Button,GSETTINGSCANCEL x+5 W75,&Cancel\nGui,Show ;%applicationname% ;Settings\nReturn\n\nsettingswinspy:\nrun(A_ProgramFiles . \"\\AutoHotkey\\windowspy.ahk\")\nreturn\n\nsettingslistvars:\nlistvars\nreturn\n\nsettingsreload:\nreload\nreturn\n\nsettingsregexer:\n;REGEXER()\nReturn\n\nSETTINGSOK:\nGui,Submit\nFileDelete,%applicationname%.ini\nFileAppend,%newini%,%applicationname%.ini\nReturn\n\n\n;GuiEscape:\n;GuiClose:\n\nSETTINGSCANCEL:\nGui,Destroy\nHotkey,%captainhotkey%,captainHOTKEY,On\nReturn\n\n\nEXIT:\nExitApp\n\nsettingsref:\nGui,98:Destroy\nGui,98:Margin,20,20\nGui,98:Add,Picture,xm Icon1,%applicationname%.exe\nGui,98:Font,Bold\n;Gui,98:Add,Text,x+10 yp+10,%applicationname% v1.0\nGui,98:Font\nGui,98:Add,Text,y+10,Copy and change a window's title\nGui,98:Add,Text,y+5,- Use the middle mousebutton on a window's caption\nGui,98:Add,Text,y+5,- Change hotkey using Settings in the tray menu\nGui,98:Add,Picture,xm y+20 Icon5,%applicationname%.exe\nGui,98:Font,Bold\n;Gui,98:Add,Text,x+10 yp+10,1 Hour Software by Skrommel\nGui,98:Font\nGui,98:Add,Text,y+10,For more tools, information and donations, please visit \nGui,98:Font,CBlue Underline\n;Gui,98:Add,Text,y+5 G1HOURSOFTWARE,www.1HourSoftware.com\nGui,98:Font\nGui,98:Add,Picture,xm y+20 Icon7,%applicationname%.exe\nGui,98:Font,Bold\n;Gui,98:Add,Text,x+10 yp+10,DonationCoder\nGui,98:Font\nGui,98:Add,Text,y+10,Please support the contributors at\nGui,98:Font,CBlue Underline\n;Gui,98:Add,Text,y+5 GDONATIONCODER,www.DonationCoder.com\nGui,98:Font\nGui,98:Add,Picture,xm y+20 Icon6,%applicationname%.exe\nGui,98:Font,Bold\n;Gui,98:Add,Text,x+10 yp+10,AutoHotkey\nGui,98:Font\nGui,98:Add,Text,y+10,This tool was made using the powerful\nGui,98:Font,CBlue Underline\n;Gui,98:Add,Text,y+5 GAUTOHOTKEY,www.AutoHotkey.com\nGui,98:Font\nGui,98:+AlwaysOnTop\nGui,98:Show,,%applicationname% About\nhCurs:=DllCall(\"LoadCursor\",\"UInt\",NULL,\"Int\",32649,\"UInt\") ;IDC_HAND\nOnMessage(0x200,\"WM_MOUSEMOVE\") \nReturn\n\n\n98GuiClose:\n  Gui,98:Destroy\n  OnMessage(0x200,\"\")\n  DllCall(\"DestroyCursor\",\"Uint\",hkCur)\nReturn\n\n\nABOUT:\nGui,99:Destroy\nGui,99:Margin,20,20\nGui,99:Add,Picture,xm Icon1,%applicationname%.exe\nGui,99:Font,Bold\nGui,99:Add,Text,x+10 yp+10,%applicationname% v1.2\nGui,99:Font\nGui,99:Add,Text,y+10,Copy and change a window's title\nGui,99:Add,Text,y+5,- Use the middle mousebutton on a window's caption\nGui,99:Add,Text,y+5,- Change hotkey using Settings in the tray menu\n\nGui,99:Add,Picture,xm y+20 Icon5,%applicationname%.exe\nGui,99:Font,Bold\nGui,99:Add,Text,x+10 yp+10,1 Hour Software by Skrommel\nGui,99:Font\nGui,99:Add,Text,y+10,For more tools, information and donations, please visit \nGui,99:Font,CBlue Underline\n;Gui,99:Add,Text,y+5 G1HOURSOFTWARE,www.1HourSoftware.com\nGui,99:Font\n\nGui,99:Add,Picture,xm y+20 Icon7,%applicationname%.exe\nGui,99:Font,Bold\n;Gui,99:Add,Text,x+10 yp+10,DonationCoder\nGui,99:Font\nGui,99:Add,Text,y+10,Please support the contributors at\nGui,99:Font,CBlue Underline\n;Gui,99:Add,Text,y+5 GDONATIONCODER,www.DonationCoder.com\nGui,99:Font\n\nGui,99:Add,Picture,xm y+20 Icon6,%applicationname%.exe\nGui,99:Font,Bold\n;Gui,99:Add,Text,x+10 yp+10,AutoHotkey\nGui,99:Font\nGui,99:Add,Text,y+10,This tool was made using the powerful\nGui,99:Font,CBlue Underline\n;Gui,99:Add,Text,y+5 GAUTOHOTKEY,www.AutoHotkey.com\nGui,99:Font\n\nGui,99:+AlwaysOnTop\nGui,99:Show,,%applicationname% About\nhCurs:=DllCall(\"LoadCursor\",\"UInt\",NULL,\"Int\",32649,\"UInt\") ;IDC_HAND\nOnMessage(0x200,\"WM_MOUSEMOVE\") \nReturn\n\n\n99GuiClose:\n  Gui,99:Destroy\n  OnMessage(0x200,\"\")\n  DllCall(\"DestroyCursor\",\"Uint\",hkCur)\nReturn\n;run(savepath . \".png\")\n/*  pToken := Gdip_Startup()\n    WinGet, hwnd, ID, A\n    msgbox, % hwnd \"or: \" ID\n    pBitmap := Gdip_BitmapFromHWND(hwnd)\n    Gdip_SaveBitmapToFile(pBitmap, savepath)\n    Gdip_DisposeImage(pBitmap)\n    Gdip_Shutdown(pToken)\n    */\n/*run(savepath){\n    return frontproject := savepath . \".png\"\n    }\n    */\n!e::edit\n^!esc::exitapp\n^esc::reload\n/*\nlv(folder) {\n    Gui, Add, ListView, background000000 cFFFFFF -Hdr r20 w200 h200 gMyListView2 AltSubmit, Name\n        Loop, Files, % folder \"\\*\", D\n        {\n            LV_Add(\"\", A_LoopFileName, A_LoopFileSizeKB)\n            LV_ModifyCol()  ; Auto-size each column to fit its contents.\n            LV_ModifyCol(2, \"Integer\")  ; For sorting purposes, indicate that column 2 is an integer.\n            FolderList .= A_LoopFileName . \"`n\"\n        }\n    Gui, Show\n    return \n\nGuiContextMenu2:  ; Launched in response to a right-click or press of the Apps key.\nif (A_GuiControl != \"MyListView2\")  ; This check is optional. It displays the menu only for clicks inside the ListView.\n    return\n; Show the menu at the provided coordinates, A_GuiX and A_GuiY. These should be used\n; because they provide correct coordinates even if the user pressed the Apps key:\nMenu, MyContextMenu, Show, %A_GuiX%, %A_GuiY%\nreturn\n\nMyListView2:\nif (A_GuiEvent = \"DoubleClick\")  ; There are many other possible values the script can check.\n{\n    LV_GetText(FileName, A_EventInfo, 1) ; Get the text of the first field.\n    LV_GetText(FileDir, A_EventInfo, 2)  ; Get the text of the second field.\n    Run %Dir%\\%FileName%,, UseErrorLevel\n    gui, destroy\n    ;Run %FileDir%\\%FileName%,, UseErrorLevel\n    if ErrorLevel\n        MsgBox % \"Could not open \" %FileDir% \"\\\" %FileName%\n}\nreturn\n}\n*/\n\n;======================================================//regexer\nvalidatepath(path :=\"\"){\n    static counter := ++1\nif (path = \"\"){\npath := frontproject\nfile1 := frontproject . \"\\\" counter . \".txt\"\nFileAppend, % counter, % file1\n}\n\ndir_folder := path\nf1:= ;\"C:\\test\\testsub\" ; \\testsub.txt\"\nSplitPath,f1,name, dir, ext, name_no_ext, drive\nstringmid,c,f1,2,2\nif (c=\":\\\") and (ext!=\"\")\n  msgbox,%f1%`nIt's a file\n  else\n  msgbox, % \"its a dir\" dir . \"\\\" name \"--ext:\" ext \"--drive:\" drive\nreturn\n}\n\nwritefile(input := \"\", dir_path:=\"\",switch:=0){\nstatic enum := 0\n    if (input = \"\"){\n  inputbox, text, Note,Write Note:,,300,100\n    }\n    \n    if (switch =1){\n        FileSelectFolder, dir_path, , 3\n        if dir_path =\n    MsgBox, You didn't select a folder.\nelse\n    MsgBox, You selected folder \"%dir_path%\".\n\ndir_path := RegExReplace(dir_path, \"\\\\$\")  ; Removes the trailing backslash, if present.\n\n    }\n\n    if (dir_path =\"\"){\n        dir_path := frontproject\n    } else\n    {\n        frontproject := dir_path\n    }\n\n    text := input\n  ;fileappend, %current% - %text%\\`n, % dir_path . current \".txt\"\n\n  frontfile := frontproject . \"writtenfile\" ++enum \".txt\"\n  fileappend, %text%\\`n, % frontfile ;dir_path . current \".txt\"\n  run(frontproject)\n  msgbox, % frontfile\nreturn frontfile\n}\n\n/*front(filename,dir){\n;StringSplit, OutputArray, InputVar , Delimiters, OmitChars\n\n    InputBox, name, \"name,path\"\n random, ranVar, 1, 100000000\n msgbox % ranvar\n ranvar := StrSplit(ranvar, \",\", %a_space% \" `t\")\n\nTestString := \"This is a test.\"\nStringSplit, word_array, TestString, %A_Space%, .  ; Omits periods.\nMsgBox, The 4th word is %word_array4%.\n\ncolors := \"red,green,blue\"\nfor index, color in StrSplit(colors, \",\")\n    MsgBox % \"Color number \" index \" is \" color\n\n    return global frontfile, frontproject\n}*/\n\ngetCode(Order) { ; to fill in the second parameter of Template\n    return repeat(1, Order) \",\" repeat(2, Order) \",\" repeat(3, Order)\n     . \",\" repeat(4, Order) \",\" repeat(5, Order) \",\" repeat(6, Order)\n}\n\nrepeat(str, n) { ; return str repeated n*n times\n    Result := \"\"\n    Loop, % n * n\n        Result .= str\n    return Result\n}\n\nfun(){\n    global myfun\n    myfun:=new fun()\n}\n\nclass fun{\n    __new(){\n        return this\n    }\n    fun(){\n        \n    }\n}\n\nStrAppendEachLine(str, appendix){\n \n    return, RegExReplace(str, \"m`n)^(.+?)(?<!\" appendix \")$\", \"$1\" appendix)\n}\nfileAppendEachLine(filename, appendix){\n    hmm := FileOpen(filename, \"r`n\").read()\n    FileOpen(filename, \"w`n\").write(RegExReplace(hmm, \"m`n)^(.+?)(?<!\" appendix \")$\", \"$1\" appendix))\n    return\n}\n\nz_stringreplace(string, find, rep ){\n    MsgBox, % \"0: `n \" find rep\n   ; StringReplace, r, s, - , ||| , All\n    StringReplace, r, s, %find% , %rep% , All\nreturn r\n}\n\nremovespace(ans){\n\n;ReplacedStr := StrReplace(Haystack, Needle , ReplaceText, OutputVarCount, Limit)\n;Fronttext := clipboard\nNewStr := StrReplace(ans, A_Space, \"_\")\n;ReplacedStr := StrReplace(Haystack, Needle , ReplaceText, OutputVarCount, Limit)\nclipboard := newstr\nreturn newStr \n}\n\nchrome_group2(num := 0){\nif (num = 0)\n{\nstatic count := ++0\n}\nWinActivate, ahk_exe chrome.exe\nWinWaitActive, ahk_exe chrome.exe\nsleep, 200\nsendevent, !g\nreturn\n}\n\nchrome_label:\nWinActivate, dkz\nscan := new Shinsimagescanclass(dkz)\n;scan.pixelregion()\n;0xF6F6F6\n;DD4D11\nif (scan.Pixel(0x8AB4F8,,x,y)) {\n    tooltip % \"Found a pixel at \" x \",\" y\n    mousemove,  x , y  \n    MouseClick, r, X, Y, 1, \n}\nreturn\nff_group(){\nWinActivate, dkz1 \nWinWaitActive, dkz1\n;M(\"go\")\nsend, !g\n}\nreturn\n\ngetlog(){\n  ;  Loop, Read, InputFile [, OutputFile]\nLoop, Read, A_ScriptDir\\logs\\q-google.txt , file\nfor k,v in file\nmsgbox % A_Index is A_LoopField\n}\ngetwin() {\n    global log\n    FormatTime, time, , MMdd-HH-mm\n    WinGetActiveTitle, Title\n    WinGet, win_proc, ProcessName, A\n    WinGet, uniq_id, ID, A\n    ; ASCII 30 octal 036 Record Separator\n    if %uniq_id%\n    FileAppend, \u001e%A_Tab%%time%%A_Tab%%uniq_id%%A_Tab%%win_proc%%A_Tab%%Title%`n, *%log%\n}\ntimeSinceLastCall(id=1, reset=0){\n   global t\n   static arr:=array()\n   if (reset=1)\n   {\n      ((id=0) ? arr:=[] : (arr[id, 0]:=arr[id, 1]:=\"\", arr[id, 2]:=0))\n      return\n   }\n   arr[id, 2]:=!arr[id, 2]\n   arr[id, arr[id, 2]]:=A_TickCount  \n   ;msgbox % \"abs var:\" abs\n   return global abs(arr[id,1]-arr[id,0])\n}\ntarget(c){\n    send, !d\n    send, ^a\n    send, {delete}\nreturn\n}\ntarget2(){\nWinGet, hWnd, ID, A\nhCtl := \"\"\nif !hCtl ;check for treeview e.g. Win 7\n{\nControlGet, hCtl, Hwnd, , SysTreeView321, ahk_id %hWnd%\nif hCtl\nAcc := Acc_Get(\"Object\", \"outline\", 0, \"ahk_id \" hCtl)\n}\nmsgbox % oAcc.accChildCount\nLoop, % oAcc.accChildCount\nfor %A_Index% in % oAcc.accChildCount\n{\n    MsgBox, 4,, Control #%A_Index% is \"%A_LoopField%\". Continue?\n    IfMsgBox, No\n        break\n}\nLoop, % oAcc.accChildCount\nif (oAcc.accName(A_Index) = \"Desktop\")\nif (1, oAcc.accDoDefaultAction(A_Index))\nbreak\nLoop, % oAcc.accChildCount\nreturn\n}\nfs(){\napp := \"z:/\"\nrun explorer.exe \nWinWaitActive ahk_exe explorer.exe  \nsend, {f4} \nsend, ^a\nsend, %app%\nsend, {enter}\nreturn\n}\n\nGetTime(){\n    FormatTime, OutputVar\n    MsgBox, The time is %OutputVar%\n}\nGetTime2(){\n    FormatTime, OutputVar\n    Return OutputVar   ;value returned to calling variable\n}\nGetKeyHistoryText(){\n    active_window := WinActive(\"A\")\n    dhw := A_DetectHiddenWindows\n    DetectHiddenWindows, On\n    Process, Exist\n    hwnd := WinExist(\"ahk_class AutoHotkey ahk_pid \" . ErrorLevel)\n    was_active  := (hwnd=active_window)\n    was_visible := was_active || DllCall(\"IsWindowVisible\", \"UInt\", hwnd)\n    if (!was_active)\n    {   ; There seems to be no way to prevent KeyHistory from activating the window,\n        ; so block user input to prevent accidental somethings.\n        BlockInput, On\n        if (!was_visible) {\n            ; Seemed to work on XP, but not Vista:\n            ;WinGetPos, x, y         ; remember position\n            ;WinMove, -10000, -10000 ; should hopefully keep it out of the way...\n            ; Works, but shows an empty frame on Vista:\n            ;WinSet, Region, W0 H0 0-0\n            \n            WinGet, was_tp, Transparent\n            WinSet, Transparent, 0\n        }\n    }\n    KeyHistory\n    ; Get the variable list text.\n    ControlGetText, text, Edit1\n    if (!was_active)\n    {   ; un-block input\n        BlockInput, Off\n        if (!was_visible) {\n            WinHide             ; restore invisibility\n            ;WinMove, %x%, %y%   ; restore position\n            ;WinSet, Region\n            WinSet, Transparent, % (was_tp=\"\") ? \"OFF\" : was_tp\n        }\n    \n        ; Focus isn't always restored to the previously active window, so do this.\n        WinActivate, ahk_id %active_window%\n    }\n    DetectHiddenWindows, %dhw%\n    return text\n}\nCount(String, Needle, Type=\"\", SubPattern=\"\"){\n    Global\n    Local f := 1, n := 0, Output := \"\"\n    If (Type = \"\") {\n        StringReplace, String, String, %Needle%, , UseErrorLevel\n        n := ErrorLevel\n    } Else If Type {\n\n            WinSet, Transparent, % (was_tp=\"\") ? \"OFF\" : wa        While (f := RegExMatch(String, Needle, Output, f + StrLen(Output)))\n            n += 1, %Type%%n% := Output%SubPattern%\n        %Type% := n\n    } Else\n        RegExReplace(String, Needle, \"\", n)\n    Return n\n}\nss(  ){\n;global c = c++\n;msgbox % c\n;global c := c++\nrandom, rand, 1,10000000000\n;FileSelectFile, OutputVar [, Options, RootDir[\\DefaultFilename], Prompt, Filter]\n;global c := c + 1\nfrontproject = P:/app/(((snips)))\nFilePath = %frontproject%\\%rand%\nfrontfile = %filepath%.png\n\nif FileExist( frontfile . \".png\"){\n    tooltip, it do, ,,1\nreturn global frontfile, global frontproject , global c := c + 1\n\n}\n\ntooltip, created, ,,1, 1000\n  SplitPath, FilePath, FileName,, FileExt, FileNameNoExt\nif (FileExt != \"png\")   ; Appends the .png file extension if it is not already present \n  FilePath .= \".png\", FileName .= \".png\"\nWinWaitClose, Save Screenshot\nSleep, 200\npToken := Gdip_Startup()\npBitmap := Gdip_BitmapFromScreen(\"0|0|\" A_ScreenWidth \"|\" A_ScreenHeight)\nGdip_SaveBitmapToFile(pBitmap, FilePath)\nGdip_DisposeImage(pBitmap)\nGdip_Shutdown(pToken)\n;msgbox % saved to filepath\nmsgbox % frontproject \"-\" frontfile . \"frontproject - frontfiles\"\n;msgbox % c\nreturn global frontfile, global frontproject , global c := c + 1\n} \npdrive(){\n\n    send, !d\n    ;send, ^a\n    ;send, {del}\n    send, p:\n    send, {enter}\n    return\n}\nCenterImgSrchCoords(File, ByRef CoordX, ByRef CoordY){\n    static LoadedPic\n    LastEL := ErrorLevel\n    Gui, Pict:Add, Pic, vLoadedPic, % RegExReplace(File, \"^(\\*\\w+\\s)+\")\n    GuiControlGet, LoadedPic, Pict:Pos\n    Gui, Pict:Destroy\n    CoordX += LoadedPicW // 2\n    CoordY += LoadedPicH // 2\n    ErrorLevel := LastEL\n}\ngoexplore(){\n    WinActive(\"ahk_exe explorer.exe\")\n        WinWaitActive, ahk_exe explorer.exe\n        WinActivate, ahk_exe explorer.exe\n        send, !d\n        send, ^a \n        send, {delete}\n        send, %frontproject%\n}\nlistFiles(Folder) { ; list the file directory incl. subdirs\n    List := \"\"\n    Loop, Files, %Folder%\\*.*, R\n        if (A_LoopFileExt = \"lnk\") {\n            ; replace lnk-files with paths to linked target\n            FileGetShortCut, %A_LoopFileLongPath%, linkedTarget\n            List .= linkedTarget \"`r`n\"\n        } else\n            List .= A_LoopFileFullPath \"`r`n\"\n    return List\n}\nsearchahk(answer,outputdir){\nmsgbox % outputdir\n    SetWorkingDir, outputdir\n   ; FileSelectFolder, Outputdir , *StartingFolder, , Prompt\n    msgbox % outputdir\n    SetWorkingDir, outputdir\nmsgbox,% findstring(\"%answer%\", outputdir \"/*.ahk\")\n\n/*findstring(string, filepattern = \"*.*\", rec = 0, case = 0){\n    len := strlen(string)\n    if (len = 0)\n        return\n    loop,% filepattern, 0,% rec\n    {\n        fileread, x,% a_loopfilefullpath\n        if (pos := instr(x, string, case)){\n            positions .= a_loopfilefullpath \"|\" pos\n            while(pos := instr(x, string, case, pos+len))\n                positions .= \"|\" pos\n            positions .= \"`n\"\n        }\n    }\n    return, positions\n*/\n\n\n; edit: changed pattern to filepattern to reduce \"confusion\".\nreturn\n\n\n^!Lbutton::\nhwnd := WinExist(\"A\")\nMsgBox, % \"0: `n \" %hwnd%\nreturn\n\n\n\n#include <winInfo> ; .ahk\n\n^w::\nmsgbox, % test := wininfo(\"A\")\nreturn\n\n\n\n\n\n\n\nsend2(string, Msg:=\"\"){ ;send within console\n  WinActivate, GitBash\n  send, {backspace 5} ;ensures blank terminal line before inputting to terminal  via clipboard\n  clipboard = %string% ;sets clipboard to function input (string) variable\n  ;MsgBox, % \"message: \" . Msg . \"Command placed in clipboard :  `n \" string \" `n paste results in git bash then press ok to continue. \" \n  send, ^v ; paste clipboard\n  send, {enter}\n}\n\n\n\n\n\n\n;-------------------------------------------------\n; Window dragging via alt+lbutton                -\n; Author: Lasmori (email AT lasmori D0T com)     -\n;-------------------------------------------------\n!LButton::\nCoordMode, Mouse, Relative\nMouseGetPos, cur_win_x, cur_win_y, window_id\nWinGet, window_minmax, MinMax, ahk_id %window_id%\n\n; Return if the window is maximized or minimized\nif window_minmax <> 0\n{\n  return\n}\n\nCoordMode, Mouse, Screen\nSetWinDelay, 0\n\nloop\n{\n  ; exit the loop if the left mouse button was released\n  if !GetKeyState(\"LButton\", \"P\")\n  {\n    break\n  }\n\n  ; move the window based on cursor position\n  MouseGetPos, cur_x, cur_y\n  WinMove, ahk_id %window_id%,, (cur_x - cur_win_x), (cur_y - cur_win_y)\n}\n\nreturn\n;-------------------------------------------------\n\n\n\n\n\n\nf24 & `::\nGlobalMode := !GlobalMode\n\nMsgBox, % \"`n GlobalMode Status \" globalmode\nreturn\n\n\n\n#if (globalmode := 1) \n{\n\n\n\n\n:*:gtest::\ngtest(){\n\nfor k,v in g {\nMsgBox, % \"0: `n \" v\n}\n\n;InputBox, answer , Is anybody out there?, What is your name?, , , , , , , , Your Name\n;MsgBox % \"Your name \" ((answer < \"georgf\") ? (\"is stupid.\") : ( ((answer < \"normap\") ? (\"ROCKsORZ!\") : ( ((answer < \"tog\") ? (\"is totally wimpy.\") : (\"is nothing special.\"))))))\n}\nreturn\n\n\nbackspaceAg(gcomment)\n{\n\n    WordLength := strlen(gcomment)\n    send, {backspace WordLength}\n}\n\n;g commands send the hotstrings into one function that reroute it based on editor then save\n; the 'input' as a g.editer.session object which basically acts as a timeline \n:*:todo:: ; I could have one \n:*:gcomwrap::\n:*:gcomm::\nWinGet,Process,ProcessName,A\n\nSwitch Process\n{\n\n  Case \"sublime_text.exe\":\n    CommentBlock:=\"' *************************************************************************`n\"\n    . \"' Autho:`n\"\n    . \"' Creation date:`n\"\n    . \"' Description:`n\"\n    . \"' ***************************************************************************`n\"\n  Case \"devenv.exe\":\n    CommentBlock:=\"//# ===========================================================================`n\"\n    . \"//# Author:`n\"\n    . \"//# Creation date:`n\"\n    . \"//# Description:`n\"\n    . \"//# ===========================================================================`n\"\n    Case \"Code.exe\":\n    CommentBlock:=\"Rem ======================================================================`n\"\n    . \"Rem Author:`n\"\n    . \"Rem Creation date:`n\"\n    . \"Rem Description:`n\"\n    . \"Rem ======================================================================`n\"\n  Case \"scite.exe\":\n    CommentBlock:=\"; ===========================================================================`n\"\n    . \"; Author:`n\"\n    . \"; Creation date:`n\"\n    . \"; Description:`n\"\n    . \"; ===========================================================================`n\"\n  Case \"ssms.exe\":\n    CommentBlock:=\"-- ===========================================================================`n\"\n    . \"-- Author:`n\"\n    . \"-- Creation date:`n\"\n    . \"-- Description:`n\"\n    . \"-- ===========================================================================`n\"\n  Default:\n    MsgBox,4144,Error,Active window is not a supported program\n    Return\n}\n\nsend(CommentBlock)\n\nreturn\n\n\n    f1::\n    BoundGivePar := Func(\"GivePar\").Bind(\"First\", \"Test one\")\nBoundGivePar2 := Func(\"GivePar\").Bind(\"Second\", \"Test two\")\n\n; Create the menu and show it:\nMenu MyMenu, Add, Give parameters, % BoundGivePar\nMenu MyMenu, Add, Give parameters2, % BoundGivePar2\nMenu MyMenu, Show\n\n; Definition of custom function GivePar:\nGivePar(a, b, ItemName, ItemPos, MenuName)\n{\n    MsgBox % \"a:`t`t\" a \"`n\"\n           . \"b:`t`t\" b \"`n\"\n           . \"ItemName:`t\" ItemName \"`n\"\n           . \"ItemPos:`t`t\" ItemPos \"`n\"\n           . \"MenuName:`t\" MenuName\n           return\n       }\n \nf24 & g::\n;Gui, Add, Button, gCtrlEvent vButton1, Button 1\n;Gui, Add, Button, gCtrlEvent vButton2, Button 2\nGui, Add, Button, gGoButton, Go Button\nGui, Add, Edit, w300 hvEditField, Example text\nGui, Show,, Functions instead of labels\n\nCtrlEvent(CtrlHwnd:=0, GuiEvent:=\"\", EventInfo:=\"\", ErrLvl:=\"\") {\n    GuiControlGet, controlName, Name, %CtrlHwnd%\n    MsgBox, %controlName% has been clicked!\n}\nGoButton(CtrlHwnd:=0, GuiEvent:=\"\", EventInfo:=\"\", ErrLvl:=\"\") {\n    GuiControlGet, EditField\n    MsgBox, Go has been clicked! The content of the edit field is \"%EditField%\"!\n}\n\nGuiClose(hWnd) {\n    WinGetTitle, windowTitle, ahk_id %hWnd%\n    MsgBox, The Gui with title \"%windowTitle%\" has been closed!\n    ExitApp\n}\nreturn\n\n\nf24 & F1::\nCoordMode Menu, Screen\nGetCaret(X, Y,, H)\nMenu, MyMenu, Add, Menu Item 1, MenuHandler\nMenu, MyMenu, Add, Menu Item 2, MenuHandler\nMenu, MyMenu, Add, Menu Item 3, MenuHandler\n;Menu, MyMenu, Show, % X, % Y + H\ngui, menu, mymenu\n\n; Create the main Edit control and display the window:\nGui, +Resize  ; Make the window resizable.\nGui, Add, Edit, vMainEdit WantTab W300 R20\nGui, Add, Button, gGoButton1, Go Button\nGui, Show, ,% X, % Y + H, Functions instead of labels\nCurrentFileName := \"\"  ; Indicate that there is no current file.\n\nmenuhandler:\nGui, +Resize  ; Make the window resizable.\nGui, Add, Edit, \"%vMainEdit%\" WantTab W300 R20\nGui, Add, Button, gGoButton1, Go Button\nGui, Show,% X, % Y + H, Functions instead of labels\nCurrentFileName := \"\"  ; Indicate that there is no current fi\nMsgBox, % \"0: `n \" mymenu\nreturn\n\n/*GoButton(CtrlHwnd:=0, GuiEvent:=\"\", EventInfo:=\"\", ErrLvl:=\"\") {\n    GuiControlGet, mainedit1\n    MsgBox, Go has been clicked! The content of the edit field is \"%mainedit1%\"!\n}\n\n*/\n/*GuiClose(hWnd) {\n    WinGetTitle, windowTitle, ahk_id %hWnd%\n    MsgBox, The Gui with title \"%windowTitle%\" has been closed!\n    ExitApp\n}\n*/\n\n\n\n\n;Gui, Add, Button, gCtrlEvent vButton1, Button 1\n;;Gui, Add, Button, gCtrlEvent vButton2, Button 2\n;Gui, Add, Button, gGoButton, Go Button\n;Gui, Add, Edit, w300 hvEditField, Example text\n;Gui, Show,, Functions instead of labels\n/*  CtrlEvent(CtrlHwnd:=0, GuiEvent:=\"\", EventInfo:=\"\", ErrLvl:=\"\") {\n    GuiControlGet, controlName, Name, %CtrlHwnd%\n    MsgBox, %controlName% has been clicked!\n \n    */ ;}\n\n/*\n; Bind parameters to the function and return BoundFunc objects:\nBoundGivePar := Func(\"GivePar\").Bind(\"First\", \"Test one\")\nBoundGivePar2 := Func(\"GivePar\").Bind(\"Second\", \"Test two\")\n\n; Create the menu and show it:\nMenu MyMenu, Add, Give parameters, % BoundGivePar\nMenu MyMenu, Add, Give parameters2, % BoundGivePar2\nMenu MyMenu, Show\n\n; Definition of custom function GivePar:\nGivePar(a, b, ItemName, ItemPos, MenuName)\n{\n    MsgBox % \"a:`t`t\" a \"`n\"\n           . \"b:`t`t\" b \"`n\"\n           . \"ItemName:`t\" ItemName \"`n\"\n           . \"ItemPos:`t`t\" ItemPos \"`n\"\n           . \"MenuName:`t\" MenuName\n}\n*/\n;-------------------------------------------------\n; Window dragging via alt+lbutton                -\n; Author: Lasmori (email AT lasmori D0T com)     -\n;-------------------------------------------------\n~!RButton::\n        original_win_delay := A_Win_Delay\n\nCoordMode, Mouse, Relative\nMouseGetPos, cur_win_x, cur_win_y, window_id\nWinGet, window_minmax, MinMax, ahk_id %window_id%\n\n; Return if the window is maximized or minimized\nif window_minmax <> 0 \n{\n  return\n}\n\nCoordMode, Mouse, Screen\nSetWinDelay, 0\n\nloop\n{\n  ; exit the loop if the left mouse button was released\n  GetKeyState, lbutton_state, LButton, P\n  if lbutton_state = U\n  {\n    break\n  }\n\n  MouseGetPos, cur_x, cur_y\n  window_x := cur_x - cur_win_x\n  window_y := cur_y - cur_win_y\n  WinMove, ahk_id %window_id%,, %window_x%, %window_y%\n}\n\nSetWinDelay, %original_win_delay%\n\n\n;-------------------------------------------------\nreturn\n}\n#if\n\n\nif (A_PriorHotkey = \"/\" || A_ThisHotkey = \"/\")\n;{\n    ;Input, [ OutputVar, Options, EndKeys, MatchList]\nInput, UserInput, V T5 L10 C, {enter}.{esc}{tab}, gclass,otoh,fl,ahk,ca\nswitch ErrorLevel\n;MenuHandler:\n\n{\ncase \"Max\":\n    MsgBox, You entered \"%UserInput%\", which is the maximum length of text.\n    return\ncase \"Timeout\":\n    MsgBox, You entered \"%UserInput%\" at which time the input timed out.\n    return\ncase \"NewInput\":\n    return\ndefault:\n    if InStr(ErrorLevel, \"EndKey:;\")\n    {\n        string := userinput\n        resultstring :=  send(string)\n        MsgBox, % \"You entered \" resultstring ;%UserInput%\" and terminated the input with %ErrorLevel%.\n        return ;resultstring := clipsendw(string)\n\n    }\n}\nswitch UserInput\n{\ncase \"gcl\":   send, ^V ;clipsendw(resultstring) ;Send, {backspace 4}by the way\ncase \"otoh\":  Send, {backspace 5}on the other hand\ncase \"fl\":    Send, {backspace 3}Florida\ncase \"ca\":    Send, {backspace 3}California\ncase \"ahk\":   Run, https://www.autohotkey.com\n}\nreturn\n\n    ; do something\n\n;Here's the GetCaret Function:\n\nGetCaret(ByRef X:=\"\", ByRef Y:=\"\", ByRef W:=\"\", ByRef H:=\"\") {\n\n    ; UIA caret\n    static IUIA := ComObjCreate(\"{ff48dba4-60ef-4201-aa87-54103eef594e}\", \"{30cbe57d-d9d0-452a-ab13-7ac5ac4825ee}\")\n    ; GetFocusedElement\n    DllCall(NumGet(NumGet(IUIA+0)+8*A_PtrSize), \"ptr\", IUIA, \"ptr*\", FocusedEl:=0)\n    ; GetCurrentPattern. TextPatternElement2 = 10024\n    DllCall(NumGet(NumGet(FocusedEl+0)+16*A_PtrSize), \"ptr\", FocusedEl, \"int\", 10024, \"ptr*\", patternObject:=0), ObjRelease(FocusedEl)\n    if patternObject {\n        ; GetCaretRange\n        DllCall(NumGet(NumGet(patternObject+0)+10*A_PtrSize), \"ptr\", patternObject, \"int*\", IsActive:=1, \"ptr*\", caretRange:=0), ObjRelease(patternObject)\n        ; GetBoundingRectangles\n        DllCall(NumGet(NumGet(caretRange+0)+10*A_PtrSize), \"ptr\", caretRange, \"ptr*\", boundingRects:=0), ObjRelease(caretRange)\n        ; VT_ARRAY = 0x20000 | VT_R8 = 5 (64-bit floating-point number)\n        Rect := ComObject(0x2005, boundingRects)\n        if (Rect.MaxIndex() = 3) {\n            X:=Round(Rect[0]), Y:=Round(Rect[1]), W:=Round(Rect[2]), H:=Round(Rect[3])\n            return\n        }\n    }\n\n    ; Acc caret\n    static _ := DllCall(\"LoadLibrary\", \"Str\",\"oleacc\", \"Ptr\")\n    idObject := 0xFFFFFFF8 ; OBJID_CARET\n    if DllCall(\"oleacc\\AccessibleObjectFromWindow\", \"Ptr\", WinExist(\"A\"), \"UInt\", idObject&=0xFFFFFFFF, \"Ptr\", -VarSetCapacity(IID,16)+NumPut(idObject==0xFFFFFFF0?0x46000000000000C0:0x719B3800AA000C81,NumPut(idObject==0xFFFFFFF0?0x0000000000020400:0x11CF3C3D618736E0,IID,\"Int64\"),\"Int64\"), \"Ptr*\", pacc:=0)=0 {\n        oAcc := ComObjEnwrap(9,pacc,1)\n        oAcc.accLocation(ComObj(0x4003,&_x:=0), ComObj(0x4003,&_y:=0), ComObj(0x4003,&_w:=0), ComObj(0x4003,&_h:=0), 0)\n        X:=NumGet(_x,0,\"int\"), Y:=NumGet(_y,0,\"int\"), W:=NumGet(_w,0,\"int\"), H:=NumGet(_h,0,\"int\")\n        if (X | Y) != 0\n            return\n    }\n\n    ; default caret\n    CoordMode Caret, Screen\n    X := A_CaretX\n    Y := A_CaretY\n    W := 4\n    H := 20\n}\nf24 & s::\nInputBox, inp, , string to search,,\n;InputBox, inp, , string to search, HIDE, , , , , Font, Timeout, Default]\nfindstring(inp,*.*,2,0)\nmsgbox,% findstring(inp, \"*.ahk\")\nmsgbox,% findstring(inp, \"*.ahk\")\nt := {}\nt := findstring(inp,*.*,0,0)\nreturn\n\nf24 & 1::\nstring := \"p:/app/app/!.ahk\"\nrun(string)\nreturn\nf23::\n~f21::\n;CreateMainGUI(\"Recording\")\nreturn\n\nglobalcoderdash:\nMsgBox, % \"0: `n something cool will go here one day...\" \nreturn\n\n\n\n~f14 & d::\nif (A_TimeSincePriorHotkey < 200) && (A_PriorHotkey = A_ThisHotkey)\n{\nsend, ^f2\n}\nelse\n{\nsend, ^f24\ntooltip,,, Dclick for ^f2 \nsleep, 1000\ntooltip,,, off\nreturn\n}\nreturn\n\n/*f24 & f2::\nif (A_TimeSincePriorHotkey < 200) && (A_PriorHotkey = A_ThisHotkey)\ntooltip % \"function 2\"\nelse\ntooltip % \"function 1\"\nreturn\n*/\nsetup6(rootfolder){ ;activate anywhere\n  dir = %rootfolder%\n  inputbox, ProjName,, \" Name your Project: `n this is the SLN file created. \" ,,,,,,,,SLN_\n  dir := dir \"\\\" . projName\n  ;FileCreateDir, % dir \"/\" . projName\n  FileCreateDir, % dir\n ; WinActivate, GitBash\n  ;WinWaitActive,  MINGW64:/c/Users/%A_UserName%\n\n  waitgitbash()\n\n  send, % \"cd \" . ProjName\n  SendInput, {enter} \n  MsgBox, % \"1: `n evaluate results...\" dir ; (combined at start of fn) dir \"/\" . projName \n\n  string := \"dotnet new sln -n  \"\"\" \"\" ProjName  \"\"\" \" \n  send(string)\n\n  inputbox, consoleName,, \" Name your Project: `n this is the Console App. \" ,,,,,,,,Console_%projName%\n  string := \"dotnet new console -n \"\"\" \"\" consoleName \"\"\" \"\n  send(string)\n\n  inputbox, LibraryName,, \" Name your Project: `n this is an additional file library. \" ,,,,,,,,%ConsoleName%library\n  string := \"dotnet new classlib -n \"\"\" \"\" LibraryName \"\"\" \"\n  send(string)\n\n  string := \"dotnet sln \" ProjName \".sln add **/*.csproj\"\n  send(string)\n\n  string := \"dotnet add \" ConsoleName \"/\" ConsoleName \".csproj reference \" libraryName \"/\" libraryName \".csproj\"\n  send(string)\n\n  send(\"cd \" . ConsoleName)\n  send(\"code .\")\n\n  return dir\n}\n:*:inputbox::\"inputbox,, message ,,,,,,,, autofill-prompt\"\n\n:*:dotnetnew::\nsetup()\nreturn\n\nf24 & f12::\n\n hotkey % CurHK , configurehotkey()\nreturn\n\n\n;QQQ::\nf24 & q::\npath := %A_Startup%\nrun(path)\nreturn\n\n;==={ //End Auto-execute section of code}==============================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=====// Hotkeys, hotstrings, continue to run etc..===============================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=================||\\\\----||======================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=================||-\\\\---||======================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=================||--\\\\--||======================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=================||---\\\\-||======================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;====||----||==={ notes } & Global Google ===||----||==================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n~f24 & [::\n;Gui, Add, Button, gCtrlEvent vButton1, Button 1\n;Gui, Add, Button, gCtrlEvent vButton2, Button 2\nGui, Add, Button, gGoButton2, Go Button\n;Gui, Add, Edit, vEditField, Example text\ngui, add, Edit, w400 h200 vEditField, ;Here is some text`nHere is some text`nHere is some text`nHere is some text`nHere is some text`nHere is some text`nHere is some text`nHere is some text`nHere is some text`n\ngui, show,,Test +resizable\nGuiControl,enable,EditField\n\n\nGui, Show,, Functions instead of labels\n\n/*CtrlEvent2(CtrlHwnd:=0, GuiEvent:=\"\", EventInfo:=\"\", ErrLvl:=\"\") {\n    GuiControlGet, controlName, Name, %CtrlHwnd%\n    MsgBox, %controlName% has been clicked!\n}\n*/\nGoButton2(CtrlHwnd:=0, GuiEvent:=\"\", EventInfo:=\"\", ErrLvl:=\"\") {\n    GuiControlGet, EditField\n    MsgBox, % \"EditField: `n\" EditField\n    editfield := editfield .= \" `n `;--------------------------------------[]\"\n    writefile(editfield)\n}\n\n/*GuiClose2(hWnd) {\n    WinGetTitle, windowTitle, ahk_id %hWnd%\n    MsgBox, The Gui with title \"%windowTitle%\" has been closed!\n    ExitApp\n}\n*/\nreturn\n/*~^+[::\n;if (A_PriorHotkey = \";\" & A_TimeSincePriorHotkey > 300)\n{\nInput, UserInput, V T5 L4 C, {enter}.{esc}{tab}, btw,otoh,fl,ahk,ca\nswitch ErrorLevel\n{\ncase \"Max\":\n    MsgBox, You entered \"%UserInput%\", which is the maximum length of text.\n    return\ncase \"Timeout\":\n    MsgBox, You entered \"%UserInput%\" at which time the input timed out.\n    return\ncase \"NewInput\":\n    return\ndefault:\n    if InStr(ErrorLevel, \"EndKey:]\")\n    {\n        MsgBox, You entered \"%UserInput%\" and terminated the input with %ErrorLevel%.\n        return\n    }\n}\nswitch UserInput\n{\ncase \"btw\":   Send, {backspace 4}by the way\ncase \"otoh\":  Send, {backspace 5}on the other hand\ncase \"fl\":    Send, {backspace 3}Florida\ncase \"ca\":    Send, {backspace 3}California\ncase \"ahk\":   Run, https://www.autohotkey.com\n}\nreturn\n}\n*/\n\n^!+g::\nrun(gsearch) gsearch := A_WorkingDir . \"/bin/googlesearch.txt\"\nrun(gscratch) gscratch := A_WorkingDir . \"/globercoder-scratch.ahk\"\n;/  &as_qdr=m6\n;/  &as+qdr=y1\n;Specifies the maximum age of the search results, in months.\n; x is any number between 1 and 12;\n;safe=off\n\n\n\ngooglesearch := A_WorkingDir . \"/bin/googlesearch.txt\"\nrun(googlesearch)\nreturn\n\n;; 'variable' window - list onscreen showing declared variable names and type\n;; bracket navigation window? -- mini map --> drill down to what method a person is currently in, and where that resides overall\n; Takes up space of solution explorer... until mouse moves over to that area, then relaxes all mod-windows.\n;so code is 2/3 screen, 1/3 is solution /& GlobalCoder\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ INDEX ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[INDEX ]x=[]\n;[ FORMATTING & SPECIALS ]  - 391 :*:gFORMATTING & SPECIALS \n;[ HOTSTRINGS ]             - 106 :*:gHOTSTRINGS \n;[ RUNS ]                   - 131 :*:gRUNS \n;[ WINDOWS ]                - 202 :*:gWINDOWS \n;[ WORD ]                   - 464 :*:gWORD \n;[ CHROME ]                 - 490 :*:gCHROME \n;[ INCLUDES ]               - 783 :*:gINCLUDES \n\n;1914\n;2525\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ FORMATTING ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\nxbutton2 & b::\n SendMode Input\n SendRaw, `;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\nreturn\n\nxbutton1 & b::\n    SendMode Input\n  \n    Send, `;==============================[]=================================[]\nreturn\n\n~f24 & b::\nsend, `;//================\nclipboard := \"`;================\"\nreturn\n\nini_snip := \"var,file,section,key\"\n:*:inisnip::\n{\n    Send, IniWrite`,%A_Space%\n    Loop, Parse, ini_snip, `,\n    {\n        KeyWait, Tab, D\n        if (A_Index < 4)\n        {\n            Send, {backspace}%A_LoopField%`,%A_Space%\n        } else {\n            Send, {backspace}%A_LoopField%\n        }\n        KeyWait, Tab\n    }\n    return\n}\n \n;==============================[ //FORMATTING]=================================[]\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ HOTSTRINGS ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[Hotstrings ]\n\n:*:pyear::&as_qdr=y1\n:*:dkz::dkzeanah@gmail.com\n:*:ahkk::autohotkey\n\n:*:xb::xbutton2 &\n:*:reqv2::#Requires AutoHotkey v2.0-beta.7 `n warn all, off\n:*:reqv1::#Requires AutoHotkey  v1.1.34.03\n:*:ccad8::\nccad8(){\n    clipboard := \"ccad8-student-6@msftmssa.onmicrosoft.com\"\n    send, ^v\n}\n:*:donovan.z::\noutlookfunc(){\n    clipboard := \"donovan.zeanah@outlook.com\"\n    send, ^v\n}\n\n:*:msg::\nmymsg_Function() {\n    static count := 0\n    clipboard := \"MsgBox, % \"\"\" . count++ \": ``n \" . \"\"\" \"\n    send, % clipboard\n    ;send, % \"MsgBox, % \"\"\" . count++ \": ``n \" . \"\"\" \"\n    return\n}\n\n:*:umgc::\numgcfunc(){\n\n    clipboard := \"dzeanah@student.umgc.edu\"\n    send, ^v\n     return\n}\ninputkey(){\n    tooltip,\" ` to exit\"\n    finished := false\n    While, (finished := false)\n    {\n        Loop\n        {\n            tooltip, inside\n\n\n           ; KeyWait, KeyName [, Options]\n            ;KeyWait, `;\n           \n            state := GetKeyState(\"CapsLock\", \"T\") ; True if CapsLock is ON, false otherwise.\n            if (state := true)\n            {\n                continue\n            }\n            else\n            {\n                SplashTextOn, 300, 200, Hello, Hello\n                tooltip, off \n                finished := true\n            break\n            }\n        }\n    }\nif finished := false\n{\n;    GetKeyChar()\n    return \n}\n}\n;else {\n\nKeyWait, `;\nreturn\n;}\nGetKeyChar(key) {\n; <tmplinshi>: thanks to Lexikos:\n; https://autohotkey.com/board/topic/110808-getkeyname-for-other-languages/#entry682236\n;  Sleep, 30 ; megatest\n    If (key ~= \"i)^(vk)\")\n    {\n       vk := \"0x0\" SubStr(key, InStr(key, \"vk\", 0, 0)+2)\n       sc := \"0x0\" GetKeySc(\"vk\" vk)\n    } Else If (StrLen(key)>7)\n    {\n       sc := SubStr(key, InStr(key, \"sc\")+2, 3) + 0\n       vk := \"0x0\" SubStr(key, InStr(key, \"vk\")+2, 2)\n       vk := vk + 0\n    } Else\n    {\n       sc := GetKeySC(key)\n       vk := GetKeyVK(key)\n    }\n    nsa := DllCall(\"user32\\MapVirtualKeyW\", \"UInt\", vk, \"UInt\", 2)\n    If (nsa<=0 && DeadKeys=0)\n       Return\n\n    thread := DllCall(\"user32\\GetWindowThreadProcessId\", \"Ptr\", WinActive(\"A\"), \"Ptr\", 0)\n    hkl := DllCall(\"user32\\GetKeyboardLayout\", \"UInt\", thread, \"Ptr\")\n    VarSetCapacity(state, 256, 0)\n    VarSetCapacity(char, 4, 0)\n    Loop, 2\n        n := DllCall(\"user32\\ToUnicodeEx\"\n          , \"UInt\", vk\n          , \"UInt\", sc\n          , \"Ptr\", &state\n          , \"Ptr\", &char\n          , \"Int\", 2\n          , \"UInt\", 0\n          , \"Ptr\", hkl)\n\n    Return StrGet(&char, n, \"utf-16\")\n}\nGui Add, Text, , Type a key name and click Convert.\nGui Add, Edit, vKeyName w50, vk4C\nGui Add, Button, Default, Convert\nGui Show\nreturn\nButtonConvert:\nGui Submit, NoHide\nMsgBox % \"GetKeyName: \" GetKeyName(KeyName)\n    .  \"`nGetKeyChar: \" GetKeyChar(KeyName)\nreturn\nGuiClose:\nGuiEscape:\nExitApp\n\nGetKeyChar2(Key, WinTitle:=0)\n{\n    thread := WinTitle=0 ? 0\n        : DllCall(\"GetWindowThreadProcessId\", \"ptr\", WinExist(WinTitle), \"ptr\", 0)\n    hkl := DllCall(\"GetKeyboardLayout\", \"uint\", thread, \"ptr\")\n    vk := GetKeyVK(Key), sc := GetKeySC(Key)\n    VarSetCapacity(state, 256, 0)\n    VarSetCapacity(char, 4, 0)\n    n := DllCall(\"ToUnicodeEx\", \"uint\", vk, \"uint\", sc\n        , \"ptr\", &state, \"ptr\", &char, \"int\", 2, \"uint\", 0, \"ptr\", hkl)\n    return StrGet(&char, n, \"utf-16\")\n}\n/*\n\n// Lexikos: Testing shows that calling ToUnicodeEx with the VK/SC of a dead key\n// acts the same as actually pressing that key.  Calling it once when there is\n// no pending dead key places the dead key in the keyboard layout's buffer and\n// returns -1; calling it again consumes the dead key and returns either 1 or 2,\n// depending on the keyboard layout.  For instance:\n// - Passing vkC0 twice with US-International gives the string \"``\".\n//  - Passing vkBA twice with Neo2 gives just the combining version of \"^\".\n\n*/\n\n;g(inputkey()){\nreturn\n;}\nstate := GetKeyState(\"RButton\")  ; Right mouse button.\nstate := GetKeyState(\"Joy2\")  ; The second button of the first joystick.\n\n\n\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ WINDOWS ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n;Menu, MenuName, Cmd [, P3, P4, P5]\n;Menu, MenuName, Cmd [, P3, P4, P5]\n\n#p::\nMsgBox, % \"0: `n Track my ms boxes in code\" frontproject \ngoto, settingsrecent\nreturn\n\n\nMyLv:\nLV_GetText(fllpth, A_EventInfo, 2) \nrun, % fllpth\nreturn\n\nButtonOK:\nLV_GetText(fllpth, LV_GetNext(0, \"Focused\"),2)\nrun, % fllpth\nreturn\n\n#if WinActive settingsrecent\n{\n    esc::\n    gui,destroy\n    return\n}\n;guiescape2:\n;gui, destroy\n#if\n\nsettingsrecent:\nvOutput := \"\", CSIDL_RECENT := 8\nVarSetCapacity(vDirRecent, 260*2, 0)\nDllCall(\"shell32\\SHGetFolderPath\", Ptr,0, Int,8, Ptr,0, UInt,0, Str,vDirRecent)\nVarSetCapacity(vOutput, 100000*2)\nLoop, Files, % vDirRecent \"\\*.lnk\", F\n        {\n        vPath := A_LoopFileFullPath\n        FileGetShortcut, % vPath, vTarget\n        vAttrib := FileExist(vTarget)\n        if InStr(vAttrib, \"D\") || !vAttrib\n                continue\n        vOutput .= A_LoopFileTimeModified \"`t\" vTarget \"`n\"\n        }\nSort, vOutput, R\nvOutput := RegExReplace(vOutput, \"(?<=^|`n)\\d{14}`t\")\ngui, font, s12\ngui, margin, 0, 0\ngui, -caption\ngui, add, listview, w400 r10 -hdr gMyLV, flnm|fllpth\ngui, add, button, w0 h0 hidden default, OK\nfor x,y in strsplit(vOutput,\"`n\", \"`r\")\n        {\n        splitpath,y,z   \n        lv_add(\"\",z,y)\n        } until (x = 20)                                                                                                                        ; 20 most recent \"recents\"\nLV_ModifyCol(1,380)\nLV_ModifyCol(2,0)\ngui, show\nreturn\n\nf24 & i::\n!i::\nlv(\"d:/\")\nreturn\n\n/*WatchActiveWindow:\ntext := OCR([0, 0, A_ScreenWidth, A_ScreenHeight])\nfile_path := writefile(text)\ntooltip, % text, 1\n;WinGetTitle, TitleOutput, A,\n;tooltip, % TitleOutput\nreturn\n*/\n;====== switch example\n^!+t::\nAlterClipboard(\" \" , StrSplit(\"()}{:=,\")*)\nreturn\n\n^!+v::\nvalidatepath(rootpath)\nmsgbox, % variable1 := validatepath(frontproject)\nTestString := \"This is a test.\"\nword_array := StrSplit(TestString, A_Space, \".\") ; Omits periods.\nMsgBox % \"The 4th word is \" word_array[4]\n;================\n ;Removes all CR+LF's from the clipboard contents.\nClipboard := StrReplace(Clipboard, \"`r`n\")\n;================\n ;Replaces all spaces with pluses.\nNewStr := StrReplace(OldStr, A_Space, \"+\")\n;================\n ;Removes all blank lines from the text in a variable.\nLoop\n{\n    MyString := StrReplace(MyString, \"`r`n`r`n\", \"`r`n\", Count)\n    if (Count = 0)  ; No more replacements needed.\n        break\n}\nWinGetTitle, active_title, A\nif active_title contains Address List.txt,Customer List.txt\n    MsgBox One of the desired windows is active.\nif active_title not contains metapad,Notepad\n    MsgBox But the file is not open in either Metapad or Notepad.\n;================\nfileName := \"Folder_Or_File_Path\"\nif InStr(FileExist( fileName ), \"D\")\n\tMsgbox % \"[\" fileName \"] was found and it was a directory !\"\nelse if FileExist( fileName )\n\tMsgbox % \"[\" fileName \"] was found and it was a file (or a folder)!\" ; this 'file' could be a directory too, if we won't explicitely check for it, isn't it ??\nelse\n\tMsgbox % \"[\" fileName \"] was not found !\"\n\treturn\n\n~<#[::\t\t\t; <# means LWin\ncount++   \t \t; for each press, increment a counter\nSetTimer action, -0\t; SetTimer is only used here to cause the code to be jumped to in a psuedo-thread.\nreturn\n\n\taction:\nKeyWait, LWin, L\nIf (count=1)\n    MsgBox, action 1\nIf (count=2)\n    MsgBox, action 2\n; ...\ncount:=0      \t; reset counter\nreturn\nf24 & y::\n\nmsgbox, % \"pressed: \" f24 + y\nreturn\n\n/*ClipChanged(Type) {\n    ToolTip Clipboard data type: %Type%\n    Sleep 3000\n    ToolTip  ; Turn off the tip.\n    msgbox, % \"your clipboard is this: \" clipboard\n    writefile(clipboard,frontproject)\n    return\n}*/\n;Alt+T = Toggle AlwaysOnTop state of the active window\nf24 & t::\nxbutton2 & t::WinSet, AlwaysOnTop, Toggle, A\nreturn \nxbutton1 & t::WinSet, AlwaysOnTop, Toggle, A\nreturn \n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ CHROME ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n\nscanchrome(){\nstatic loopnum := 1\n\n;create an array of colors, to add more just seperate them by commas\n;--------------------pink------orange---white--green------purple--light blue-blu------red-----yellow\nchromeTabColors := [0xFF8BCB,0xFCAD70,0xDADCE0,0x81C995, 0xC58AF9,0x78D9EC,0x8AB4F8,0xF28B82,0xFDD663] \nchromeColors := {pink:0xFF8BCB,orange:0xFCAD70,white:0xDADCE0,green:0x81C995,purple:0xC58AF9,lightblue:0x78D9EC,blue:0x8AB4F8,red:0xF28B82,yellow:0xFDD663} \n\nWinActivate, dkz\nscan := new Shinsimagescanclass(dkz)\n;scan.pixelregion()\n\nfor k,v in chromeColors\n{\ncolorinloop := v\nif (scan.Pixel(colorinloop,,x,y)) {\n    tooltip % \"Found\" k \" pixel at \" x \",\" y\n    mousemove,  x , y  \n    MouseClick, r, X, Y, 1, \n    } else \n    {\n        MsgBox, % \"0: `n damn \" \n    }\n}\nreturn\n}\n \nf24 & space::\nf13 & space::\n;OnClipboardChange(\"ClipChanged\")\n;suffixes to narrow google search in launch ( google search filters )\n; &as_qdr=y3 \nInputBox, ans\nRun, www.google.com/search?q=%ans%\nchrome_group()\nremovespace(ans) ;ReplacedStr := StrReplace(Haystack, Needle , ReplaceText, OutputVarCount, Limit)\nreturn \n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ OCR ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\nf14 & o::\n#1::\nmsgbox, % started\ntext := OCR([0, 0, A_ScreenWidth, A_ScreenHeight])\nfile_path := writefile(text)\ntooltip, % text, 1\nWinGetTitle, TitleOutput, A,\ntooltip, % TitleOutput\nreturn\nf24 & o::\n#c:: \nOCR()              ; OCR to clipboard\nVis2.Graphics.Subtitle.Render(\"Press [Win] + [c] to highlight and copy anything on-screen.\", \"time: 30000 xCenter y92% p1.35% cFFB1AC r8\", \"c000000 s2.23%\")\ntr := Vis2.Graphics.Subtitle.Render(\"Processing test.jpg... Please wait\", \"xCenter y67% p1.35% c88EAB6 r8\", \"s2.23% cBlack\")\ntr.Destroy()\nreturn\n\n#i:: ImageIdentify()    ; Label images\n^!1::\n;snipewindow(frontproject)\nmsgbox, % data := ocr(snipewindow(frontproject))\nFileAppend, %data%, % rootpath \"\\Filefromsnipe.txt\"\nreturn\n\n;==============================[ // OCR ]=================================[]\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ REGEX ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n!r::\nregexer() ;or use traymenu\nreturn\nregexer(){\n\n    gosub MakeGui\n    gosub UpdateMatch\n    gosub UpdateReplace\n    Gui Show, , RegEx Tester - v15.06.2020\nreturn\n}\n\n#IfWinActive Regex Tester\n!c::\n    Gui Submit, NoHide\n    ClipBoard := (TabSelection = \"RegExMatch\") ? mNeedle : rNeedle\n    MsgBox, 64, RegEx Copied, %Clipboard% has been copied fdto the Clipboard, 3\nreturn\n#if\n;==============================[ //REGEX ]=================================[]\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ BASH ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\nclipsendw(string){\n    clipboard := string\n    send, ^v \n    return\n}\nf14 & 1::\n\trun, \"C:\\Program Files\\Git\\git-bash.exe\" --cd-to-home\n    sleep, 1000\n\tbashWin := WinActive(\"A\")\n\tmsgbox, % bashwin\nWinWaitActive, %BASHWIN%\nMsgBox, % \"0: `n active \" \n    clipsendw(\"cd d:/\")\n\n\treturn\n\t^!2::\nWinMinimize, %bashWin% ;ahk_pid %bashWin%\nmsgbox, %bashwin%\nreturn\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ NOTETAKER ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n!enter::\nselectsubject()\nreturn\n\n\n\nf24 & down::\nnewsubject()\nreturn\n\n^right::\nnewnote()\nreturn\n\n^up::\nrun(frontproject)\nreturn\n;==============================[ //NOTETAKER ]=================================[]\n\n;pinned window in corner displaying the last (ongoing) winsnip of code\n\n\n/*findstring(string, filepattern = \"*.*\", rec = 0, case = 0){\n    msgbox % filepattern\n    msgbox %  \"findstring: \" outputdir\n    len := strlen(string)\n    if (len = 0)\n        return\n    loop,% filepattern, 0,% rec\n    {\n        msgbox % a_loopfilefullpath\n        fileread, x,% a_loopfilefullpath\n        if (pos := instr(x, string, case)){\n            positions .= a_loopfilefullpath \"|\" pos\n            while(pos := instr(x, string, case, pos+len))\n                positions .= \"|\" pos\n            positions .= \"`n\"\n        }\n    }\n    return, positions\n}\n\nfindstring1(string, filepattern = \"*.*\", rec = 1, case = 0){\n    len := strlen(string)\n    if (len = 0)\n        return\n    loop,% filepattern, 0,% rec\n    {\n        fileread, x,% a_loopfilefullpath\n        if (pos := instr(x, string, case)){\n            positions .= a_loopfilefullpath \"|\" pos\n            while(pos := instr(x, string, case, pos+len))\n                positions .= \"|\" pos\n            positions .= \"`n\"\n        }\n    }\n     return\n}\n\nocr2(file, lang := \"FirstFromAvailableLanguages\"){\n   static OcrEngineStatics, OcrEngine, MaxDimension, LanguageFactory, Language, CurrentLanguage, BitmapDecoderStatics, GlobalizationPreferencesStatics\n   if (OcrEngineStatics = \"\")\n   {\n      CreateClass(\"Windows.Globalization.Language\", ILanguageFactory := \"{9B0252AC-0C27-44F8-B792-9793FB66C63E}\", LanguageFactory)\n      CreateClass(\"Windows.Graphics.Imaging.BitmapDecoder\", IBitmapDecoderStatics := \"{438CCB26-BCEF-4E95-BAD6-23A822E58D01}\", BitmapDecoderStatics)\n      CreateClass(\"Windows.Media.Ocr.OcrEngine\", IOcrEngineStatics := \"{5BFFA85A-3384-3540-9940-699120D428A8}\", OcrEngineStatics)\n      DllCall(NumGet(NumGet(OcrEngineStatics+0)+6*A_PtrSize), \"ptr\", OcrEngineStatics, \"uint*\", MaxDimension)   ; MaxImageDimension\n   }\n   if (file = \"ShowAvailableLanguages\")\n   {\n      if (GlobalizationPreferencesStatics = \"\")\n         CreateClass(\"Windows.System.UserProfile.GlobalizationPreferences\", IGlobalizationPreferencesStatics := \"{01BF4326-ED37-4E96-B0E9-C1340D1EA158}\", GlobalizationPreferencesStatics)\n      DllCall(NumGet(NumGet(GlobalizationPreferencesStatics+0)+9*A_PtrSize), \"ptr\", GlobalizationPreferencesStatics, \"ptr*\", LanguageList)   ; get_Languages\n      DllCall(NumGet(NumGet(LanguageList+0)+7*A_PtrSize), \"ptr\", LanguageList, \"int*\", count)   ; count\n      loop % count\n      {\n         DllCall(NumGet(NumGet(LanguageList+0)+6*A_PtrSize), \"ptr\", LanguageList, \"int\", A_Index-1, \"ptr*\", hString)   ; get_Item\n         DllCall(NumGet(NumGet(LanguageFactory+0)+6*A_PtrSize), \"ptr\", LanguageFactory, \"ptr\", hString, \"ptr*\", LanguageTest)   ; CreateLanguage\n         DllCall(NumGet(NumGet(OcrEngineStatics+0)+8*A_PtrSize), \"ptr\", OcrEngineStatics, \"ptr\", LanguageTest, \"int*\", bool)   ; IsLanguageSupported\n         if (bool = 1)\n         {\n            DllCall(NumGet(NumGet(LanguageTest+0)+6*A_PtrSize), \"ptr\", LanguageTest, \"ptr*\", hText)\n            buffer := DllCall(\"Combase.dll\\WindowsGetStringRawBuffer\", \"ptr\", hText, \"uint*\", length, \"ptr\")\n            text .= StrGet(buffer, \"UTF-16\") \"`n\"\n         }\n         ObjRelease(LanguageTest)\n      }\n      ObjRelease(LanguageList)\n      return text\n   }\n   if (lang != CurrentLanguage) or (lang = \"FirstFromAvailableLanguages\")\n   {\n      if (OcrEngine != \"\")\n      {\n         ObjRelease(OcrEngine)\n         if (CurrentLanguage != \"FirstFromAvailableLanguages\")\n            ObjRelease(Language)\n      }\n      if (lang = \"FirstFromAvailableLanguages\")\n         DllCall(NumGet(NumGet(OcrEngineStatics+0)+10*A_PtrSize), \"ptr\", OcrEngineStatics, \"ptr*\", OcrEngine)   ; TryCreateFromUserProfileLanguages\n      else\n      {\n         CreateHString(lang, hString)\n         DllCall(NumGet(NumGet(LanguageFactory+0)+6*A_PtrSize), \"ptr\", LanguageFactory, \"ptr\", hString, \"ptr*\", Language)   ; CreateLanguage\n         DeleteHString(hString)\n         DllCall(NumGet(NumGet(OcrEngineStatics+0)+9*A_PtrSize), \"ptr\", OcrEngineStatics, ptr, Language, \"ptr*\", OcrEngine)   ; TryCreateFromLanguage\n      }\n      if (OcrEngine = 0)\n      {\n         msgbox Can not use language \"%lang%\" for OCR, please install language pack.\n         ExitApp\n      }\n      CurrentLanguage := lang\n   }\n   if (SubStr(file, 2, 1) != \":\")\n      file := A_ScriptDir \"\\\" file\n   if !FileExist(file) or InStr(FileExist(file), \"D\")\n   {\n      msgbox File \"%file%\" does not exist\n      ExitApp\n   }\n   VarSetCapacity(GUID, 16)\n   DllCall(\"ole32\\CLSIDFromString\", \"wstr\", IID_RandomAccessStream := \"{905A0FE1-BC53-11DF-8C49-001E4FC686DA}\", \"ptr\", &GUID)\n   DllCall(\"ShCore\\CreateRandomAccessStreamOnFile\", \"wstr\", file, \"uint\", Read := 0, \"ptr\", &GUID, \"ptr*\", IRandomAccessStream)\n   DllCall(NumGet(NumGet(BitmapDecoderStatics+0)+14*A_PtrSize), \"ptr\", BitmapDecoderStatics, \"ptr\", IRandomAccessStream, \"ptr*\", BitmapDecoder)   ; CreateAsync\n   WaitForAsync(BitmapDecoder)\n   BitmapFrame := ComObjQuery(BitmapDecoder, IBitmapFrame := \"{72A49A1C-8081-438D-91BC-94ECFC8185C6}\")\n   DllCall(NumGet(NumGet(BitmapFrame+0)+12*A_PtrSize), \"ptr\", BitmapFrame, \"uint*\", width)   ; get_PixelWidth\n   DllCall(NumGet(NumGet(BitmapFrame+0)+13*A_PtrSize), \"ptr\", BitmapFrame, \"uint*\", height)   ; get_PixelHeight\n   if (width > MaxDimension) or (height > MaxDimension)\n   {\n      msgbox Image is to big - %width%x%height%.`nIt should be maximum - %MaxDimension% pixels\n      ExitApp\n   }\n   BitmapFrameWithSoftwareBitmap := ComObjQuery(BitmapDecoder, IBitmapFrameWithSoftwareBitmap := \"{FE287C9A-420C-4963-87AD-691436E08383}\")\n   DllCall(NumGet(NumGet(BitmapFrameWithSoftwareBitmap+0)+6*A_PtrSize), \"ptr\", BitmapFrameWithSoftwareBitmap, \"ptr*\", SoftwareBitmap)   ; GetSoftwareBitmapAsync\n   WaitForAsync(SoftwareBitmap)\n   DllCall(NumGet(NumGet(OcrEngine+0)+6*A_PtrSize), \"ptr\", OcrEngine, ptr, SoftwareBitmap, \"ptr*\", OcrResult)   ; RecognizeAsync\n   WaitForAsync(OcrResult)\n   DllCall(NumGet(NumGet(OcrResult+0)+6*A_PtrSize), \"ptr\", OcrResult, \"ptr*\", LinesList)   ; get_Lines\n   DllCall(NumGet(NumGet(LinesList+0)+7*A_PtrSize), \"ptr\", LinesList, \"int*\", count)   ; count\n   loop % count\n   {\n      DllCall(NumGet(NumGet(LinesList+0)+6*A_PtrSize), \"ptr\", LinesList, \"int\", A_Index-1, \"ptr*\", OcrLine)\n      DllCall(NumGet(NumGet(OcrLine+0)+7*A_PtrSize), \"ptr\", OcrLine, \"ptr*\", hText) \n      buffer := DllCall(\"Combase.dll\\WindowsGetStringRawBuffer\", \"ptr\", hText, \"uint*\", length, \"ptr\")\n      text .= StrGet(buffer, \"UTF-16\") \"`n\"\n      ObjRelease(OcrLine)\n   }\n   Close := ComObjQuery(IRandomAccessStream, IClosable := \"{30D5A829-7FA4-4026-83BB-D75BAE4EA99E}\")\n   DllCall(NumGet(NumGet(Close+0)+6*A_PtrSize), \"ptr\", Close)   ; Close\n   ObjRelease(Close)\n   Close := ComObjQuery(SoftwareBitmap, IClosable := \"{30D5A829-7FA4-4026-83BB-D75BAE4EA99E}\")\n   DllCall(NumGet(NumGet(Close+0)+6*A_PtrSize), \"ptr\", Close)   ; Close\n   ObjRelease(Close)\n   ObjRelease(IRandomAccessStream)\n   ObjRelease(BitmapDecoder)\n   ObjRelease(BitmapFrame)\n   ObjRelease(BitmapFrameWithSoftwareBitmap)\n   ObjRelease(SoftwareBitmap)\n   ObjRelease(OcrResult)\n   ObjRelease(LinesList)\n   return text\n}\n\nCreateClass(string, interface, ByRef Class){\n   CreateHString(string, hString)\n   VarSetCapacity(GUID, 16)\n   DllCall(\"ole32\\CLSIDFromString\", \"wstr\", interface, \"ptr\", &GUID)\n   result := DllCall(\"Combase.dll\\RoGetActivationFactory\", \"ptr\", hString, \"ptr\", &GUID, \"ptr*\", Class)\n   if (result != 0)\n   {\n      if (result = 0x80004002)\n         msgbox No such interface supported\n      else if (result = 0x80040154)\n         msgbox Class not registered\n      else\n         msgbox error: %result%\n      ExitApp\n   }\n   DeleteHString(hString)\n}\n\nCreateHString(string, ByRef hString){\n    DllCall(\"Combase.dll\\WindowsCreateString\", \"wstr\", string, \"uint\", StrLen(string), \"ptr*\", hString)\n}\n\nDeleteHString(hString){\n   DllCall(\"Combase.dll\\WindowsDeleteString\", \"ptr\", hString)\n}\n\nWaitForAsync(ByRef Object){\n   AsyncInfo := ComObjQuery(Object, IAsyncInfo := \"{00000036-0000-0000-C000-000000000046}\")\n   loop\n   {\n      DllCall(NumGet(NumGet(AsyncInfo+0)+7*A_PtrSize), \"ptr\", AsyncInfo, \"uint*\", status)   ; IAsyncInfo.Status\n      if (status != 0)\n      {\n         if (status != 1)\n         {\n            DllCall(NumGet(NumGet(AsyncInfo+0)+8*A_PtrSize), \"ptr\", AsyncInfo, \"uint*\", ErrorCode)   ; IAsyncInfo.ErrorCode\n            msgbox AsyncInfo status error: %ErrorCode%\n            ExitApp\n         }\n         ObjRelease(AsyncInfo)\n         break\n      }\n      sleep 10\n   }\n   DllCall(NumGet(NumGet(Object+0)+8*A_PtrSize), \"ptr\", Object, \"ptr*\", ObjectResult)   ; GetResults\n   ObjRelease(Object)\n   Object := ObjectResult\n}*/\n;===//functions====================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n\n;regexer\n\n;RegExMatch(haystack, needle [, outputvar, startingpos)\n;RegExReplaceh(haystack, needle, replacement, outputvarcount,limit,starting pos)\n\n\n\n;==============================[ //SETTINGS ]=================================[]\n\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ CLASSES ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n\n;;;-------- classses\n/*run(path := \"\"){\n    run, %path%\n}*/\nclass tool{\n;__new(Item, ppath:=\"\")\n;check() \n;givevalues(x := \"\") \n;readfile(ath := \"\")\n;showfile(data := \"\")\n;savetofile()\n;total()\n\nstatic tooltotal := 1\nstatic frontproject := \"c:\\tester\"\n\n    __New(Item,type,ppath := \"\", unit := \"\",price:= \"\",stock:= 0,source:= \"\"){\n        tool.tooltotal++\n\n        items := this.items := {}\n        item := this.item \n        ppath := this.ppath \n        unit := this.unit \n        Price := this.price \n        stock := this.stock \n        source := this.source\n\n        if (ppath){\n            this.ppath := A_Desktop . \"\\\" . ppath . \".txt\"\n            this.frontproject := this.ppath\n        } else {\n            this.ppath :=  A_Desktop . \"\\project.txt\"\n            this.frontproject := this.ppath\n        }\n\n        tool.frontproject := this.frontproject\n        \n\n        if !FileExist(this.ppath){\n            FileAppend, % \"`n\" item \",\" DateTime,  this.ppath\n            ;MsgBox, % \"5: `n didnt exist, created: \" this.ppath \"`n appended: \" item \n        }\n        ;MsgBox, % \"0: `n  already existed\"\n        if (item = \"screwdriver\"){\n            this.timetounscrew := 7.5\n        } else if(item = \"powerdriver\"){\n            this.timeToUnscrew := 5 \n            ;MsgBox, % \"0: `n passed in a powerdriver: \" this.timetoUnscrew\n        }\n\n        ;static price :=\n        ;return timeToUnscrew\n    }\n\n     addItems(param_x := 0) {\n        this.stock += param_x\n    }\n    check(){\n        MsgBox, % \"10: `n tool.frontproject: \" tool.frontproject . \"10: `n this.frontproject: \" this.frontproject . \"10: `n frontproject: \" frontproject . \"2: `n \" this.timeToUnscrew \" seconds\"\n        return \n    }\n\n    givevalues(item, x := 0){\n       ; item := this.item := {}\n       if (this.HasKey(item) == false){\n\n       ;if (!IsObject(this.item)) {\n        this.items.push(item) := {}\n        this.item := item := {\"name\": item, \"quantity\": x}\n        msgbox % this.item.quantity \" \" item.name \"'s added!\" this.item.name\n\n        for k,v in this.item \n        msgbox % k \":\" v\n        return this.item\n        }\n        \n\n\n        if (this.item.quantity != \"\")\n         {\n        msgbox, % this.item.quantity \" \" this.item.name \"'s `n exist, so add to it\"\n\n           this.item.quantity +=  x\n           ; this.item.quantity := this.item + x \n            msgbox, % this.item.quantity \"`n object existed\"\n            return this.item ;.quantity\n        }\n\n        tool.frontproject := this.frontproject\n        ;msgbox % item\n      \n        item.quantity := x \n        msgbox, % item.quantity \"`n object didnt exist yet\"\n\n        return this.item\n    }\n\n    \n    readfile(path := \"\"){\n        tool.frontproject := this.frontproject\n\n        if this.ppath != \"\" or fileexist(A_Desktop . this.ppath)\n        {\n            MsgBox, % \"9: `n \" this.frontproject\n          MsgBox, % \"0: `n \" this.ppath\n            this.frontproject := \"c:\\test\"\n            ;this.filepath := \"C:\\Users\\dkzea\\OneDrive\\Desktop\" . path\n            this.filepath := path\n            FileRead, Contents, % \"C:\\Users\\dkzea\\OneDrive\\Desktop\" . path ;A_Desktop \"/Test.txt\"\n            StringReplace, Contents, Contents, `r,, All ; makes sure only `n separates the lines\n            aFile := {}\n           \n            Loop, Parse, contents , `n\n                {\n                temp_arr := StrSplit(a_loopfield, \",\") ;StrSplit(String, [Delimiters, OmitChars])\n                afile[temp_arr [1]] := temp_arr[2] ;whatever temp_arr[1] is, becomes the key for afile i.e, afile[notepadLine1] := notepadLine2\n                afile.path := \"C:\\Users\\dkzea\\OneDrive\\Desktop\" . path\n                }\n            return aFile\n                }\n            else \n                {\n            MsgBox, % \"0: `n it didn't read the file, path inside object method trip.readfile() is: \" path \n            , \"`n maybe it already exists\"\n            return\n                }\n            }\n\n    showfile(data := \"item\"){\n        tool.frontproject := this.frontproject\n\n        for k,v in %data%\n        {\n        MsgBox, % \"4: `n \" k \"-\" v\n        eachvalue .= v\n        total += v \n        }\n        Gui,+AlwaysOnTop ;Sets the Gui as forward priority in the window hierarchy.\n        Gui, Color, 000000 ;Sets the Gui color to black\n        Gui, +Delimiterspace\n        Gui, Add, DropDownList,, %total%\n        Gui, Add, DropDownList,, %eachvalue%\n        Gui, Add, Button, x5 y370 w290 gSaveExit, Save and Exit\n        Gui, Show\n\n        saveexit:\n        msgbox % \"press ok to exit\"\n\n        return\n        return total\n        }\n    savetofile(data,ppath := \"\"){\n\n        tool.frontproject := this.frontproject\n        FileAppend,  % \"`n\" data . \",\" . DateTime  , % this.ppath\n\n        MsgBox, % \"0: `n \" data\n        MsgBox, % \"0: `n \" this.ppath\n        MsgBox, % \"6: `n \" this.filepath\n        return\n        }\n    total(){\n            tool.frontproject := this.frontproject\n\n            for k,v in data\n        {\n            MsgBox, % \"4: `n \" k \"-\" v\n            eachvalue .= v\n            total += v \n;key3=testvalue\n        }\n        return\n        }\n\n}\nclass note{\n    static initVar := 1++\n\n    __new(){\n        msgbox, % initvar\n    }\n}\n\n;==============================[ //CLASSES ]=================================[]\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ INCLUDES ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n;#includ scratch\\e <>\n;#includ scratch\\e <>\n\n;#include scratch\\globalcoder-windows.ahk\n;#include scratch\\globalcoder-references.ahk\n;#include scratch\\globalcoder-chrome.ahk\n;#include scratch\\globalcoder-image.ahk\n;#include scratch\\globalcoder-minimizer.ahk\n;#include scratch\\globalcoder-misc.ahk\n;#include scratch\\globalcoder-pass.ahk\n;#include C:\\Program Files\\AutoHotkey\\lib\\print.ahk\n;#include osd\\text-capture-acc.ahk\n\n\n\nArray1 := [Item1, Item2] ;..., ItemN]\nArray2 := Array(Item1, Item2) ;, ..., ItemN)\narray3 := [\"one\", \"two\", \"three\"]\n\n; Iterate from 1 to the end of the array:\nLoop % array.Length()\n    MsgBox % array[A_Index]\n\n; Enumerate the array's contents:\nFor index, value in array\n    MsgBox % \"Item \" index \" is '\" value \"'\"\n\n;//associative\nArray4 := {KeyA: ValueA, KeyB: ValueB} ;, ..., KeyZ: ValueZ}\nArray5 := Object(\"KeyA\", ValueA, \"KeyB\", ValueB) ;, ..., \"KeyZ\", ValueZ)\n\n\nArray4[KeyA] := Value\nValue := Array[Key]\nRemovedValue := Array4.Delete(KeyA)\n\n\nFunc := Func(\"MyFunc\")\n;//A function can be called by reference using the following syntax:\n\nRetVal := %Func%(Params)     ; Requires [v1.1.07+]\nRetVal := Func.Call(Params)  ; Requires [v1.1.19+]\nRetVal := Func.(Params)      ; Not recommended\n\n\nfiles := new obj()\narray := [Func(\"FirstFunc\"), Func(\"SecondFunc\")]\n\n; Call each function, passing \"foo\" as a parameter:\nLoop 2\n    array[A_Index].Call(\"foo\")\n\n; Call each function, implicitly passing the array itself as a parameter:\nLoop 2\n    array[A_Index]()\n\nFirstFunc(param) {\n    MsgBox % A_ThisFunc \": \" (IsObject(param) ? \"object\" : param)\n}\nSecondFunc(param) {\n    MsgBox % A_ThisFunc \": \" (IsObject(param) ? \"object\" : param)\n}\n\nclass Test {\n    FirstFunc(var) {\n        MsgBox, This is function 1 called with variable %var%\n    }\n}\nclass addonFunctions {\n    SecondFunc(var) {\n        MsgBox, Some other function called with variable %var%\n    }\n}\n\nTest.base := addonFunctions\nTest.SecondFunc(\"hello\")\n; => \"Some other function called with variable hello\"\n\n/*\nclass baseObject {\n    static foo := \"bar\"\n}\n; OR\nbaseObject := {foo: \"bar\"}\n\n;To create an object derived from another object,\n; scripts can assign to the base property or use the new keyword:\n\nobj1 := Object(), obj1.base := baseObject\nobj2 := {base: baseObject}\nobj3 := new baseObject\nMsgBox % obj1.foo \" \" obj2.foo \" \" obj3.foo\n\n\nGlob := new datafile(A_ScriptDir)\n\nfor k,v in glob.storage\n\nclass datafile extends baseObject\n{\n    static storage := {}\n    static lines := {}\n    static numoffiles[]\n    {\n        get {\n            return \n        }\n        set{\n            return\n        }\n    }\n\n__new(string_path){\nthis.storage.push(string_path)\n\nfor k,v in this.storage.length()\n{\n    FileReadLine, OutputVar, Filename, LineNum\n}\n}\n}\n\nfor k,v in files \n*/\n\ngetfilesinfolder(path){\nLoop, read, C:\\Database Export.txt\n{\n    Loop, parse, A_LoopReadLine, %A_Tab%\n    {\n        MsgBox, Field number %A_Index% is %A_LoopField%.\n    }\n}\n}\nreadfile(fileobj){\n    for k,v in fileobj\n    FileReadLine, OutputVar, Filename, LineNum\n}\n\nreturn\n\n\n\n;#include scratch\\globalcoder-osd.ahk\n;#includ scratch\\e func_st_printarr.ahk\n;==============================[ //INCLUDES ]=================================[]\n\n;==={ If #directives }=============================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n;===//=============================================================================[[[[[[[[[[[[[[[[[[[[[[[[]]]]]]]]]]]]]]]]]]]]]]]]\n\n\n\n\n\n#if WinActive(\"ahk_exe sublime_text.exe\")\n{\n\n\n}\n#if\n\n\n\n\n\n\n\n\n;x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=x=[ OVERVIEW ]=x=x=x=x=x=x=x=x=x=x=x=x=xx=x=x=x=x=x=x=x=[]x=[]\n/*\n;google cloud api key AIzaSyCXSGxaPjGWNYqeKsVKSgBioCOj-xevEeo\n\n[my key shortcuts]\n#sublime#\nalt+shift+ 2 --- 2 column\nalt+shift+ 8 --- 2 row\n\nFolder Structure Reference & Dotnet cli commands\n\\\\ solution folder\n\\\\|\n\\\\|__ project folder\n\\\\|-----.vscode\n\\\\|\n\\\\|__ project folder_classlibrary\n\ndotnet new sln -n \"VsCodeIntroSolution\"\ndotnet new console -n \"IntroUI\"\ndotnet new classlib -n \"IntroLibrary\"\ndotnet sln VSCodeIntroSolution.sln add *\n*\n\n/*.csproj       (only works in git bash, any folder below where we are at, if any .csproj exist, add it)\ndotnet add IntroUI/IntroUI.csproj reference IntroLibrary/Introlibrary.csproj\n*/\n\n\n\n\n;       ### Considerations ###\n;;==============================[]=================================[]\n/* \nC:/Program Files/Git/bin/bash.exe -i -l\n\n notefrontproject\n codefrontproject\n dirfrontproj\n\ncommands taken from this tutorial on c# by Tim Corey.\nhttps://www.youtube.com/watch?v=r5dtl9Uq9V0\n*/\n\n\n\n\n\n/* TODO::\n#questioner\n--logs question\n--launches googler\n;running a dotnet project via commandline without being in the directory\n\nVerifyglobals() - write to ini file on setup\nnoteviewer()\nMapPageviewer() - common static commands/references\nPhotoSnipper()\nCodeSnipper()\n\n#TEAMS\nTeamsTimeLiner()\n-transcript reader\n-logging of video points\n;================\nchatgrabber()\n-Linkgrabber\n-picsaver\n\n#sql\n- statement helper i.e. *from::FROM\n\n#git \n-cli \n\n#ProjectMapper\n\n#ConventionInjector\nex. pasting a do..while loop into code, pre formatted.\n--- asking the while first, with a description ( self commenting code ),\n--- then, brings cursor within loop section\n\n; \"frontproject\" is a directory that contains the last accessed/created folder location,\n; and can be used to send subsequent items i.e \n\n;newsubject() -> creates a new dir and sets frontproject to that dir\n;newnote() -> creates a new note inside 'frontproject' dir\n;snipewindow() -> creates image inside frontproject/pics/ ??%datetime% - possibly name decided by the ocr on that pic\n\n;setting variables as global in the auto-execute section implicitely makes them \"super-globals\", i.e\n; they do not need to be 'returned' or declared global inside of functions/methods and remain available\n;at all times.\n;just placeholder declerations. changing values here matters little.\n;==============================[ //OVERVIEW ]=================================[]\n*/\n",
			"file": "/D/globalcoder/0_globalcoder.ahk",
			"file_size": 107679,
			"file_write_time": 133186666468608941,
			"redo_stack":
			[
				[
					3,
					1,
					"paste_and_indent",
					null,
					"AQAAAOcIAAAAAAAA5wgAAAAAAAB4CAAAdXNpbmcgU3lzdGVtOwp1c2luZyBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYzsKCmNsYXNzIFRyYWRlCnsKICAgIHB1YmxpYyBpbnQgUXVhbnRpdHkgeyBnZXQ7IHNldDsgfQogICAgcHVibGljIGRvdWJsZSBQcmljZSB7IGdldDsgc2V0OyB9CgogICAgcHVibGljIFRyYWRlKGludCBxdWFudGl0eSwgZG91YmxlIHByaWNlKQogICAgewogICAgICAgIFF1YW50aXR5ID0gcXVhbnRpdHk7CiAgICAgICAgUHJpY2UgPSBwcmljZTsKICAgIH0KfQoKY2xhc3MgT3JkZXIKewogICAgcHVibGljIGludCBJZCB7IGdldDsgc2V0OyB9CiAgICBwdWJsaWMgaW50IFF1YW50aXR5IHsgZ2V0OyBzZXQ7IH0KICAgIHB1YmxpYyBkb3VibGUgUHJpY2UgeyBnZXQ7IHNldDsgfQogICAgcHVibGljIGJvb2wgSXNCdXkgeyBnZXQ7IHNldDsgfQogICAgcHVibGljIGJvb2wgSXNGaWxsZWQgeyBnZXQ7IHNldDsgfQoKICAgIHB1YmxpYyBPcmRlcihpbnQgaWQsIGludCBxdWFudGl0eSwgZG91YmxlIHByaWNlLCBib29sIGlzQnV5KQogICAgewogICAgICAgIElkID0gaWQ7CiAgICAgICAgUXVhbnRpdHkgPSBxdWFudGl0eTsKICAgICAgICBQcmljZSA9IHByaWNlOwogICAgICAgIElzQnV5ID0gaXNCdXk7CiAgICAgICAgSXNGaWxsZWQgPSBmYWxzZTsKICAgIH0KfQoKY2xhc3MgVHJhZGluZ1N5c3RlbQp7CiAgICBwcml2YXRlIExpc3Q8T3JkZXI+IE9yZGVycyB7IGdldDsgc2V0OyB9CiAgICBwcml2YXRlIGludCBOZXh0T3JkZXJJZCB7IGdldDsgc2V0OyB9CiAgICBwcml2YXRlIExpc3Q8VHJhZGU+IFRyYWRlcyB7IGdldDsgc2V0OyB9CgogICAgcHVibGljIFRyYWRpbmdTeXN0ZW0oKQogICAgewogICAgICAgIE9yZGVycyA9IG5ldyBMaXN0PE9yZGVyPigpOwogICAgICAgIE5leHRPcmRlcklkID0gMTsKICAgICAgICBUcmFkZXMgPSBuZXcgTGlzdDxUcmFkZT4oKTsKICAgIH0KCiAgICBwdWJsaWMgdm9pZCBQbGFjZU9yZGVyKGludCBxdWFudGl0eSwgZG91YmxlIHByaWNlLCBib29sIGlzQnV5KQogICAgewogICAgICAgIHZhciBvcmRlciA9IG5ldyBPcmRlcihOZXh0T3JkZXJJZCwgcXVhbnRpdHksIHByaWNlLCBpc0J1eSk7CiAgICAgICAgT3JkZXJzLkFkZChvcmRlcik7CiAgICAgICAgTmV4dE9yZGVySWQrKzsKICAgICAgICBNYXRjaE9yZGVycygpOwogICAgfQoKICAgIHByaXZhdGUgdm9pZCBNYXRjaE9yZGVycygpCiAgICB7CiAgICAgICAgdmFyIGJ1eU9yZGVycyA9IE9yZGVycy5GaW5kQWxsKG8gPT4gby5Jc0J1eSAmJiAhby5Jc0ZpbGxlZCk7CiAgICAgICAgdmFyIHNlbGxPcmRlcnMgPSBPcmRlcnMuRmluZEFsbChvID0+ICFvLklzQnV5ICYmICFvLklzRmlsbGVkKTsKCiAgICAgICAgZm9yZWFjaCAodmFyIGJ1eU9yZGVyIGluIGJ1eU9yZGVycykKICAgICAgICB7CiAgICAgICAgICAgIGZvcmVhY2ggKHZhciBzZWxsT3JkZXIgaW4gc2VsbE9yZGVycykKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWYgKGJ1eU9yZGVyLlByaWNlID49IHNlbGxPcmRlci5QcmljZSkKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBpbnQgcXVhbnRpdHkgPSBNYXRoLk1pbihidXlPcmRlci5RdWFudGl0eSwgc2VsbE9yZGVyLlF1YW50aXR5KTsKICAgICAgICAgICAgICAgICAgICBkb3VibGUgcHJpY2UgPSBzZWxsT3JkZXIuUHJpY2U7CiAgICAgICAgICAgICAgICAgICAgVHJhZGVzLkFkZChuZXcgVHJhZGUocXVhbnRpdHksIHByaWNlKSk7CgogICAgICAgICAgICAgICAgICAgIGJ1eU9yZGVyLlF1YW50aXR5IC09IHF1YW50aXR5OwogICAgICAgICAgICAgICAgICAgIHNlbGxPcmRlci5RdWFudGl0eSAtPSBxdWFudGl0eTsKCiAgICAgICAgICAgICAgICAgICAgaWYgKGJ1eU9yZGVyLlF1YW50aXR5ID09IDApCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBidXlPcmRlci5Jc0ZpbGxlZCA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBpZiAoc2VsbE9yZGVyLlF1YW50aXR5ID09IDApCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBzZWxsT3JkZXIuSXNGaWxsZWQgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfQo",
					"AQAAAAAAAAABAAAAXxEAAAAAAABfEQAAAAAAAAAAAAAAAPC/"
				]
			],
			"settings":
			{
				"buffer_size": 104121,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "function"
					},
					"CQAAADkPAAAAAAAAOg8AAAAAAAAAAAAAOg8AAAAAAAA6DwAAAAAAAAUAAABzdGFydDoPAAAAAAAAOw8AAAAAAAAAAAAAOw8AAAAAAAA8DwAAAAAAAAAAAAA8DwAAAAAAAD0PAAAAAAAAAAAAAD0PAAAAAAAAPg8AAAAAAAAAAAAAPg8AAAAAAAA/DwAAAAAAAAAAAAA/DwAAAAAAAEAPAAAAAAAAAAAAAEAPAAAAAAAAQQ8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA5DwAAAAAAAD4PAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					9,
					"left_delete",
					null,
					"CQAAAEoPAAAAAAAASg8AAAAAAAABAAAAbkkPAAAAAAAASQ8AAAAAAAABAAAAZkgPAAAAAAAASA8AAAAAAAABAAAAJkcPAAAAAAAARw8AAAAAAAABAAAAc0YPAAAAAAAARg8AAAAAAAABAAAAc0UPAAAAAAAARQ8AAAAAAAABAAAAYUQPAAAAAAAARA8AAAAAAAABAAAAbEMPAAAAAAAAQw8AAAAAAAABAAAAY0IPAAAAAAAAQg8AAAAAAAABAAAALQ",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABLDwAAAAAAAEsPAAAAAAAAAAAAAAAA8L8"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": "d:/lib/"
					},
					"BwAAADcPAAAAAAAAOA8AAAAAAAAAAAAAOA8AAAAAAAA5DwAAAAAAAAAAAAA5DwAAAAAAADoPAAAAAAAAAAAAADoPAAAAAAAAOw8AAAAAAAAAAAAAOw8AAAAAAAA8DwAAAAAAAAAAAAA8DwAAAAAAAD0PAAAAAAAAAAAAAD0PAAAAAAAAPg8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3DwAAAAAAADcPAAAAAAAAAAAAAAAA8L8"
				],
				[
					13,
					1,
					"left_delete",
					null,
					"AQAAADcPAAAAAAAANw8AAAAAAAAHAAAAZDovbGliLw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA+DwAAAAAAADcPAAAAAAAAAAAAAAAA8L8"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAEIPAAAAAAAAQw8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCDwAAAAAAAEIPAAAAAAAAAAAAAAAA8L8"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": "d:/lib/"
					},
					"BwAAADcPAAAAAAAAOA8AAAAAAAAAAAAAOA8AAAAAAAA5DwAAAAAAAAAAAAA5DwAAAAAAADoPAAAAAAAAAAAAADoPAAAAAAAAOw8AAAAAAAAAAAAAOw8AAAAAAAA8DwAAAAAAAAAAAAA8DwAAAAAAAD0PAAAAAAAAAAAAAD0PAAAAAAAAPg8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA3DwAAAAAAADcPAAAAAAAAAAAAAAAA8L8"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAEgPAAAAAAAASQ8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABIDwAAAAAAAEgPAAAAAAAAAAAAAAAA8L8"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAEOhAAAAAAAARKEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDoQAAAAAAAEOhAAAAAAAAAAAAAAAA8L8"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": ";"
					},
					"AQAAAC4PAAAAAAAALw8AAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuDwAAAAAAAC4PAAAAAAAAAAAAAAAA8L8"
				],
				[
					40,
					1,
					"left_delete",
					null,
					"AQAAAEShAAAAAAAARKEAAAAAAAABAAAAOw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABFoQAAAAAAAEWhAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"left_delete",
					null,
					"AQAAAC4PAAAAAAAALg8AAAAAAAABAAAAOw",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAvDwAAAAAAAC8PAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAJimAAAAAAAAmqYAAAAAAAAAAAAAQqEAAAAAAABEoQAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABCoQAAAAAAAJimAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJqmAAAAAAAAm6YAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACapgAAAAAAAJqmAAAAAAAAAAAAAAAA8L8"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": "j"
					},
					"AQAAAO8RAAAAAAAA8BEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADvEQAAAAAAAO8RAAAAAAAAAAAAAAAA8L8"
				],
				[
					61,
					1,
					"left_delete",
					null,
					"AQAAAO8RAAAAAAAA7xEAAAAAAAABAAAAag",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADwEQAAAAAAAPARAAAAAAAAAAAAAAAA8L8"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMZMAAAAAAAAx0wAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADGTAAAAAAAAMZMAAAAAAAAAAAAAAAA8L8"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMdMAAAAAAAAyEwAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADHTAAAAAAAAMdMAAAAAAAAAAAAAAAA8L8"
				],
				[
					101,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAJ9xAAAAAAAAoXEAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACfcQAAAAAAAJ9xAAAAAAAAAAAAAAAA8L8"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAENwAAAAAAAARHAAAAAAAAAAAAAARHAAAAAAAABIcAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABDcAAAAAAAAENwAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					""
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Default"
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Run"
				],
				[
					"Packages/AutoHotkey2/Autohotkey2.sublime-build",
					""
				]
			],
			[
				"Packages/AutoHotkey/AutoHotkey.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					""
				],
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					"Default"
				],
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
				"Default"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"term",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"auto",
				"AutoHotkey v2 - runner"
			],
			[
				"termin",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"",
				"Build With: AutoHotkey"
			],
			[
				"tern",
				"Terminus: Close All"
			],
			[
				"terminus",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"refres",
				"Preferences: LSP Settings"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"syntaxfold ke",
				"Preferences: SyntaxFold Keybindings - Default"
			],
			[
				"syntax",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"fold ",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"ke",
				"Preferences: Key Bindings"
			],
			[
				"syntaxa",
				"SyntaxFold: Fold All"
			],
			[
				"settings",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"preferences pack",
				"Preferences: SyntaxFold Keybindings - Default"
			],
			[
				"package",
				"Package Control: List Unmanaged Packages"
			],
			[
				"resouu",
				"PackageResourceViewer: Open Resource"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"history",
				"History: Revert Modification"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Preferences: SideBarTools Settings"
			],
			[
				"view",
				"View: Toggle Side Bar"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"viewer",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"white sp",
				"Trim Trailing White Space"
			],
			[
				"du",
				"File: Duplicate"
			],
			[
				"ahk",
				"AutoHotkey - Run"
			],
			[
				"dupl",
				"File: Duplicate"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"com",
				"AutoHotkey - Compile"
			],
			[
				"search",
				"File: Search Files"
			],
			[
				"find ",
				"Preferences: Search in Project Settings – Default"
			],
			[
				"conda",
				"Conda: List Packages"
			],
			[
				"high",
				"HighlightWords: Highlight Words"
			],
			[
				"highl",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"goto",
				"Goto Documentation"
			],
			[
				"rename",
				"Rename File"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 164.0,
		"history":
		[
			"sublime.log_commands(True)",
			"gh repo clone hi5/Rufaydium-Webdriver"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/globalcoder"
	],
	"file_history":
	[
		"/H/ahks/a/(ext)/fb-code.ahk",
		"/H/ahks/a/(ext)/obj_from_list_strings.ahk",
		"/H/ahks/a/(ext)/t.ahk",
		"/H/ahks/a/(ext)/t2.ahk",
		"/H/ahks/a/(ext)/t5.ahk",
		"/H/ahks/a/(ext)/t9.ahk",
		"/H/ahks/a/(ext)/test.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/onedrive/sorter/(scripts)/(ahk)/Gui-Script (2).ahk",
		"/D/globalcoder/lib/v2/Tools/Info.ahk",
		"/D/globalcoder/lib/v2/Tools/KeycodeGetter.ahk",
		"/D/globalcoder/lib/v2/Tools/Timer.ahk",
		"/D/globalcoder/lib/v2/Tools/WindowGetter.ahk",
		"/D/globalcoder/0globalcoder.ahk",
		"/D/globalcoder/0_globalcoderv2.ah2",
		"/D/globalcoder/scratch/globalcoderv2.ah2",
		"/D/globalcoder/0_globalcoder_runner.ahk",
		"/D/globalcoder/lib/CGUI/CGUI_Examples-master/GUITest.ahk",
		"/D/globalcoder/0_globalcoder_windowMenu.ahk",
		"/D/globalcoder/notes/Keyboard.md",
		"/D/globalcoder/Hotstrings/SampleSaveFile.ahk",
		"/D/globalcoder/lib/v2/Tools/CoordGetter.ahk",
		"/D/globalcoder/lib/v2/Tools/FileSystemSearch.ahk",
		"/D/globalcoder/lib/v2/Tools/CleanInputBox.ahk",
		"/D/globalcoder/lib/CGUI/CControl.ahk",
		"/D/globalcoder/lib/CGUI/CGUI_Examples-master/MenuExample.ahk",
		"/D/globalcoder/1_globalcoder_filesystem.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/github/GlobalCoder/gc/GlobalCoder/collection/!!KEYscripts/gui (3).ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/onedrive/sorter/(scripts)/(ahk)/Gui.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/onedrive/sorter/(scripts)/(ahk)/Gui-Script.ahk",
		"/D/globalcoder/globalcoder_1menuwindow_snip.ahk",
		"/D/globalcoder/lib/v2/Lib/classAutoPath.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/onedrive/ahks/treeview.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/onedrive/ahks/AHKs-master/AHKs-master/ahkcommandlist.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/onedrive/ahks/AHKs-master/AHKs-master/ahkforumsearch.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/onedrive/ahks/AHKs-master/AHKs-master/ahkfunctions.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/onedrive/ahks/AHKs-master/AHKs-master/ahkkeylist.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/onedrive/sorter/(scripts)/(ahk)/gui.maker.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/onedrive/sorter/(scripts)/(ahk)/favorites/SubparScripts/favs.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/onedrive/sorter/(scripts)/(ahk)/favorites/1.StartAllThese/2.OtherScripts/gui.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/github/GlobalCoder/GlobalCoder/collection/1_globalcoder/scratch/(start)/lib/.Gdip2-master/examples/8.write-text-onto-a-gui.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/github/GlobalCoder/GlobalCoder/collection/myminerva/gui.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/github/GlobalCoder/gc/GlobalCoder/collection/!!KEYscripts/examples-gui.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/github/GlobalCoder/gc/GlobalCoder/collection/!!_From_P_Drive/gui.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/github/GlobalCoder/gc/GlobalCoder/collection/!!_From_P_Drive/New folder/gui.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/AHKZeanah/v2-gui.ahk",
		"/D/globalcoder/gui-binded-to-class.ahk",
		"/D/globalcoder/globalcoder-windows.ahk",
		"/D/lib/((start)).ahk",
		"/C/Users/dkzea/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/AUTOSTART.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/.gitignore",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/AUTOSTART.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/Recycle Bin/S-1-5-21-3956581196-2760772990-1477779809-1002/move/SQLiteDB_Class.ahk",
		"/D/lib/V2/examples/Webview2-example.ahk2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/path-menus-handlers-1-4examples.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/guiscriptrun.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/parseahk-functions-results.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/!.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/parseahk.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/GlobalCoder.ahk",
		"/D/lib/V2/examples/Webview2-example 2.ahk2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/lemmon-runner.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/settings/settings.ini",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/aNEWGlobalCoder.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/6 - acc-Examples/Example3_CaretPosition.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/collection/0_V2/README.md",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/3 - tools/Example3 - Resizable Tabs.ahk",
		"/C/Users/dkzea/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/start.ahk",
		"/D/lib/V2/examples/Webview2-example 4.ahk2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/[README].md",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/README.md",
		"/D/lib/V2/examples/Webview2-example 3.ahk2",
		"/D/(github)/GlobalCoder/GlobalCoder/collection/1_myminerva/Minerva-updated/Minerva-main/README.md",
		"/C/Users/dkzea/OneDrive/Desktop/Gdip-master/Gdip-master/Gdip.Tutorial.11-Using.BRAs.to.perform.animations.ahk",
		"/D/(github)/GlobalCoder/GlobalCoder/collection/1_myminerva/Minerva-updated/Minerva-main/settings.ini",
		"/D/(github)/GlobalCoder/GlobalCoder/collection/1_myminerva/gui.ahk",
		"/Z/code/AHK/New folder (2)/readself.ahk",
		"/C/Users/dkzea/OneDrive/Desktop/Gdip-master/Gdip-master/BRA.ahk",
		"/C/Users/dkzea/OneDrive/Desktop/Gdip-master/Gdip-master/Gdip.Tutorial.12-Pixelate.a.bitmap.using.machine.code.ahk",
		"/D/(github)/GlobalCoder/GlobalCoder/collection/1_myminerva/Minerva-updated/Minerva-main/Minerva4.ahk",
		"/D/(github)/GlobalCoder/GlobalCoder/GlobalCoder.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/Recycle Bin/S-1-5-21-3956581196-2760772990-1477779809-1002/$IHDCG4S.ah2",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/Recycle Bin/S-1-5-21-3956581196-2760772990-1477779809-1002/$IB1QYSI.ahk",
		"/C/Users/dkzea/AppData/Roaming/Sublime Text/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
		"/D/lib/extracttext.ahk",
		"/D/(github)/GlobalCoder/GlobalCoder/collection/!xd2tx220_x64/com.ahk",
		"/D/(github)/GlobalCoder/GlobalCoder/collection/!xd2tx220_x64/com2.ahk",
		"/D/$RECYCLE.BIN/S-1-5-21-3956581196-2760772990-1477779809-1002/SQLiteDB_sample.ahk",
		"/D/lib/.msOffice/Excel/Copy_rows_to_new_workbooks.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/3 - Tools & Docs/GlobalCoder - Copy.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/GlobalCoder - Copy.ahk",
		"/D/github/GlobalCoder/GlobalCoder/collection/!!recov/GlobalCoder - Copy.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/github/GlobalCoder/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/ffmpeg-desktop-rec.ahk",
		"/J/ahks/a/(ext)/fb-code.ahk",
		"/J/ahks/a/(ext)/inputbox-FB.ahk",
		"/J/ahks/a/(ext)/gui_info-saved.ahk",
		"/J/ahks/a/(ext)/class_list.ahk",
		"/J/ahks/a/(ext)/class_counter.ahk",
		"/C/Users/dkzea/OneDrive/Desktop/(Timer_counter).ahk",
		"/J/ahks/a/(ext)/class_Collection.ahk",
		"/J/ahks/a/(ext)/obj_from_list_strings.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/3 - Tools & Docs/GlobalCoder.ahk",
		"/D/github/GlobalCoder/GlobalCoder/GlobalCoder.ahk",
		"/D/$RECYCLE.BIN/S-1-5-21-3956581196-2760772990-1477779809-1002/$I4HV29I.ahk",
		"/D/$RECYCLE.BIN/S-1-5-21-3956581196-2760772990-1477779809-1002/$IPXH999.ahk",
		"/D/$RECYCLE.BIN/S-1-5-21-3956581196-2760772990-1477779809-1002/$INHSSIM.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/GlobalCoder.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/Win32-API-Const_AHK_V2/inc/gui_extra_dirs.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/vKeyboard-master/lib/Hotkey/examples/example.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/vKeyboard-master/lib/Hotkey/class_Hotkey.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/VMR/examples/example.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/VMR/examples/hotkey_example.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/VMR/examples/ui_example.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/Websocket-Client/libs/CConsole.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/Win32-API-Const_AHK_V2/inc/header_parser.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/globalcoder.ahk.ini",
		"/D/github/GlobalCoder/GlobalCoder/main/README.md",
		"/D/github/GlobalCoder/GlobalCoder/globalcoder.ahk.ini",
		"/D/github/GlobalCoder/GlobalCoder/.gitignore",
		"/D/github/GlobalCoder/GlobalCoder/!.ahk",
		"/D/github/GlobalCoder/GlobalCoder/CustomMenuFiles/9 - Showcase & Examples/pixelsearch_DLL.ahk",
		"/d/lib/btt.ahk",
		"/D/lib/Vis2.ahk",
		"/C/Users/dkzea/OneDrive/Documents/AutoHotkey/Lib/OCR.ahk",
		"/p/app/app/((start)-class&fn.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/inc/Project.ahk",
		"/D/github/GlobalCoder/GlobalCoder/.git/config",
		"/D/github/GlobalCoder/GlobalCoder/singles/single_files/1_ToDoList.ahk"
	],
	"find":
	{
		"height": 29.6
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"lv("
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/D/globalcoder/0_globalcoder.ahk",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 104121,
						"regions":
						{
						},
						"selection":
						[
							[
								2279,
								2279
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "5d3b8020",
							"lsp_uri": "file:///D:/globalcoder/0_globalcoder.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Autohotkey2.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1674193575.24,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1217.6,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.6
	},
	"input":
	{
		"height": 54.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 108.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "OTHERgc2.sublime-project",
	"replace":
	{
		"height": 56.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"P:\\App\\App\\ws\\tools & WS.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 300.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 317.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
