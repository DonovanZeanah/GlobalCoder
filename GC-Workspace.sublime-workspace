{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"rc",
				"RCtrl"
			],
			[
				"a_",
				"A_Index"
			],
			[
				"Loop",
				"Loop parse"
			],
			[
				"msgb",
				"MsgBox"
			],
			[
				"go",
				"Gosub"
			],
			[
				"sys",
				"SysGet"
			],
			[
				"a_loo",
				"A_LoopFileName"
			],
			[
				"no",
				"NoTrayIcon"
			],
			[
				"work",
				"SetWorkingDir"
			],
			[
				"DE",
				"Destroy"
			],
			[
				"msg",
				"MsgBox"
			],
			[
				"got",
				"Goto"
			],
			[
				"file",
				"FileAppend"
			],
			[
				"close",
				"Close()"
			],
			[
				"gui",
				"Gui"
			],
			[
				"Guic",
				"GuiEscape"
			],
			[
				"guio",
				"GuiClose"
			],
			[
				"hide",
				"HideGUI"
			],
			[
				"ahk_",
				"ahk_exe"
			],
			[
				"setw",
				"SetWorkingDir"
			],
			[
				"a_this",
				"A_ThisFunc"
			],
			[
				"c",
				"CustomMenuFiles"
			],
			[
				"winwai",
				"WinWaitActive"
			],
			[
				"Input",
				"InputBox"
			],
			[
				"input",
				"InputBox"
			],
			[
				"stringre",
				"StringReplace"
			],
			[
				"a_pro",
				"A_ProgramFiles"
			],
			[
				"a_script",
				"A_ScriptFullPath"
			],
			[
				"regexr",
				"RegExReplace()"
			],
			[
				"FileCreate",
				"FileCreateDir"
			],
			[
				"exist",
				"FileExist()"
			],
			[
				"timesin",
				"A_TimeSincePriorHotkey"
			],
			[
				"a_p",
				"A_TimeSincePriorHotkey"
			],
			[
				"a_ho",
				"A_PriorHotkey"
			],
			[
				"fileappen",
				"FileAppend"
			],
			[
				"a_screen",
				"A_ScreenHeight"
			],
			[
				"a_scr",
				"A_ScreenWidth"
			],
			[
				"winget",
				"WinGetTitle"
			],
			[
				"Winget",
				"WinGetTitle"
			],
			[
				"setk",
				"SetKeyDelay"
			],
			[
				"a_pr",
				"A_PriorHotkey"
			],
			[
				"too",
				"ToolTip"
			],
			[
				"string",
				"StringReplace"
			],
			[
				"strre",
				"StrReplace()"
			],
			[
				"repl",
				"StrReplace()"
			],
			[
				"win",
				"WinActivate"
			],
			[
				"change",
				"changeFirstName"
			],
			[
				"rnd",
				"Round()"
			],
			[
				"str",
				"StrSplit()"
			],
			[
				"getke",
				"GetKeyState()"
			],
			[
				"br",
				"Break"
			],
			[
				"ifwi",
				"IfWinActive"
			],
			[
				"winwait",
				"WinWaitActive"
			],
			[
				"caps",
				"CapsLock"
			],
			[
				"Sendi",
				"SendInput"
			],
			[
				"sen",
				"SendMessage"
			],
			[
				"retur",
				"ReturnValue"
			],
			[
				"sendmod",
				"SendMode"
			],
			[
				"contro",
				"ControlList"
			],
			[
				"inire",
				"IniRead"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "-- use hotstring style settup of globalcoder ( creating initial folders, settings, etc with menu)\n-- demo\n\njacks file \"peek\"\n.gcref file -- normal text file\n\n\nultimately GC is the main app -> GC can call helper apps for brief periods, it does this via menu. when helper apps purpose is completed, a GC 'global' *kill all* closes everything not GC.\n\n\nNotesPath = A:\\00_Cloud_Storage\\Dropbox\\Notes\\Obsidian\\Duckland!Inbox\nFileNameExtra = _MUOnote.md Gui, QN:Font, s14 c666666\nGui, QN:Add, Edit, x5 y5 w550 h60 vTitle, Title - Filename\nGui, QN:Font, s12 c444444\nGui, QN:Add, Edit, x5 y70 w550 h600 vNote, %Clipboard%\nGui, QN:Add, Button, x5 y680 w550 h50, OK\nGui, QN:Show, x0 y0 w560 h735, MUONotes\n\nQNButtonOK:\nFileEncoding, UTF-8-RAW\nGui, QN:Submit\nTempClipboard = %ClipBoard%\nClipBoard = %Title%\ngosub CleanText\nFileName = %ClipBoard%\nClipBoard = %TempClipboard%\nFinalFilename = %NotesPath%\\%FileName%%FileNameExtra%\nFileDelete, %FinalFileName%\nFileAppend, %Note%, %FinalFileName%\nreturn\n\n\nCleanText: CleanMePlease = %ClipBoard%\nCleanMePlease := Regexreplace(CleanMePlease, \"a-zA-Z0-9\", \" \")\nloop\n{\nStringReplace, CleanMePlease, CleanMePlease, %A_SPACE%%A_SPACE%, %A_SPACE%, all\nif ErrorLevel <> 0\nbreak\n}\nClipBoard = %CleanMePlease%\nReturn\n\n\n\nghost foldering and notetaking app\n|\n____> checks against archive\n\t\t\t\t\t____> sends to \"notespace\" for manual dissemination\n\t\t\t\t\t____> attempts to auto-compose\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t____>goes into archive",
			"file": "GlobalCoder.txt",
			"file_size": 354,
			"file_write_time": 133185317804675702,
			"settings":
			{
				"buffer_size": 1442,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"insert",
					{
						"characters": "--"
					},
					"AgAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert",
					{
						"characters": " use"
					},
					"BAAAAAIAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgAAAAAAAAACAAAAAAAAAAAAAAAAAPC/"
				],
				[
					6,
					1,
					"insert",
					{
						"characters": " hotstring"
					},
					"CgAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAIAAAAAAAAAAAAAAAIAAAAAAAAAAkAAAAAAAAAAAAAAAkAAAAAAAAACgAAAAAAAAAAAAAACgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgAAAAAAAAAGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABAAAAAAAAAAEQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"insert",
					{
						"characters": "style"
					},
					"BQAAABEAAAAAAAAAEgAAAAAAAAAAAAAAEgAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFQAAAAAAAAAAAAAAFQAAAAAAAAAWAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQAAAAAAAAARAAAAAAAAAAAAAAAAAPC/"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": " settup"
					},
					"BwAAABYAAAAAAAAAFwAAAAAAAAAAAAAAFwAAAAAAAAAYAAAAAAAAAAAAAAAYAAAAAAAAABkAAAAAAAAAAAAAABkAAAAAAAAAGgAAAAAAAAAAAAAAGgAAAAAAAAAbAAAAAAAAAAAAAAAbAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgAAAAAAAAAWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					10,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAB0AAAAAAAAAHgAAAAAAAAAAAAAAHgAAAAAAAAAfAAAAAAAAAAAAAAAfAAAAAAAAACAAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQAAAAAAAAAdAAAAAAAAAAAAAAAAAPC/"
				],
				[
					11,
					1,
					"insert",
					{
						"characters": " globalcoder"
					},
					"DAAAACAAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAiAAAAAAAAAAAAAAAiAAAAAAAAACMAAAAAAAAAAAAAACMAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAlAAAAAAAAAAAAAAAlAAAAAAAAACYAAAAAAAAAAAAAACYAAAAAAAAAJwAAAAAAAAAAAAAAJwAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAArAAAAAAAAAAAAAAArAAAAAAAAACwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIAAAAAAAAAAgAAAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACwAAAAAAAAALQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAAAAAAAAAAsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAC0AAAAAAAAALwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQAAAAAAAAAtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC4AAAAAAAAALwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgAAAAAAAAAuAAAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"insert",
					{
						"characters": "creating"
					},
					"CAAAAC8AAAAAAAAAMAAAAAAAAAAAAAAAMAAAAAAAAAAxAAAAAAAAAAAAAAAxAAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMwAAAAAAAAAAAAAAMwAAAAAAAAA0AAAAAAAAAAAAAAA0AAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANgAAAAAAAAAAAAAANgAAAAAAAAA3AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwAAAAAAAAAvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": " initial"
					},
					"CAAAADcAAAAAAAAAOAAAAAAAAAAAAAAAOAAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADoAAAAAAAAAAAAAADoAAAAAAAAAOwAAAAAAAAAAAAAAOwAAAAAAAAA8AAAAAAAAAAAAAAA8AAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPgAAAAAAAAAAAAAAPgAAAAAAAAA/AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwAAAAAAAAA3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " folders,"
					},
					"CQAAAD8AAAAAAAAAQAAAAAAAAAAAAAAAQAAAAAAAAABBAAAAAAAAAAAAAABBAAAAAAAAAEIAAAAAAAAAAAAAAEIAAAAAAAAAQwAAAAAAAAAAAAAAQwAAAAAAAABEAAAAAAAAAAAAAABEAAAAAAAAAEUAAAAAAAAAAAAAAEUAAAAAAAAARgAAAAAAAAAAAAAARgAAAAAAAABHAAAAAAAAAAAAAABHAAAAAAAAAEgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPwAAAAAAAAA/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " settings,"
					},
					"CgAAAEgAAAAAAAAASQAAAAAAAAAAAAAASQAAAAAAAABKAAAAAAAAAAAAAABKAAAAAAAAAEsAAAAAAAAAAAAAAEsAAAAAAAAATAAAAAAAAAAAAAAATAAAAAAAAABNAAAAAAAAAAAAAABNAAAAAAAAAE4AAAAAAAAAAAAAAE4AAAAAAAAATwAAAAAAAAAAAAAATwAAAAAAAABQAAAAAAAAAAAAAABQAAAAAAAAAFEAAAAAAAAAAAAAAFEAAAAAAAAAUgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAAAAAAAAABIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFIAAAAAAAAAUwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUgAAAAAAAABSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "etc"
					},
					"AwAAAFMAAAAAAAAAVAAAAAAAAAAAAAAAVAAAAAAAAABVAAAAAAAAAAAAAABVAAAAAAAAAFYAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwAAAAAAAABTAAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " with"
					},
					"BQAAAFYAAAAAAAAAVwAAAAAAAAAAAAAAVwAAAAAAAABYAAAAAAAAAAAAAABYAAAAAAAAAFkAAAAAAAAAAAAAAFkAAAAAAAAAWgAAAAAAAAAAAAAAWgAAAAAAAABbAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVgAAAAAAAABWAAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " menu"
					},
					"BQAAAFsAAAAAAAAAXAAAAAAAAAAAAAAAXAAAAAAAAABdAAAAAAAAAAAAAABdAAAAAAAAAF4AAAAAAAAAAAAAAF4AAAAAAAAAXwAAAAAAAAAAAAAAXwAAAAAAAABgAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwAAAAAAAABbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": "\n--"
					},
					"AwAAAGEAAAAAAAAAYgAAAAAAAAAAAAAAYgAAAAAAAABjAAAAAAAAAAAAAABjAAAAAAAAAGQAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYQAAAAAAAABhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": " demo"
					},
					"BQAAAGQAAAAAAAAAZQAAAAAAAAAAAAAAZQAAAAAAAABmAAAAAAAAAAAAAABmAAAAAAAAAGcAAAAAAAAAAAAAAGcAAAAAAAAAaAAAAAAAAAAAAAAAaAAAAAAAAABpAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAAAAAAAAABkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": "\n\njack"
					},
					"BgAAAGkAAAAAAAAAagAAAAAAAAAAAAAAagAAAAAAAABrAAAAAAAAAAAAAABrAAAAAAAAAGwAAAAAAAAAAAAAAGwAAAAAAAAAbQAAAAAAAAAAAAAAbQAAAAAAAABuAAAAAAAAAAAAAABuAAAAAAAAAG8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaQAAAAAAAABpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAG8AAAAAAAAAcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbwAAAAAAAABvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHAAAAAAAAAAcQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcAAAAAAAAABwAAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHEAAAAAAAAAcwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAHEAAAAAAAAAcQAAAAAAAAABAAAAKHEAAAAAAAAAcQAAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAHEAAAAAAAAAcwAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "PEE"
					},
					"AwAAAHIAAAAAAAAAcwAAAAAAAAAAAAAAcwAAAAAAAAB0AAAAAAAAAAAAAAB0AAAAAAAAAHUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					3,
					"left_delete",
					null,
					"AwAAAHQAAAAAAAAAdAAAAAAAAAABAAAARXMAAAAAAAAAcwAAAAAAAAABAAAARXIAAAAAAAAAcgAAAAAAAAABAAAAUA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"run_macro_file",
					{
						"file": "res://Packages/Default/Delete Left Right.sublime-macro"
					},
					"AgAAAHEAAAAAAAAAcQAAAAAAAAABAAAAInEAAAAAAAAAcQAAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAcgAAAAAAAAByAAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "file"
					},
					"BAAAAHEAAAAAAAAAcgAAAAAAAAAAAAAAcgAAAAAAAABzAAAAAAAAAAAAAABzAAAAAAAAAHQAAAAAAAAAAAAAAHQAAAAAAAAAdQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcQAAAAAAAABxAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHUAAAAAAAAAdgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdQAAAAAAAAB1AAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAHYAAAAAAAAAeAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdgAAAAAAAAB2AAAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "peek"
					},
					"BAAAAHcAAAAAAAAAeAAAAAAAAAAAAAAAeAAAAAAAAAB5AAAAAAAAAAAAAAB5AAAAAAAAAHoAAAAAAAAAAAAAAHoAAAAAAAAAewAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdwAAAAAAAAB3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "\n."
					},
					"AgAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAAB+AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfAAAAAAAAAB8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": "display"
					},
					"BwAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACDAAAAAAAAAAAAAACDAAAAAAAAAIQAAAAAAAAAAAAAAIQAAAAAAAAAhQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					6,
					"left_delete",
					null,
					"BgAAAIQAAAAAAAAAhAAAAAAAAAABAAAAeYMAAAAAAAAAgwAAAAAAAAABAAAAYYIAAAAAAAAAggAAAAAAAAABAAAAbIEAAAAAAAAAgQAAAAAAAAABAAAAcIAAAAAAAAAAgAAAAAAAAAABAAAAc38AAAAAAAAAfwAAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAhQAAAAAAAACFAAAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AgAAAH8AAAAAAAAAgAAAAAAAAAAAAAAAgAAAAAAAAACBAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfwAAAAAAAAB/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					3,
					"left_delete",
					null,
					"AwAAAIAAAAAAAAAAgAAAAAAAAAABAAAAZX8AAAAAAAAAfwAAAAAAAAABAAAAcn4AAAAAAAAAfgAAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAgQAAAAAAAACBAAAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "gcref"
					},
					"BQAAAH4AAAAAAAAAfwAAAAAAAAAAAAAAfwAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAIEAAAAAAAAAAAAAAIEAAAAAAAAAggAAAAAAAAAAAAAAggAAAAAAAACDAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgAAAAAAAAB+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": " file"
					},
					"BQAAAIMAAAAAAAAAhAAAAAAAAAAAAAAAhAAAAAAAAACFAAAAAAAAAAAAAACFAAAAAAAAAIYAAAAAAAAAAAAAAIYAAAAAAAAAhwAAAAAAAAAAAAAAhwAAAAAAAACIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgwAAAAAAAACDAAAAAAAAAAAAAAAAAPC/"
				],
				[
					49,
					1,
					"insert",
					{
						"characters": " --"
					},
					"AwAAAIgAAAAAAAAAiQAAAAAAAAAAAAAAiQAAAAAAAACKAAAAAAAAAAAAAACKAAAAAAAAAIsAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAAAAAAAAACIAAAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": " normal"
					},
					"BwAAAIsAAAAAAAAAjAAAAAAAAAAAAAAAjAAAAAAAAACNAAAAAAAAAAAAAACNAAAAAAAAAI4AAAAAAAAAAAAAAI4AAAAAAAAAjwAAAAAAAAAAAAAAjwAAAAAAAACQAAAAAAAAAAAAAACQAAAAAAAAAJEAAAAAAAAAAAAAAJEAAAAAAAAAkgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiwAAAAAAAACLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": " text"
					},
					"BQAAAJIAAAAAAAAAkwAAAAAAAAAAAAAAkwAAAAAAAACUAAAAAAAAAAAAAACUAAAAAAAAAJUAAAAAAAAAAAAAAJUAAAAAAAAAlgAAAAAAAAAAAAAAlgAAAAAAAACXAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkgAAAAAAAACSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " file"
					},
					"BQAAAJcAAAAAAAAAmAAAAAAAAAAAAAAAmAAAAAAAAACZAAAAAAAAAAAAAACZAAAAAAAAAJoAAAAAAAAAAAAAAJoAAAAAAAAAmwAAAAAAAAAAAAAAmwAAAAAAAACcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwAAAAAAAACXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "\n\n\nultima"
					},
					"CQAAAJwAAAAAAAAAnQAAAAAAAAAAAAAAnQAAAAAAAACeAAAAAAAAAAAAAACeAAAAAAAAAJ8AAAAAAAAAAAAAAJ8AAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAAChAAAAAAAAAAAAAAChAAAAAAAAAKIAAAAAAAAAAAAAAKIAAAAAAAAAowAAAAAAAAAAAAAAowAAAAAAAACkAAAAAAAAAAAAAACkAAAAAAAAAKUAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnAAAAAAAAACcAAAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "tely"
					},
					"BAAAAKUAAAAAAAAApgAAAAAAAAAAAAAApgAAAAAAAACnAAAAAAAAAAAAAACnAAAAAAAAAKgAAAAAAAAAAAAAAKgAAAAAAAAAqQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQAAAAAAAAClAAAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " GC"
					},
					"AwAAAKkAAAAAAAAAqgAAAAAAAAAAAAAAqgAAAAAAAACrAAAAAAAAAAAAAACrAAAAAAAAAKwAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQAAAAAAAACpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAKwAAAAAAAAArQAAAAAAAAAAAAAArQAAAAAAAACuAAAAAAAAAAAAAACuAAAAAAAAAK8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArAAAAAAAAACsAAAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAK8AAAAAAAAAsAAAAAAAAAAAAAAAsAAAAAAAAACxAAAAAAAAAAAAAACxAAAAAAAAALIAAAAAAAAAAAAAALIAAAAAAAAAswAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArwAAAAAAAACvAAAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": " main"
					},
					"BQAAALMAAAAAAAAAtAAAAAAAAAAAAAAAtAAAAAAAAAC1AAAAAAAAAAAAAAC1AAAAAAAAALYAAAAAAAAAAAAAALYAAAAAAAAAtwAAAAAAAAAAAAAAtwAAAAAAAAC4AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAswAAAAAAAACzAAAAAAAAAAAAAAAAAPC/"
				],
				[
					59,
					1,
					"insert",
					{
						"characters": " app"
					},
					"BAAAALgAAAAAAAAAuQAAAAAAAAAAAAAAuQAAAAAAAAC6AAAAAAAAAAAAAAC6AAAAAAAAALsAAAAAAAAAAAAAALsAAAAAAAAAvAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAAAAAAAAAC4AAAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert",
					{
						"characters": " ->"
					},
					"AwAAALwAAAAAAAAAvQAAAAAAAAAAAAAAvQAAAAAAAAC+AAAAAAAAAAAAAAC+AAAAAAAAAL8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvAAAAAAAAAC8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": " GC"
					},
					"AwAAAL8AAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAADBAAAAAAAAAAAAAADBAAAAAAAAAMIAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwAAAAAAAAC/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					62,
					1,
					"insert",
					{
						"characters": " can"
					},
					"BAAAAMIAAAAAAAAAwwAAAAAAAAAAAAAAwwAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMUAAAAAAAAAAAAAAMUAAAAAAAAAxgAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgAAAAAAAADCAAAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": " call"
					},
					"BQAAAMYAAAAAAAAAxwAAAAAAAAAAAAAAxwAAAAAAAADIAAAAAAAAAAAAAADIAAAAAAAAAMkAAAAAAAAAAAAAAMkAAAAAAAAAygAAAAAAAAAAAAAAygAAAAAAAADLAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxgAAAAAAAADGAAAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " helper"
					},
					"BwAAAMsAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAADNAAAAAAAAAAAAAADNAAAAAAAAAM4AAAAAAAAAAAAAAM4AAAAAAAAAzwAAAAAAAAAAAAAAzwAAAAAAAADQAAAAAAAAAAAAAADQAAAAAAAAANEAAAAAAAAAAAAAANEAAAAAAAAA0gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywAAAAAAAADLAAAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": " apps"
					},
					"BQAAANIAAAAAAAAA0wAAAAAAAAAAAAAA0wAAAAAAAADUAAAAAAAAAAAAAADUAAAAAAAAANUAAAAAAAAAAAAAANUAAAAAAAAA1gAAAAAAAAAAAAAA1gAAAAAAAADXAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gAAAAAAAADSAAAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAANcAAAAAAAAA2AAAAAAAAAAAAAAA2AAAAAAAAADZAAAAAAAAAAAAAADZAAAAAAAAANoAAAAAAAAAAAAAANoAAAAAAAAA2wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wAAAAAAAADXAAAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"insert",
					{
						"characters": " brief"
					},
					"BgAAANsAAAAAAAAA3AAAAAAAAAAAAAAA3AAAAAAAAADdAAAAAAAAAAAAAADdAAAAAAAAAN4AAAAAAAAAAAAAAN4AAAAAAAAA3wAAAAAAAAAAAAAA3wAAAAAAAADgAAAAAAAAAAAAAADgAAAAAAAAAOEAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wAAAAAAAADbAAAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": " periods"
					},
					"CAAAAOEAAAAAAAAA4gAAAAAAAAAAAAAA4gAAAAAAAADjAAAAAAAAAAAAAADjAAAAAAAAAOQAAAAAAAAAAAAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAOcAAAAAAAAA6AAAAAAAAAAAAAAA6AAAAAAAAADpAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QAAAAAAAADhAAAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOkAAAAAAAAA6gAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QAAAAAAAADpAAAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": " it"
					},
					"AwAAAOoAAAAAAAAA6wAAAAAAAAAAAAAA6wAAAAAAAADsAAAAAAAAAAAAAADsAAAAAAAAAO0AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gAAAAAAAADqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": " does"
					},
					"BQAAAO0AAAAAAAAA7gAAAAAAAAAAAAAA7gAAAAAAAADvAAAAAAAAAAAAAADvAAAAAAAAAPAAAAAAAAAAAAAAAPAAAAAAAAAA8QAAAAAAAAAAAAAA8QAAAAAAAADyAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QAAAAAAAADtAAAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " this"
					},
					"BQAAAPIAAAAAAAAA8wAAAAAAAAAAAAAA8wAAAAAAAAD0AAAAAAAAAAAAAAD0AAAAAAAAAPUAAAAAAAAAAAAAAPUAAAAAAAAA9gAAAAAAAAAAAAAA9gAAAAAAAAD3AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8gAAAAAAAADyAAAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"insert",
					{
						"characters": " viaq"
					},
					"BQAAAPcAAAAAAAAA+AAAAAAAAAAAAAAA+AAAAAAAAAD5AAAAAAAAAAAAAAD5AAAAAAAAAPoAAAAAAAAAAAAAAPoAAAAAAAAA+wAAAAAAAAAAAAAA+wAAAAAAAAD8AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9wAAAAAAAAD3AAAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"left_delete",
					null,
					"AQAAAPsAAAAAAAAA+wAAAAAAAAABAAAAcQ",
					"AQAAAAAAAAABAAAA/AAAAAAAAAD8AAAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " menu"
					},
					"BQAAAPsAAAAAAAAA/AAAAAAAAAAAAAAA/AAAAAAAAAD9AAAAAAAAAAAAAAD9AAAAAAAAAP4AAAAAAAAAAAAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA/wAAAAAAAAAAAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wAAAAAAAAD7AAAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAAABAAAAAAAAAQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAEAAAAAAAAAAQAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": " when"
					},
					"BQAAAAEBAAAAAAAAAgEAAAAAAAAAAAAAAgEAAAAAAAADAQAAAAAAAAAAAAADAQAAAAAAAAQBAAAAAAAAAAAAAAQBAAAAAAAABQEAAAAAAAAAAAAABQEAAAAAAAAGAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAQEAAAAAAAABAQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": " helper"
					},
					"BwAAAAYBAAAAAAAABwEAAAAAAAAAAAAABwEAAAAAAAAIAQAAAAAAAAAAAAAIAQAAAAAAAAkBAAAAAAAAAAAAAAkBAAAAAAAACgEAAAAAAAAAAAAACgEAAAAAAAALAQAAAAAAAAAAAAALAQAAAAAAAAwBAAAAAAAAAAAAAAwBAAAAAAAADQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgEAAAAAAAAGAQAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " app"
					},
					"BAAAAA0BAAAAAAAADgEAAAAAAAAAAAAADgEAAAAAAAAPAQAAAAAAAAAAAAAPAQAAAAAAABABAAAAAAAAAAAAABABAAAAAAAAEQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQEAAAAAAAANAQAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"insert",
					{
						"characters": " functionaqlit"
					},
					"DgAAABEBAAAAAAAAEgEAAAAAAAAAAAAAEgEAAAAAAAATAQAAAAAAAAAAAAATAQAAAAAAABQBAAAAAAAAAAAAABQBAAAAAAAAFQEAAAAAAAAAAAAAFQEAAAAAAAAWAQAAAAAAAAAAAAAWAQAAAAAAABcBAAAAAAAAAAAAABcBAAAAAAAAGAEAAAAAAAAAAAAAGAEAAAAAAAAZAQAAAAAAAAAAAAAZAQAAAAAAABoBAAAAAAAAAAAAABoBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAAB0BAAAAAAAAAAAAAB0BAAAAAAAAHgEAAAAAAAAAAAAAHgEAAAAAAAAfAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQEAAAAAAAARAQAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					12,
					"left_delete",
					null,
					"DAAAAB4BAAAAAAAAHgEAAAAAAAABAAAAdB0BAAAAAAAAHQEAAAAAAAABAAAAaRwBAAAAAAAAHAEAAAAAAAABAAAAbBsBAAAAAAAAGwEAAAAAAAABAAAAcRoBAAAAAAAAGgEAAAAAAAABAAAAYRkBAAAAAAAAGQEAAAAAAAABAAAAbhgBAAAAAAAAGAEAAAAAAAABAAAAbxcBAAAAAAAAFwEAAAAAAAABAAAAaRYBAAAAAAAAFgEAAAAAAAABAAAAdBUBAAAAAAAAFQEAAAAAAAABAAAAYxQBAAAAAAAAFAEAAAAAAAABAAAAbhMBAAAAAAAAEwEAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAAHwEAAAAAAAAfAQAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					2,
					"left_delete",
					null,
					"AgAAABIBAAAAAAAAEgEAAAAAAAABAAAAZhEBAAAAAAAAEQEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAEwEAAAAAAAATAQAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAABEBAAAAAAAAEgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQEAAAAAAAARAQAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": " purpose"
					},
					"CAAAABIBAAAAAAAAEwEAAAAAAAAAAAAAEwEAAAAAAAAUAQAAAAAAAAAAAAAUAQAAAAAAABUBAAAAAAAAAAAAABUBAAAAAAAAFgEAAAAAAAAAAAAAFgEAAAAAAAAXAQAAAAAAAAAAAAAXAQAAAAAAABgBAAAAAAAAAAAAABgBAAAAAAAAGQEAAAAAAAAAAAAAGQEAAAAAAAAaAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgEAAAAAAAASAQAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAABoBAAAAAAAAGwEAAAAAAAAAAAAAGwEAAAAAAAAcAQAAAAAAAAAAAAAcAQAAAAAAAB0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgEAAAAAAAAaAQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": " completed"
					},
					"CgAAAB0BAAAAAAAAHgEAAAAAAAAAAAAAHgEAAAAAAAAfAQAAAAAAAAAAAAAfAQAAAAAAACABAAAAAAAAAAAAACABAAAAAAAAIQEAAAAAAAAAAAAAIQEAAAAAAAAiAQAAAAAAAAAAAAAiAQAAAAAAACMBAAAAAAAAAAAAACMBAAAAAAAAJAEAAAAAAAAAAAAAJAEAAAAAAAAlAQAAAAAAAAAAAAAlAQAAAAAAACYBAAAAAAAAAAAAACYBAAAAAAAAJwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQEAAAAAAAAdAQAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACcBAAAAAAAAKAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwEAAAAAAAAnAQAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAACgBAAAAAAAAKQEAAAAAAAAAAAAAKQEAAAAAAAAqAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAEAAAAAAAAoAQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " GC"
					},
					"AwAAACoBAAAAAAAAKwEAAAAAAAAAAAAAKwEAAAAAAAAsAQAAAAAAAAAAAAAsAQAAAAAAAC0BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgEAAAAAAAAqAQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAC0BAAAAAAAALgEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQEAAAAAAAAtAQAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAC4BAAAAAAAAMAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgEAAAAAAAAuAQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "global"
					},
					"BgAAAC8BAAAAAAAAMAEAAAAAAAAAAAAAMAEAAAAAAAAxAQAAAAAAAAAAAAAxAQAAAAAAADIBAAAAAAAAAAAAADIBAAAAAAAAMwEAAAAAAAAAAAAAMwEAAAAAAAA0AQAAAAAAAAAAAAA0AQAAAAAAADUBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALwEAAAAAAAAvAQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADYBAAAAAAAANwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgEAAAAAAAA2AQAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "*kill"
					},
					"BQAAADcBAAAAAAAAOAEAAAAAAAAAAAAAOAEAAAAAAAA5AQAAAAAAAAAAAAA5AQAAAAAAADoBAAAAAAAAAAAAADoBAAAAAAAAOwEAAAAAAAAAAAAAOwEAAAAAAAA8AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANwEAAAAAAAA3AQAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					1,
					"insert",
					{
						"characters": " all*"
					},
					"BQAAADwBAAAAAAAAPQEAAAAAAAAAAAAAPQEAAAAAAAA+AQAAAAAAAAAAAAA+AQAAAAAAAD8BAAAAAAAAAAAAAD8BAAAAAAAAQAEAAAAAAAAAAAAAQAEAAAAAAABBAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAEAAAAAAAA8AQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " shu"
					},
					"BAAAAEEBAAAAAAAAQgEAAAAAAAAAAAAAQgEAAAAAAABDAQAAAAAAAAAAAABDAQAAAAAAAEQBAAAAAAAAAAAAAEQBAAAAAAAARQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQEAAAAAAABBAQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					3,
					"left_delete",
					null,
					"AwAAAEQBAAAAAAAARAEAAAAAAAABAAAAdUMBAAAAAAAAQwEAAAAAAAABAAAAaEIBAAAAAAAAQgEAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAARQEAAAAAAABFAQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": "closes"
					},
					"BgAAAEIBAAAAAAAAQwEAAAAAAAAAAAAAQwEAAAAAAABEAQAAAAAAAAAAAABEAQAAAAAAAEUBAAAAAAAAAAAAAEUBAAAAAAAARgEAAAAAAAAAAAAARgEAAAAAAABHAQAAAAAAAAAAAABHAQAAAAAAAEgBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQgEAAAAAAABCAQAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": " everything"
					},
					"CwAAAEgBAAAAAAAASQEAAAAAAAAAAAAASQEAAAAAAABKAQAAAAAAAAAAAABKAQAAAAAAAEsBAAAAAAAAAAAAAEsBAAAAAAAATAEAAAAAAAAAAAAATAEAAAAAAABNAQAAAAAAAAAAAABNAQAAAAAAAE4BAAAAAAAAAAAAAE4BAAAAAAAATwEAAAAAAAAAAAAATwEAAAAAAABQAQAAAAAAAAAAAABQAQAAAAAAAFEBAAAAAAAAAAAAAFEBAAAAAAAAUgEAAAAAAAAAAAAAUgEAAAAAAABTAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASAEAAAAAAABIAQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " not"
					},
					"BAAAAFMBAAAAAAAAVAEAAAAAAAAAAAAAVAEAAAAAAABVAQAAAAAAAAAAAABVAQAAAAAAAFYBAAAAAAAAAAAAAFYBAAAAAAAAVwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUwEAAAAAAABTAQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " GC."
					},
					"BAAAAFcBAAAAAAAAWAEAAAAAAAAAAAAAWAEAAAAAAABZAQAAAAAAAAAAAABZAQAAAAAAAFoBAAAAAAAAAAAAAFoBAAAAAAAAWwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwEAAAAAAABXAQAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": "\n\n\n"
					},
					"AwAAAFsBAAAAAAAAXAEAAAAAAAAAAAAAXAEAAAAAAABdAQAAAAAAAAAAAABdAQAAAAAAAF4BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWwEAAAAAAABbAQAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"paste",
					null,
					"AQAAAF4BAAAAAAAAtwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXgEAAAAAAABeAQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "\n\n\n\n\nghost"
					},
					"CgAAALcCAAAAAAAAuAIAAAAAAAAAAAAAuAIAAAAAAAC5AgAAAAAAAAAAAAC5AgAAAAAAALoCAAAAAAAAAAAAALoCAAAAAAAAuwIAAAAAAAAAAAAAuwIAAAAAAAC8AgAAAAAAAAAAAAC8AgAAAAAAAL0CAAAAAAAAAAAAAL0CAAAAAAAAvgIAAAAAAAAAAAAAvgIAAAAAAAC/AgAAAAAAAAAAAAC/AgAAAAAAAMACAAAAAAAAAAAAAMACAAAAAAAAwQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtwIAAAAAAAC3AgAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": " foldering"
					},
					"CgAAAMECAAAAAAAAwgIAAAAAAAAAAAAAwgIAAAAAAADDAgAAAAAAAAAAAADDAgAAAAAAAMQCAAAAAAAAAAAAAMQCAAAAAAAAxQIAAAAAAAAAAAAAxQIAAAAAAADGAgAAAAAAAAAAAADGAgAAAAAAAMcCAAAAAAAAAAAAAMcCAAAAAAAAyAIAAAAAAAAAAAAAyAIAAAAAAADJAgAAAAAAAAAAAADJAgAAAAAAAMoCAAAAAAAAAAAAAMoCAAAAAAAAywIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQIAAAAAAADBAgAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAAMsCAAAAAAAAzAIAAAAAAAAAAAAAzAIAAAAAAADNAgAAAAAAAAAAAADNAgAAAAAAAM4CAAAAAAAAAAAAAM4CAAAAAAAAzwIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywIAAAAAAADLAgAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " notetaking"
					},
					"CwAAAM8CAAAAAAAA0AIAAAAAAAAAAAAA0AIAAAAAAADRAgAAAAAAAAAAAADRAgAAAAAAANICAAAAAAAAAAAAANICAAAAAAAA0wIAAAAAAAAAAAAA0wIAAAAAAADUAgAAAAAAAAAAAADUAgAAAAAAANUCAAAAAAAAAAAAANUCAAAAAAAA1gIAAAAAAAAAAAAA1gIAAAAAAADXAgAAAAAAAAAAAADXAgAAAAAAANgCAAAAAAAAAAAAANgCAAAAAAAA2QIAAAAAAAAAAAAA2QIAAAAAAADaAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzwIAAAAAAADPAgAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": " app"
					},
					"BAAAANoCAAAAAAAA2wIAAAAAAAAAAAAA2wIAAAAAAADcAgAAAAAAAAAAAADcAgAAAAAAAN0CAAAAAAAAAAAAAN0CAAAAAAAA3gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gIAAAAAAADaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAN4CAAAAAAAA3wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gIAAAAAAADeAgAAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert",
					{
						"characters": "|"
					},
					"AQAAAN8CAAAAAAAA4AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3wIAAAAAAADfAgAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "\n__"
					},
					"AwAAAOACAAAAAAAA4QIAAAAAAAAAAAAA4QIAAAAAAADiAgAAAAAAAAAAAADiAgAAAAAAAOMCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AIAAAAAAADgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "__>"
					},
					"AwAAAOMCAAAAAAAA5AIAAAAAAAAAAAAA5AIAAAAAAADlAgAAAAAAAAAAAADlAgAAAAAAAOYCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wIAAAAAAADjAgAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAOYCAAAAAAAA5wIAAAAAAAAAAAAA5wIAAAAAAADoAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gIAAAAAAADmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": "ends"
					},
					"BAAAAOgCAAAAAAAA6QIAAAAAAAAAAAAA6QIAAAAAAADqAgAAAAAAAAAAAADqAgAAAAAAAOsCAAAAAAAAAAAAAOsCAAAAAAAA7AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6AIAAAAAAADoAgAAAAAAAAAAAAAAAPC/"
				],
				[
					127,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAOwCAAAAAAAA7QIAAAAAAAAAAAAA7QIAAAAAAADuAgAAAAAAAAAAAADuAgAAAAAAAO8CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7AIAAAAAAADsAgAAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert",
					{
						"characters": " n"
					},
					"AgAAAO8CAAAAAAAA8AIAAAAAAAAAAAAA8AIAAAAAAADxAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7wIAAAAAAADvAgAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"left_delete",
					null,
					"AQAAAPACAAAAAAAA8AIAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAA8QIAAAAAAADxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAPACAAAAAAAA8gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AIAAAAAAADwAgAAAAAAAAAAAAAAAPC/"
				],
				[
					131,
					1,
					"insert",
					{
						"characters": "notespace"
					},
					"CQAAAPECAAAAAAAA8gIAAAAAAAAAAAAA8gIAAAAAAADzAgAAAAAAAAAAAADzAgAAAAAAAPQCAAAAAAAAAAAAAPQCAAAAAAAA9QIAAAAAAAAAAAAA9QIAAAAAAAD2AgAAAAAAAAAAAAD2AgAAAAAAAPcCAAAAAAAAAAAAAPcCAAAAAAAA+AIAAAAAAAAAAAAA+AIAAAAAAAD5AgAAAAAAAAAAAAD5AgAAAAAAAPoCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8QIAAAAAAADxAgAAAAAAAAAAAAAAAPC/"
				],
				[
					140,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPsCAAAAAAAA/AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wIAAAAAAAD7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					141,
					1,
					"reindent",
					null,
					"AQAAAPwCAAAAAAAA/QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/AIAAAAAAAD8AgAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "\t\t\t"
					},
					"AwAAAP0CAAAAAAAA/gIAAAAAAAAAAAAA/gIAAAAAAAD/AgAAAAAAAAAAAAD/AgAAAAAAAAADAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QIAAAAAAAD9AgAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"paste",
					null,
					"AQAAAAADAAAAAAAABQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "\t\t\t\t"
					},
					"BAAAAAADAAAAAAAAAQMAAAAAAAAAAAAAAQMAAAAAAAACAwAAAAAAAAAAAAACAwAAAAAAAAMDAAAAAAAAAAAAAAMDAAAAAAAABAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAMAAAAAAAAAAwAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": "goes"
					},
					"BAAAAAkDAAAAAAAACgMAAAAAAAAAAAAACgMAAAAAAAALAwAAAAAAAAAAAAALAwAAAAAAAAwDAAAAAAAAAAAAAAwDAAAAAAAADQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQMAAAAAAAAJAwAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": " into"
					},
					"BQAAAA0DAAAAAAAADgMAAAAAAAAAAAAADgMAAAAAAAAPAwAAAAAAAAAAAAAPAwAAAAAAABADAAAAAAAAAAAAABADAAAAAAAAEQMAAAAAAAAAAAAAEQMAAAAAAAASAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADQMAAAAAAAANAwAAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": " archive"
					},
					"CAAAABIDAAAAAAAAEwMAAAAAAAAAAAAAEwMAAAAAAAAUAwAAAAAAAAAAAAAUAwAAAAAAABUDAAAAAAAAAAAAABUDAAAAAAAAFgMAAAAAAAAAAAAAFgMAAAAAAAAXAwAAAAAAAAAAAAAXAwAAAAAAABgDAAAAAAAAAAAAABgDAAAAAAAAGQMAAAAAAAAAAAAAGQMAAAAAAAAaAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgMAAAAAAAASAwAAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAOACAAAAAAAA4QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4AIAAAAAAADgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"paste",
					null,
					"AQAAAOECAAAAAAAA5gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4QIAAAAAAADhAgAAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert",
					{
						"characters": " checks"
					},
					"BwAAAOYCAAAAAAAA5wIAAAAAAAAAAAAA5wIAAAAAAADoAgAAAAAAAAAAAADoAgAAAAAAAOkCAAAAAAAAAAAAAOkCAAAAAAAA6gIAAAAAAAAAAAAA6gIAAAAAAADrAgAAAAAAAAAAAADrAgAAAAAAAOwCAAAAAAAAAAAAAOwCAAAAAAAA7QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5gIAAAAAAADmAgAAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": " against"
					},
					"CAAAAO0CAAAAAAAA7gIAAAAAAAAAAAAA7gIAAAAAAADvAgAAAAAAAAAAAADvAgAAAAAAAPACAAAAAAAAAAAAAPACAAAAAAAA8QIAAAAAAAAAAAAA8QIAAAAAAADyAgAAAAAAAAAAAADyAgAAAAAAAPMCAAAAAAAAAAAAAPMCAAAAAAAA9AIAAAAAAAAAAAAA9AIAAAAAAAD1AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QIAAAAAAADtAgAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": " art"
					},
					"BAAAAPUCAAAAAAAA9gIAAAAAAAAAAAAA9gIAAAAAAAD3AgAAAAAAAAAAAAD3AgAAAAAAAPgCAAAAAAAAAAAAAPgCAAAAAAAA+QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9QIAAAAAAAD1AgAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"left_delete",
					null,
					"AQAAAPgCAAAAAAAA+AIAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA+QIAAAAAAAD5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "chive"
					},
					"BQAAAPgCAAAAAAAA+QIAAAAAAAAAAAAA+QIAAAAAAAD6AgAAAAAAAAAAAAD6AgAAAAAAAPsCAAAAAAAAAAAAAPsCAAAAAAAA/AIAAAAAAAAAAAAA/AIAAAAAAAD9AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+AIAAAAAAAD4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAP0CAAAAAAAA/gIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QIAAAAAAAD9AgAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"left_delete",
					null,
					"AQAAAP4CAAAAAAAA/gIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAA/wIAAAAAAAD/AgAAAAAAAAAAAAAAAAAA"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "\t\t\t\t\t"
					},
					"BQAAAP4CAAAAAAAA/wIAAAAAAAAAAAAA/wIAAAAAAAAAAwAAAAAAAAAAAAAAAwAAAAAAAAEDAAAAAAAAAAAAAAEDAAAAAAAAAgMAAAAAAAAAAAAAAgMAAAAAAAADAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gIAAAAAAAD+AgAAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACYDAAAAAAAAJwMAAAAAAAAAAAAAJwMAAAAAAAAvAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJgMAAAAAAAAmAwAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAB0DAAAAAAAAHgMAAAAAAAAAAAAAHgMAAAAAAAAfAwAAAAAAAAAAAAAfAwAAAAAAACADAAAAAAAAAAAAACADAAAAAAAAIQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHQMAAAAAAAAdAwAAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": " maqnual"
					},
					"CAAAACEDAAAAAAAAIgMAAAAAAAAAAAAAIgMAAAAAAAAjAwAAAAAAAAAAAAAjAwAAAAAAACQDAAAAAAAAAAAAACQDAAAAAAAAJQMAAAAAAAAAAAAAJQMAAAAAAAAmAwAAAAAAAAAAAAAmAwAAAAAAACcDAAAAAAAAAAAAACcDAAAAAAAAKAMAAAAAAAAAAAAAKAMAAAAAAAApAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIQMAAAAAAAAhAwAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					5,
					"left_delete",
					null,
					"BQAAACgDAAAAAAAAKAMAAAAAAAABAAAAbCcDAAAAAAAAJwMAAAAAAAABAAAAYSYDAAAAAAAAJgMAAAAAAAABAAAAdSUDAAAAAAAAJQMAAAAAAAABAAAAbiQDAAAAAAAAJAMAAAAAAAABAAAAcQ",
					"AQAAAAAAAAABAAAAKQMAAAAAAAApAwAAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert",
					{
						"characters": "ual"
					},
					"AwAAACQDAAAAAAAAJQMAAAAAAAAAAAAAJQMAAAAAAAAmAwAAAAAAAAAAAAAmAwAAAAAAACcDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAMAAAAAAAAkAwAAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"insert",
					{
						"characters": " clea"
					},
					"BQAAACcDAAAAAAAAKAMAAAAAAAAAAAAAKAMAAAAAAAApAwAAAAAAAAAAAAApAwAAAAAAACoDAAAAAAAAAAAAACoDAAAAAAAAKwMAAAAAAAAAAAAAKwMAAAAAAAAsAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwMAAAAAAAAnAwAAAAAAAAAAAAAAAPC/"
				],
				[
					173,
					8,
					"left_delete",
					null,
					"CAAAACsDAAAAAAAAKwMAAAAAAAABAAAAYSoDAAAAAAAAKgMAAAAAAAABAAAAZSkDAAAAAAAAKQMAAAAAAAABAAAAbCgDAAAAAAAAKAMAAAAAAAABAAAAYycDAAAAAAAAJwMAAAAAAAABAAAAICYDAAAAAAAAJgMAAAAAAAABAAAAbCUDAAAAAAAAJQMAAAAAAAABAAAAYSQDAAAAAAAAJAMAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAALAMAAAAAAAAsAwAAAAAAAAAAAAAAAPC/"
				],
				[
					174,
					1,
					"insert",
					{
						"characters": "nual"
					},
					"BAAAACQDAAAAAAAAJQMAAAAAAAAAAAAAJQMAAAAAAAAmAwAAAAAAAAAAAAAmAwAAAAAAACcDAAAAAAAAAAAAACcDAAAAAAAAKAMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAMAAAAAAAAkAwAAAAAAAAAAAAAAAPC/"
				],
				[
					175,
					1,
					"insert",
					{
						"characters": " disse"
					},
					"BgAAACgDAAAAAAAAKQMAAAAAAAAAAAAAKQMAAAAAAAAqAwAAAAAAAAAAAAAqAwAAAAAAACsDAAAAAAAAAAAAACsDAAAAAAAALAMAAAAAAAAAAAAALAMAAAAAAAAtAwAAAAAAAAAAAAAtAwAAAAAAAC4DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAMAAAAAAAAoAwAAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "mination"
					},
					"CAAAAC4DAAAAAAAALwMAAAAAAAAAAAAALwMAAAAAAAAwAwAAAAAAAAAAAAAwAwAAAAAAADEDAAAAAAAAAAAAADEDAAAAAAAAMgMAAAAAAAAAAAAAMgMAAAAAAAAzAwAAAAAAAAAAAAAzAwAAAAAAADQDAAAAAAAAAAAAADQDAAAAAAAANQMAAAAAAAAAAAAANQMAAAAAAAA2AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgMAAAAAAAAuAwAAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADYDAAAAAAAANwMAAAAAAAAAAAAANwMAAAAAAAA8AwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANgMAAAAAAAA2AwAAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"paste",
					null,
					"AQAAADwDAAAAAAAAQQMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPAMAAAAAAAA8AwAAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert",
					{
						"characters": " aa"
					},
					"AwAAAEEDAAAAAAAAQgMAAAAAAAAAAAAAQgMAAAAAAABDAwAAAAAAAAAAAABDAwAAAAAAAEQDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQQMAAAAAAABBAwAAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"left_delete",
					null,
					"AQAAAEMDAAAAAAAAQwMAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAARAMAAAAAAABEAwAAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert",
					{
						"characters": "ttempts"
					},
					"BwAAAEMDAAAAAAAARAMAAAAAAAAAAAAARAMAAAAAAABFAwAAAAAAAAAAAABFAwAAAAAAAEYDAAAAAAAAAAAAAEYDAAAAAAAARwMAAAAAAAAAAAAARwMAAAAAAABIAwAAAAAAAAAAAABIAwAAAAAAAEkDAAAAAAAAAAAAAEkDAAAAAAAASgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQwMAAAAAAABDAwAAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": " to"
					},
					"AwAAAEoDAAAAAAAASwMAAAAAAAAAAAAASwMAAAAAAABMAwAAAAAAAAAAAABMAwAAAAAAAE0DAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASgMAAAAAAABKAwAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAE0DAAAAAAAATgMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATQMAAAAAAABNAwAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "aquto"
					},
					"BQAAAE4DAAAAAAAATwMAAAAAAAAAAAAATwMAAAAAAABQAwAAAAAAAAAAAABQAwAAAAAAAFEDAAAAAAAAAAAAAFEDAAAAAAAAUgMAAAAAAAAAAAAAUgMAAAAAAABTAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATgMAAAAAAABOAwAAAAAAAAAAAAAAAPC/"
				],
				[
					185,
					4,
					"left_delete",
					null,
					"BAAAAFIDAAAAAAAAUgMAAAAAAAABAAAAb1EDAAAAAAAAUQMAAAAAAAABAAAAdFADAAAAAAAAUAMAAAAAAAABAAAAdU8DAAAAAAAATwMAAAAAAAABAAAAcQ",
					"AQAAAAAAAAABAAAAUwMAAAAAAABTAwAAAAAAAAAAAAAAAPC/"
				],
				[
					186,
					1,
					"insert",
					{
						"characters": "uto-comp"
					},
					"CAAAAE8DAAAAAAAAUAMAAAAAAAAAAAAAUAMAAAAAAABRAwAAAAAAAAAAAABRAwAAAAAAAFIDAAAAAAAAAAAAAFIDAAAAAAAAUwMAAAAAAAAAAAAAUwMAAAAAAABUAwAAAAAAAAAAAABUAwAAAAAAAFUDAAAAAAAAAAAAAFUDAAAAAAAAVgMAAAAAAAAAAAAAVgMAAAAAAABXAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwMAAAAAAABPAwAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"insert",
					{
						"characters": "ose"
					},
					"AwAAAFcDAAAAAAAAWAMAAAAAAAAAAAAAWAMAAAAAAABZAwAAAAAAAAAAAABZAwAAAAAAAFoDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVwMAAAAAAABXAwAAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAALgCAAAAAAAAuQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuAIAAAAAAAC4AgAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"paste",
					null,
					"AQAAALkCAAAAAAAA2wMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQIAAAAAAAC5AgAAAAAAAAAAAAAAAPC/"
				],
				[
					198,
					1,
					"insert",
					{
						"characters": "\n\n\nv"
					},
					"BAAAANsDAAAAAAAA3AMAAAAAAAAAAAAA3AMAAAAAAADdAwAAAAAAAAAAAADdAwAAAAAAAN4DAAAAAAAAAAAAAN4DAAAAAAAA3wMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wMAAAAAAADbAwAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"left_delete",
					null,
					"AQAAAN4DAAAAAAAA3gMAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAA3wMAAAAAAADfAwAAAAAAAAAAAAAAAPC/"
				],
				[
					200,
					1,
					"paste",
					null,
					"AQAAAN4DAAAAAAAA2AQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3gMAAAAAAADeAwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "AUTOSTART.ahk",
			"settings":
			{
				"buffer_size": 5232,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "menu-right-click.ahk",
			"settings":
			{
				"buffer_size": 1783,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAYAAAAAAAAAHgUAAAvKgoKICAgIENUUkwrV0lOKzMgIFN0YXJ0dXBUb2dnbGUKICAgIENUUkwrV0lOKzQgIFBlZWsgYXQgTm90ZXMgaW4gQUhLIGZpbGUgZnJvbSBXaW5kb3dzIEZpbGUgRXhwbG9yZXIKICAgIENUUkwrV0lOKzUgIFJlbG9hZHMvVXBkYXRlcyBTeXN0ZW0gVHJheSBpY29uIG1lbnUKClRoZSBBdXRvU3RhcnR1cENvbnRyb2wuYWhrIHNjcmlwdCBidWlsZHMgYSBTeXN0ZW0gVHJheSBtZW51IGZyb20gdGhlIFdpbmRvd3Mgc2hvcnRjdXRzCmZvdW5kIGluIHRoZSBTdGFydHVwIGZvbGRlci4gQnkgYWNjZXNzaW5nIHRoaXMgcmlnaHQtY2xpY2sgbWVudSB2YXJpb3VzIGFjdGlvbnMgY2FuIGJlCnBlcmZvcm1lZCBvbiB0aGUgcHJvZ3JhbXMgb3IgQXV0b0hvdGtleSBzY3JpcHQgdGFyZ2V0ZWQgYnkgZWFjaCBzaG9ydGN1dC4KClRoZSBBdXRvU3RhcnR1cENvbnRyb2wuYWhrIHNjcmlwdCBhbHNvIGluY2x1ZGVzIHRoZSBIb3RrZXkgKENUUkwrV0lOKzMpIGZvciBjcmVhdGluZy9yZW1vdmluZwpXaW5kb3dzIHNob3J0Y3V0cyBpbiB0aGUgU3RhcnRVcCBmb2xkZXIgZnJvbSB0aGUgQXV0b1N0YXJ0dXBUb2dnbGUuYWhrIHNjcmlwdCBmb3IgZmlsZXMgc2VsZWN0ZWQgCmluIFdpbmRvd3MgRmlsZSBFeHBsb3Jlci4gU2VsZWN0IHRoZSAuZXhlIG9yIC5haGsgZmlsZSBpbiBXaW5kb3dzIEZpbGUgRXhwbG9yZXIgYW5kIHVzZSB0aGUgSG90a2V5IApjb21iaW5hdGlvbiBDVFJMK1dJTiszIHRvIGVpdGhlciBhZGQgYSBzaG9ydGN1dCB0byB0aGUgdGFyZ2V0IGZpbGUgaW4gdGhlIFN0YXJ0VXAgZm9sZGVyLCBvciwgaWYgaXQgCmFscmVhZHkgZXhpc3RzLCByZW1vdmUgdGhlIHNob3J0Y3V0IGZyb20gdGhlIFN0YXJ0VXAgZm9sZGVyLgoKQ1RSTCtXSU4rNSBSZWxvYWRzL1VwZGF0ZXMgdGhlIG1lbnUuCgpKYW51YXJ5IDEwLCAyMDIxIOKAlCBBZGRlZCAiTm90ZXMiIHN1Ym1lbnUgaXRlbSB3aGljaCB1c2VzIFNjcmlwdE5vdGVzIHN1YnJvdXRpbmUgdG8gZXh0cmFjdApjb21tZW50cyBmcm9tIHRoZSAuYWhrIGZpbGVzIHRhcmdldGVkIGJ5IFN0YXJ0dXAgZm9sZGVyIHNob3J0Y3V0cy4gRGlzcGxheSBjb21tZW50cyBiZXR3ZWVuCnRoZSBzbGFzaC9hc3RlcmlzayogYW5kIGFzdGVyaXNrKnNsYXNoLyBib3VuZGFyaWVzIGluIGEgTXNnQm94LgoKSmFudWFyeSAxNywgMjAyMSDigJQgU3dpdGNoZWQgZnJvbSBNc2dCb3ggdG8gR1VJIHdpbmRvdyBmb3IgZGlzcGxheSBub3RlcyBzaW5jZSB0aGUgR1VJIGhhcyBsZXNzCmZvcm1hdHRpbmcgaXNzdWVzLgoKSmFudWFyeSAyMSwgMjAyMSDigJQgQWRkZWQgdGhlIEhvdGtleSBjb21iaW5hdGlvbiBDVFJMK1dJTis0IHRvIHJ1biB0aGUgQUhLIGZpbGUgU2NyaXB0Tm90ZXMKc3Vicm91dGluZSBmb3IgYW55IC5haGsgZmlsZSBzZWxlY3RlZCBpbiBXaW5kb3dzIEZpbGUgRXhwbG9yZXIuIFRoZSBuZXcgSG90a2V5IGZpcnN0IHJ1bnMgdGhlIApTdGFuZGFyZCBBdXRvSG90a2V5IENsaXBib2FyZCBSb3V0aW5lOgoKaHR0cHM6Ly9qYWNrcy1hdXRvaG90a2V5LWJsb2cuY29tLzIwMTYvMDMvMjMvYXV0b2hvdGtleS13aW5kb3dzLWNsaXBib2FyZC10ZWNobmlxdWVzLWZvci1zd2FwcGluZy1sZXR0ZXJzLWJlZ2lubmluZy1ob3RrZXlzLXBhcnQtOS8jY2xpcGJvYXJkCgp0aGVuIHVzZXMgYSBHb1RvIHN0YXRlbWVudCB0byBza2lwIHRoZSBXaW5kb3dzIFNob3J0Y3V0IHJlYWRpbmcgY29tbWFuZCB0aGVuIHVzZXMgdGhlIHNhbWUgCnN1YnJvdXRpbmUgdG8gZGlzcGxheXMgdGhlIGZpbGUgbm90ZXMuCgpKYW51YXJ5IDMxLCAyMDIxIOKAlCBBZGRlZCB0aGUgTGluayBHVUkgY29udHJvbCBhbmQgYSBSZWdFeCB0byBtYWtlIFVSTHMgaG90IHRvIHRoZSBSZWFkTm90ZXMKc3Vicm91dGluZS4KCiovCgojU2luZ2xlSW5zdGFuY2UgRm9yY2UKTWVudSwgVHJheSwgVXNlRXJyb3JMZXZlbAoKCgpBdXRvU3RhcnQ6CgogICAgTG9vcCAlQV9TdGFydHVwJVwqLioKICAgIHsKICAgICAgICBGaWxlR2V0U2hvcnRjdXQsICVBX0xvb3BGaWxlRnVsbFBhdGglLCBMb2NhdGlvbiwgT3V0RGlyLCBPdXRBcmdzLCBPdXREZXNjcmlwdGlvbiwgT3V0SWNvbiwgT3V0SWNvbk51bSwgT3V0UnVuU3RhdGUKICAgICAgICBJZiBFcnJvckxldmVsCiAgICAgICAgICAgIENvbnRpbnVlCiAgICAgICAgICAgIE1lbnUsICVBX0xvb3BGaWxlTmFtZSUsIEFkZCwgTm90ZXMsIFNjcmlwdE5vdGVzCiAgICAgICAgICAgIE1lbnUsICVBX0xvb3BGaWxlTmFtZSUsIEFkZCwgT3BlbiwgTWVudUFjdGlvbgogICAgICAgICAgICBNZW51LCAlQV9Mb29wRmlsZU5hbWUlLCBBZGQsIFJlc3RhcnQsIFByb2dSZXN0YXJ0CiAgICAgICAgICAgIE1lbnUsIFRyYXksIEFkZCAsICVBX0xvb3BGaWxlTmFtZSUsIDolQV9Mb29wRmlsZU5hbWUlCiAgICAgICAgICAgIElmIChPdXRJY29uICE9ICIiKQogICAgICAgICAgICAgICAgTWVudSwgVHJheSwgSWNvbiwgJUFfTG9vcEZpbGVOYW1lJSwgJU91dEljb24lLCAlT3V0SWNvbk51bSUKICAgIH0KCk1lbnUsIFRyYXksIEljb24sIFNoZWxsMzIuZGxsLCA4NQoKUmV0dXJuCgoKCl4jMzo6ICAgICAgICAgICAgICAgICA7IEFjdGl2YXRlcyB3aXRoIENUUkwrV0lOKzMKICBDbGlwYm9hcmQgPSAgICA7IEVtcHRpZXMgQ2xpcGJvYXJkCiAgU2VuZCwgXmMgICAgICAgICAgOyBDb3BpZXMgZmlsZW5hbWUgYW5kIHBhdGgKICBDbGlwV2FpdCAwICAgICAgIDsgV2FpdHMgZm9yIGNvcHkKICBTcGxpdFBhdGgsIENsaXBib2FyZCwgTmFtZSwgRGlyLCBFeHQsIE5hbWVfbm9fZXh0LCBEcml2ZQogIElmRXhpc3QsICVBX1N0YXJ0dXAlXCVOYW1lX25vX2V4dCUubG5rCiAgewogICAgTXNnQm94LCA0LCBGb3VuZCBpbiBTdGFydHVwIEZvbGRlciwgJU5hbWUlIGV4aXN0cyBpbiBTdGFydHVwIGZvbGRlciEgUmVtb3ZlPwogICAgSWZNc2dCb3ggWWVzCiAgICAgICAgRmlsZURlbGV0ZSwgJUFfU3RhcnR1cCVcJU5hbWVfbm9fZXh0JS5sbmsKICAgIGVsc2UKICAgICAgICBSZXR1cm4KICAgICBNc2dCb3gsICVOYW1lJSByZW1vdmVkIGZyb20gdGhlIFN0YXJ0dXAgZm9sZGVyLgogIH0KICBFbHNlCiAgewogICAgRmlsZUNyZWF0ZVNob3J0Y3V0LCAiJWNsaXBib2FyZCUiCiAgICAgICAgICAgLCAlQV9TdGFydHVwJVwlTmFtZV9ub19leHQlLmxuawogICAgICAgICAgICwgJURpciUgICwgICwgLCAiJWNsaXBib2FyZCUiICA7IExpbmUtd3JhcHBlZCB1c2luZyBBdXRvSG90a2V5IGxpbmUgY29udGludWF0aW9uCiAgICBNc2dCb3gsICVOYW1lJSBhZGRlZCB0byBTdGFydHVwIGZvbGRlciBmb3IgYXV0by1sYXVuY2ggd2l0aCBXaW5kb3dzLgogIH0KUmV0dXJuCgpeIzU6OlJlbG9hZAoKCgpNZW51QWN0aW9uOgogICAgU2hvcnRjdXQgOj0gQV9TdGFydHVwICIvIiBBX1RoaXNNZW51CiAgICBGaWxlR2V0U2hvcnRjdXQsICVBX1N0YXJ0dXAlLyVBX1RoaXNNZW51JSwgTG9jYXRpb24KICAgIElmIEluU3RyKExvY2F0aW9uLCIuYWhrIikKICAgICAgICBSdW4sIHN1YmwgJUxvY2F0aW9uJQogICAgSWYgSW5TdHIoTG9jYXRpb24sIi5leGUiKQogICAgewogICAgICAgIGV4cGxvcmVycGF0aDo9ICJleHBsb3JlciAvc2VsZWN0LCIgTG9jYXRpb24KICAgICAgICBSdW4sICVleHBsb3JlcnBhdGglCiAgICB9CgpSZXR1cm4KClByb2dSZXN0YXJ0OgogICAgRmlsZUdldFNob3J0Y3V0LCAlQV9TdGFydHVwJS8lQV9UaGlzTWVudSUsIExvY2F0aW9uCiAgICBJZiBJblN0cihMb2NhdGlvbiwiLmFoayIpCiAgICAgICAgUnVuICpSdW5BcyAiJUFfQWhrUGF0aCUiIC9yZXN0YXJ0ICIlTG9jYXRpb24lIgogICAgSWYgSW5TdHIoTG9jYXRpb24sIi5leGUiKQogICAgICAgICBSdW4gKlJ1bkFzICIlTG9jYXRpb24lIiAvcmVzdGFydApSZXR1cm4KCl4jNDo6CiAgICAgICAgQ2xpcDAgOj0gQ2xpcGJvYXJkQWxsICAgICAgICA7IEJhY2t1cCBjdXJyZW50IGNsaXBib2FyZCdzIGNvbnRlbnQKICAgICAgICBDbGlwYm9hcmQgOj0gICAgICAgICAgICAgICAgICAgICAgOyBDbGVhciBjbGlwYm9hcmQKICAgICAgICBTZW5kSW5wdXQsIF5jICAgICAgICAgICAgICAgICAgICA7IGNvcHkgc2VsZWN0ZWQgZmlsZSdzIHBhdGggdG8gY2xpcGJvYXJkCiAgICAgICAgQ2xpcFdhaXQgMAogICAgICAgICAgSWYgRmlsZUV4aXN0KENsaXBib2FyZCkKICAgICAgICAgICAgewogICAgICAgICAgICAgICBMb2NhdGlvbiA6PSBDbGlwYm9hcmQKICAgICAgICAgICAgIH0KICAgICAgICAgIEVsc2UKICAgICAgICAgICAgewogICAgICAgICAgICAgICBNc2dCb3gsIE5vIGZpbGUgc2VsZWN0ZWQhCiAgICAgICAgICAgICAgIENsaXBib2FyZCA6PSBDbGlwMCAgICAgICAgICAgOyBSZXN0b3JlIG9yaWdpbmFsIENsaXBCb2FyZAogICAgICAgICAgICAgICBSZXR1cm4KICAgICAgICAgICAgfQoKICAgICAgICBDbGlwYm9hcmQgOj0gQ2xpcDAgICAgICAgICAgIDsgUmVzdG9yZSBvcmlnaW5hbCBDbGlwQm9hcmQKICAgICAgICBHb3RvIFJlYWROb3RlcyAgCgpTY3JpcHROb3RlczoKICAgIEZpbGVHZXRTaG9ydGN1dCwgJUFfU3RhcnR1cCUvJUFfVGhpc01lbnUlLCBMb2NhdGlvbgoKUmVhZE5vdGVzOgogICAgU3BsaXRQYXRoLCBMb2NhdGlvbiwgTmFtZSwgRGlyLCBFeHQsIE5hbWVfbm9fZXh0LCBEcml2ZQogICAgSWYgSW5TdHIoTG9jYXRpb24sIi5leGUiKQogICAgICAgIExvY2F0aW9uIDo9IFN0clJlcGxhY2UoTG9jYXRpb24sICIuZXhlIiAsICIuYWhrIikKICAgIElmICFGaWxlRXhpc3QoTG9jYXRpb24pCiAgICB7CiAgICAgICAgTXNnQm94IE5vIG5vdGVzIGZvdW5kIQogICAgICAgIFJldHVybgogICAgfQoKICAgIEZpbGVSZWFkLCBGaWxlVmFyLCAlIExvY2F0aW9uCiAgICBmb3VuZCA6PSBSZWdFeE1hdGNoKEZpbGVWYXIsICJzKS9cKiguKj8pXCovIiAsIE5vdGVzVmFyKQogICAgTm90ZXNWYXIxIDo9IFJlZ0V4UmVwbGFjZShOb3Rlc1ZhcjEsICIoaHR0cC4qPykoXHMpIiAsICI8YSBocmVmPSIiJDEiIj4kMTwvYT4kMiIpCiAgICBOb3Rlc1ZhcjEgOj0gU3RyUmVwbGFjZShOb3Rlc1ZhcjEsICJgdCIgLCAiICAgICAiKQogICAgR3VpLCBBZGQsIEJ1dHRvbiwgLCBPcGVuIEZpbGUKICAgIEd1aSwgQWRkLCBMaW5rLCAgLCAlTG9jYXRpb24lYHIlTm90ZXNWYXIxJQogICAgR3VpLCBTaG93LCAgLCAlTmFtZV9ub19leHQlCgpSZXR1cm4KCkJ1dHRvbk9wZW5GaWxlOgoKICAgIFJ1biwgTm90ZXBhZCAlTG9jYXRpb24lCgpSZXR1cm4KCkd1aUNsb3NlOgogICAgR1VJLCBEZXN0cm95ClJldHVybg",
					"AQAAAAAAAAABAAAAAAAAAAAAAABwFAAAAAAAAAAAAAAAAPC/"
				],
				[
					7,
					1,
					"paste",
					null,
					"AgAAAAAAAAAAAAAA9wYAAAAAAAAAAAAA9wYAAAAAAAD3BgAAAAAAABgAAABIS0NSLnBkZlxPcGVuV2l0aFByb2dpZHM",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAYAAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "#NoEnv                            ; For performance & future compatibility\n#Warn                             ; For catching common errors\nSendMode Input                    ; For superior speed and reliability\nSetWorkingDir %A_ScriptDir%       ; Ensures a consistent starting directory\n\nMenu, ContextMenu, add,  Menu&1, MenuHandler\nMenu, ContextMenu, add,  Menu&2, MenuHandler\nMenu, NewMenu, add, New Sub 1, MenuHandler\nMenu, NewMenu, add, New Sub 2, MenuHandler\nMenu, ContextMenu, Add, &New Menu, :NewMenu\nOnMessage(0x0122,\"WM_MENURBUTTONUP\"), OnMessage(0x211,\"WM_ENTERMENULOOP\"), rbc=0\nreturn\n\n^1::\nrbc:=0\nMenu_Show(MenuGetHandle(\"ContextMenu\"), A_ScriptHwnd) ; Can select menu\nreturn                            ;   with both the left and right mouse buttons.\n\nMenuHandler:\nOutputdebug, Handler %rbc%\nMsgBox,% \"Menu:`t\" A_ThisMenu \"`n\"\n      .  \"Item:`t\" A_ThisMenuItem \"`n\"\n      .  \"Button:`t\" (rbc ? \"Right\" : \"Left\")\nreturn\n\n\n/*MenuHandler:\nMsgBox,% \"Menu:`t\" A_ThisMenu \"`n\"\n      .  \"Item:`t\" A_ThisMenuItem \"`n\"\n      .  \"Button:`t\" (rbc ? \"Right\" : \"Left\")\nreturn*/\n\n/*WM_MENURBUTTONUP(wparam, lparam)\n{ local w\n  MouseGetPos,,, w\n  ControlSend,, {enter}, ahk_id %w%\n  rbc:=1\n}*/\nWM_ENTERMENULOOP() ; Notifies an application's main window procedure that a\n{ return true ; menu modal loop has been entered. By returning true, AHK\n} ; doesn't halt processing Messages, timers, hotkeys... (the default behavior)\n\nMenu_Show(hMenu, hWnd=0, mX=\"\", mY=\"\", Flags=0x1) ; goo.gl/fRwDwG\n{ local p, a=VarSetCapacity(p,8,0), b=DllCall(\"GetCursorPos\", UInt,&p)\n  DetectHiddenWindows On\n  WinActivate ahk_id %hWnd%\n  Return DllCall(\"TrackPopupMenu\",UInt,hMenu,UInt,Flags, Int,mX=\"\"?NumGet(p,0):mX\n  , Int,mY=\"\"?NumGet(p,4):mY, UInt,0, UInt,hWnd?hWnd:WinActive(\"A\"), UInt,0)\n} ; goo.gl/CosNig; Flags: TPM_RECURSE=0x1, TPM_RETURNCMD=0x100, TPM_NONOTIFY=0x80\n\nEsc::ExitApp\nF5::Reload\n\nWM_MENURBUTTONUP(wparam, lparam)\n{ \n  local w\n  Critical\n  MouseGetPos,,, w\n  ControlSend,, {enter}, ahk_id %w%\n  rbc:=1\n}",
			"file": "menu-right-click2.ahk",
			"file_size": 2058,
			"file_write_time": 133185338916117557,
			"settings":
			{
				"buffer_size": 1998,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAogYAAAAAAAAAAAAAogYAAAAAAACiBgAAAAAAAPcGAAAjTm9FbnYgICAgICAgICAgICAgICAgICAgICAgICAgICAgOyBGb3IgcGVyZm9ybWFuY2UgJiBmdXR1cmUgY29tcGF0aWJpbGl0eQojV2FybiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOyBGb3IgY2F0Y2hpbmcgY29tbW9uIGVycm9ycwpTZW5kTW9kZSBJbnB1dCAgICAgICAgICAgICAgICAgICAgOyBGb3Igc3VwZXJpb3Igc3BlZWQgYW5kIHJlbGlhYmlsaXR5ClNldFdvcmtpbmdEaXIgJUFfU2NyaXB0RGlyJSAgICAgICA7IEVuc3VyZXMgYSBjb25zaXN0ZW50IHN0YXJ0aW5nIGRpcmVjdG9yeQo7ID09PT09PT09PT09PT09PT09PT09PT09PT09PSAgSW5pdGlhbCBTZXR0aW5ncyAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpNZW51LCBDb250ZXh0TWVudSwgYWRkLCAgTWVudSYxLCBNZW51SGFuZGxlcgpNZW51LCBDb250ZXh0TWVudSwgYWRkLCAgTWVudSYyLCBNZW51SGFuZGxlcgpNZW51LCBOZXdNZW51LCBhZGQsIE5ldyBTdWIgMSwgTWVudUhhbmRsZXIKTWVudSwgTmV3TWVudSwgYWRkLCBOZXcgU3ViIDIsIE1lbnVIYW5kbGVyCk1lbnUsIENvbnRleHRNZW51LCBBZGQsICZOZXcgTWVudSwgOk5ld01lbnUKT25NZXNzYWdlKDB4MDEyMiwiV01fTUVOVVJCVVRUT05VUCIpLCBPbk1lc3NhZ2UoMHgyMTEsIldNX0VOVEVSTUVOVUxPT1AiKSwgcmJjPTAKcmV0dXJuCgpDYXBzTG9jazo6CnJiYzo9MCwgTWVudV9TaG93KE1lbnVHZXRIYW5kbGUoIkNvbnRleHRNZW51IiksIEFfU2NyaXB0SHduZCkgOyBDYW4gc2VsZWN0IG1lbnUKcmV0dXJuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDsgICB3aXRoIGJvdGggdGhlIGxlZnQgYW5kIHJpZ2h0IG1vdXNlIGJ1dHRvbnMuCgpNZW51SGFuZGxlcjoKTXNnQm94LCUgIk1lbnU6YHQiIEFfVGhpc01lbnUgImBuIgogICAgICAuICAiSXRlbTpgdCIgQV9UaGlzTWVudUl0ZW0gImBuIgogICAgICAuICAiQnV0dG9uOmB0IiAocmJjID8gIlJpZ2h0IiA6ICJMZWZ0IikKcmV0dXJuCgpXTV9NRU5VUkJVVFRPTlVQKHdwYXJhbSwgbHBhcmFtKQp7IGxvY2FsIHcKICBNb3VzZUdldFBvcywsLCB3CiAgQ29udHJvbFNlbmQsLCB7ZW50ZXJ9LCBhaGtfaWQgJXclCiAgcmJjOj0xCn0KV01fRU5URVJNRU5VTE9PUCgpIDsgTm90aWZpZXMgYW4gYXBwbGljYXRpb24ncyBtYWluIHdpbmRvdyBwcm9jZWR1cmUgdGhhdCBhCnsgcmV0dXJuIHRydWUgOyBtZW51IG1vZGFsIGxvb3AgaGFzIGJlZW4gZW50ZXJlZC4gQnkgcmV0dXJuaW5nIHRydWUsIEFISwp9IDsgZG9lc24ndCBoYWx0IHByb2Nlc3NpbmcgTWVzc2FnZXMsIHRpbWVycywgaG90a2V5cy4uLiAodGhlIGRlZmF1bHQgYmVoYXZpb3IpCgpNZW51X1Nob3coaE1lbnUsIGhXbmQ9MCwgbVg9IiIsIG1ZPSIiLCBGbGFncz0weDEpIDsgZ29vLmdsL2ZSd0R3Rwp7IGxvY2FsIHAsIGE9VmFyU2V0Q2FwYWNpdHkocCw4LDApLCBiPURsbENhbGwoIkdldEN1cnNvclBvcyIsIFVJbnQsJnApCiAgRGV0ZWN0SGlkZGVuV2luZG93cyBPbgogIFdpbkFjdGl2YXRlIGFoa19pZCAlaFduZCUKICBSZXR1cm4gRGxsQ2FsbCgiVHJhY2tQb3B1cE1lbnUiLFVJbnQsaE1lbnUsVUludCxGbGFncywgSW50LG1YPSIiP051bUdldChwLDApOm1YCiAgLCBJbnQsbVk9IiI/TnVtR2V0KHAsNCk6bVksIFVJbnQsMCwgVUludCxoV25kP2hXbmQ6V2luQWN0aXZlKCJBIiksIFVJbnQsMCkKfSA7IGdvby5nbC9Db3NOaWc7IEZsYWdzOiBUUE1fUkVDVVJTRT0weDEsIFRQTV9SRVRVUk5DTUQ9MHgxMDAsIFRQTV9OT05PVElGWT0weDgwCgpGNDo6RXhpdEFwcApGNTo6UmVsb2Fk",
					"AQAAAAAAAAABAAAAAAAAAAAAAAD3BgAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAKIGAAAAAAAAowYAAAAAAAAAAAAAowYAAAAAAACkBgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAogYAAAAAAACiBgAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"paste",
					null,
					"AQAAAKQGAAAAAAAAHgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAYAAAAAAACkBgAAAAAAAAAAAAAAAPC/"
				],
				[
					8,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAPQDAAAAAAAA9gMAAAAAAAAAAAAAiAMAAAAAAACKAwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiAMAAAAAAAD0AwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"left_delete",
					null,
					"AQAAAFQCAAAAAAAAVAIAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAVQIAAAAAAABVAgAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAFQCAAAAAAAAVQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVAIAAAAAAABUAgAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"toggle_comment",
					{
						"block": true
					},
					"AgAAAIYDAAAAAAAAiAMAAAAAAAAAAAAA+wIAAAAAAAD9AgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wIAAAAAAACGAwAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAPoCAAAAAAAA+wIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gIAAAAAAAD6AgAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"paste",
					null,
					"AQAAAPsCAAAAAAAATwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wIAAAAAAAD7AgAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAE8EAAAAAAAAUAQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATwQAAAAAAABPBAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"left_delete",
					null,
					"AQAAAKMDAAAAAAAAowMAAAAAAACtAAAAV01fTUVOVVJCVVRUT05VUCh3cGFyYW0sIGxwYXJhbSkKeyAKICBsb2NhbCB3CiAgT3V0cHV0RGVidWcsIE1lc3NhZ2UgJXJiYyUKICBNb3VzZUdldFBvcywsLCB3CiAgQ29udHJvbFNlbmQsLCB7ZW50ZXJ9LCBhaGtfaWQgJXclCiAgcmJjOj0xCiAgT3V0cHV0RGVidWcsIE1lc3NhZ2VlbmQgJXJiYyUKfQo",
					"AQAAAAAAAAABAAAAUAQAAAAAAACjAwAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAGACAAAAAAAAYQIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYAIAAAAAAABgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					2,
					"left_delete",
					null,
					"AgAAAF8CAAAAAAAAXwIAAAAAAAABAAAAIF4CAAAAAAAAXgIAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAYAIAAAAAAABgAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "menu-right-click3.ahk",
			"settings":
			{
				"buffer_size": 2818,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AgAAAAAAAAAAAAAAAgsAAAAAAAAAAAAAAgsAAAAAAAACCwAAAAAAAM8HAAAjTm9FbnYgICAgICAgICAgICAgICAgICAgICAgICAgICAgOyBGb3IgcGVyZm9ybWFuY2UgJiBmdXR1cmUgY29tcGF0aWJpbGl0eQojV2FybiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOyBGb3IgY2F0Y2hpbmcgY29tbW9uIGVycm9ycwpTZW5kTW9kZSBJbnB1dCAgICAgICAgICAgICAgICAgICAgOyBGb3Igc3VwZXJpb3Igc3BlZWQgYW5kIHJlbGlhYmlsaXR5ClNldFdvcmtpbmdEaXIgJUFfU2NyaXB0RGlyJSAgICAgICA7IEVuc3VyZXMgYSBjb25zaXN0ZW50IHN0YXJ0aW5nIGRpcmVjdG9yeQoKTWVudSwgQ29udGV4dE1lbnUsIGFkZCwgIE1lbnUmMSwgTWVudUhhbmRsZXIKTWVudSwgQ29udGV4dE1lbnUsIGFkZCwgIE1lbnUmMiwgTWVudUhhbmRsZXIKTWVudSwgTmV3TWVudSwgYWRkLCBOZXcgU3ViIDEsIE1lbnVIYW5kbGVyCk1lbnUsIE5ld01lbnUsIGFkZCwgTmV3IFN1YiAyLCBNZW51SGFuZGxlcgpNZW51LCBDb250ZXh0TWVudSwgQWRkLCAmTmV3IE1lbnUsIDpOZXdNZW51Ck9uTWVzc2FnZSgweDAxMjIsIldNX01FTlVSQlVUVE9OVVAiKSwgT25NZXNzYWdlKDB4MjExLCJXTV9FTlRFUk1FTlVMT09QIiksIHJiYz0wCnJldHVybgoKXjE6OgpyYmM6PTAsIE1lbnVfU2hvdyhNZW51R2V0SGFuZGxlKCJDb250ZXh0TWVudSIpLCBBX1NjcmlwdEh3bmQpIDsgQ2FuIHNlbGVjdCBtZW51CnJldHVybiAgICAgICAgICAgICAgICAgICAgICAgICAgICA7ICAgd2l0aCBib3RoIHRoZSBsZWZ0IGFuZCByaWdodCBtb3VzZSBidXR0b25zLgoKTWVudUhhbmRsZXI6Ck91dHB1dGRlYnVnLCBIYW5kbGVyICVyYmMlCk1zZ0JveCwlICJNZW51OmB0IiBBX1RoaXNNZW51ICJgbiIKICAgICAgLiAgIkl0ZW06YHQiIEFfVGhpc01lbnVJdGVtICJgbiIKICAgICAgLiAgIkJ1dHRvbjpgdCIgKHJiYyA/ICJSaWdodCIgOiAiTGVmdCIpCnJldHVybgoKCi8qTWVudUhhbmRsZXI6Ck1zZ0JveCwlICJNZW51OmB0IiBBX1RoaXNNZW51ICJgbiIKICAgICAgLiAgIkl0ZW06YHQiIEFfVGhpc01lbnVJdGVtICJgbiIKICAgICAgLiAgIkJ1dHRvbjpgdCIgKHJiYyA/ICJSaWdodCIgOiAiTGVmdCIpCnJldHVybiovCgovKldNX01FTlVSQlVUVE9OVVAod3BhcmFtLCBscGFyYW0pCnsgbG9jYWwgdwogIE1vdXNlR2V0UG9zLCwsIHcKICBDb250cm9sU2VuZCwsIHtlbnRlcn0sIGFoa19pZCAldyUKICByYmM6PTEKfSovCldNX0VOVEVSTUVOVUxPT1AoKSA7IE5vdGlmaWVzIGFuIGFwcGxpY2F0aW9uJ3MgbWFpbiB3aW5kb3cgcHJvY2VkdXJlIHRoYXQgYQp7IHJldHVybiB0cnVlIDsgbWVudSBtb2RhbCBsb29wIGhhcyBiZWVuIGVudGVyZWQuIEJ5IHJldHVybmluZyB0cnVlLCBBSEsKfSA7IGRvZXNuJ3QgaGFsdCBwcm9jZXNzaW5nIE1lc3NhZ2VzLCB0aW1lcnMsIGhvdGtleXMuLi4gKHRoZSBkZWZhdWx0IGJlaGF2aW9yKQoKTWVudV9TaG93KGhNZW51LCBoV25kPTAsIG1YPSIiLCBtWT0iIiwgRmxhZ3M9MHgxKSA7IGdvby5nbC9mUndEd0cKeyBsb2NhbCBwLCBhPVZhclNldENhcGFjaXR5KHAsOCwwKSwgYj1EbGxDYWxsKCJHZXRDdXJzb3JQb3MiLCBVSW50LCZwKQogIERldGVjdEhpZGRlbldpbmRvd3MgT24KICBXaW5BY3RpdmF0ZSBhaGtfaWQgJWhXbmQlCiAgUmV0dXJuIERsbENhbGwoIlRyYWNrUG9wdXBNZW51IixVSW50LGhNZW51LFVJbnQsRmxhZ3MsIEludCxtWD0iIj9OdW1HZXQocCwwKTptWAogICwgSW50LG1ZPSIiP051bUdldChwLDQpOm1ZLCBVSW50LDAsIFVJbnQsaFduZD9oV25kOldpbkFjdGl2ZSgiQSIpLCBVSW50LDApCn0gOyBnb28uZ2wvQ29zTmlnOyBGbGFnczogVFBNX1JFQ1VSU0U9MHgxLCBUUE1fUkVUVVJOQ01EPTB4MTAwLCBUUE1fTk9OT1RJRlk9MHg4MAoKRXNjOjpFeGl0QXBwCkY1OjpSZWxvYWQKCldNX01FTlVSQlVUVE9OVVAod3BhcmFtLCBscGFyYW0pCnsgCiAgbG9jYWwgdwogIENyaXRpY2FsCiAgTW91c2VHZXRQb3MsLCwgdwogIENvbnRyb2xTZW5kLCwge2VudGVyfSwgYWhrX2lkICV3JQogIHJiYzo9MQp9",
					"AQAAAAAAAAABAAAAAAAAAAAAAADPBwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "lemmon-runner.ahk",
			"settings":
			{
				"buffer_size": 2317,
				"line_ending": "Windows"
			}
		},
		{
			"file": "path-menus-2.ahk",
			"settings":
			{
				"buffer_size": 2485,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "path-menus-handlers-1-4examples.ahk",
			"settings":
			{
				"buffer_size": 3255,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "path-menus-handlers.ahk",
			"settings":
			{
				"buffer_size": 6070,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "path-menus.ahk",
			"settings":
			{
				"buffer_size": 1896,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"file": "/C/Users/dkzea/OneDrive/Desktop/rclickmenu2.ahk",
			"settings":
			{
				"buffer_size": 737,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"paste",
					null,
					"AgAAAAAAAAAAAAAA0gIAAAAAAAAAAAAA0gIAAAAAAADSAgAAAAAAAEgGAAAjTm9FbnYKTWVudSwgVGhlTWVudSwgQWRkLCBDdHJsK0MsIE1lbnVMYWJlbDEKTWVudSwgVGhlTWVudSwgQWRkLCBDdHJsK1YsIE1lbnVMYWJlbDIKTWVudSwgVGhlTWVudSwgQWRkLCBFeGl0ICAsIEFwcEV4aXQKTWVudSwgVGhlTWVudSwgQWRkLCBDdHJsK1gsIE1lbnVMYWJlbDMsICtCcmVhawpNZW51LCBUaGVNZW51LCBBZGQsIEYyICAgICwgTWVudUxhYmVsNAo7IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQo7IFRoZSBmb2xsb3dpbmcgZnVuY3Rpb24gY2FsbCBhbmQgdGhlIGFzc29jaWF0ZWQgZnVuY3Rpb24gYXJlIG9ubHkgbmVlZGVkCjsgaWYgeW91IHdhbnQgdG8gcmVtb3ZlIHRoZSBleHRyYSBzcGFjZSB0byB0aGUgbGVmdCBvZiB0aGUgbWVudSBpdGVtIG5hbWVzLgpNZW51X1JlbW92ZUNoZWNrTWFya3MoIlRoZU1lbnUiKQo7IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpSZXR1cm4KOyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KTWVudUxhYmVsMToKICAgU2VuZElucHV0LCBeYwpSZXR1cm4KTWVudUxhYmVsMjoKICAgU2VuZElucHV0LCBedgpSZXR1cm4KTWVudUxhYmVsMzoKICAgU2VuZElucHV0LCBeeApSZXR1cm4KTWVudUxhYmVsNDoKICAgU2VuZElucHV0LCB7RjJ9ClJldHVybgo7IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpBcHBFeGl0OgpFeGl0QXBwCjsgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tClJCdXR0b24gVXA6OgogICBNZW51LCBUaGVNZW51LCBTaG93ClJldHVybgo7IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpNZW51X1JlbW92ZUNoZWNrTWFya3MoTWVudU5hbWUpIHsKICAgTG9jYWwKICAgSE1FTlUgOj0gTWVudUdldEhhbmRsZShNZW51TmFtZSkKICAgU2l6ZU9mTUkgOj0gMTYgKyAoQV9QdHJTSXplICogMykgOyBNRU5VSU5GTyBzdHJ1Y3R1cmUKICAgVmFyc2V0Q2FwYWNpdHkoTUksIFNpemVPZk1JLCAwKQogICBOdW1QdXQoU2l6ZU9mTUksIE1JLCAwLCAiVUludCIpIDsgY2JpemUKICAgRGxsQ2FsbCgiR2V0TWVudUluZm8iLCAiUHRyIiwgSE1FTlUsICJQdHIiLCAmTUkpCiAgIE5vQ2hlY2sgOj0gTnVtR2V0KE1JLCA4LCAiVUludCIpIHwgMHg4MDAwMDAwMCA7IE1OU19OT0NIRUNLCiAgIE51bVB1dCgweDgwMDAwMDEwLCBNSSwgNCwgIlVJbnQiKSA7IGZNYXNrID0gTUlNX0FQUExZVE9TVUJNRU5VUyArIE1JTV9TVFlMRQogICBOdW1QdXQoTm9DaGVjaywgTUksIDgsICJVSW50IikgOyBkd1N0eWxlID0gTU5TX05PQ0hFQ0sKICAgRGxsQ2FsbCgiU2V0TWVudUluZm8iLCAiUHRyIiwgSE1FTlUsICJQdHIiLCAmTUkpCn0",
					"AQAAAAAAAAABAAAAAAAAAAAAAABIBgAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "\n\nesc::E"
					},
					"CAAAANICAAAAAAAA0wIAAAAAAAAAAAAA0wIAAAAAAADUAgAAAAAAAAAAAADUAgAAAAAAANUCAAAAAAAAAAAAANUCAAAAAAAA1gIAAAAAAAAAAAAA1gIAAAAAAADXAgAAAAAAAAAAAADXAgAAAAAAANgCAAAAAAAAAAAAANgCAAAAAAAA2QIAAAAAAAAAAAAA2QIAAAAAAADaAgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gIAAAAAAADSAgAAAAAAAAAAAAAAAPC/"
				],
				[
					5,
					1,
					"insert_completion",
					{
						"completion": "exitapp",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "exitapp"
					},
					"AgAAANkCAAAAAAAA2QIAAAAAAAABAAAARdkCAAAAAAAA4AIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2gIAAAAAAADaAgAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANQCAAAAAAAA1QIAAAAAAAAAAAAA1QIAAAAAAADVAgAAAAAAAAwAAABlc2M6OmV4aXRhcHA",
					"AQAAAAAAAAABAAAA1AIAAAAAAADgAgAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"paste",
					null,
					"AQAAANUCAAAAAAAA4QIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1QIAAAAAAADVAgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "#SingleInstance Force\n/*\n\n   Name ...........: Minerva\n   Description ....: Will generate a context menu from which to insert text, launch shortcuts and much more\n   AHK Version ....: AHK_L 1.1.33.10 (Unicode 32-bit) - 28-12-2021\n   Platform .......: Tested on Windows 11 22H2\n   Language .......: English (en-US)\n   Author .........: Jonas Vollhaase Mikkelsen <Mikkelsen.v.jonas@gmail.com>\n   Documentation ..: Github.com\n\n   Name\n. Minerva\nDescription . . :\nWill generate a context menu from which to insert text\n• AHK L 1.1.33.10 (Unicode 32-bit)\nAHK Version .\n28-12-2021\nPlatform . : Tested on Windows II 22H2\nEnglish (en-US)\nLanguage .\nAuthor .\n: Jonas Vollhaase Mikkelsen <Mikke1sen.v.jonas@gmai1.com>\nDocumentation .\n• Github.com\nlaunch shortcuts and much more\n\n\n*/\n\n;----------------------------------------------| VARIABLES |---------------------------------------------;\nFileEncoding, UTF-8\nglobal ScriptName  := StrReplace(A_ScriptName, \".ahk\")\nglobal Version     := \"4.0.2\"\nglobal GitHub      := \"https://github.com/bforbenny/Minerva\"\nglobal FileCount   := 0\nglobal MyProgress  := 0\nglobal TotalWords  := 0\nglobal settingsINI := \"settings.ini\"\nglobal ignoreFiles := \"\"\n\n; comment if Gdip.ahk is in your standard library\n#Include, includes\\Gdip.ahk \t\t\t\n#Include, includes\\read-ini.ahk\t\n#Include, includes\\JXON.ahk\n#Include, includes\\Minerva-PowerToys.ahk\n#Include, includes\\Minerva-Handlers.ahk\n#Include, includes\\Minerva-Statistics.ahk\n\n; Read settings.ini file\nReadIni(settingsINI)\n\nsetUpHotkey(HotKeys_OpenMinervaMenu, \"showMinervaMenu\", \"%settingsINI% [HotKeys]OpenMinervaMenu\")\nsetUpHotkey(HotKeys_ReloadProgram,   \"ReloadProgram\",   \"%settingsINI% [HotKeys]ReloadProgram\")\nignoreFiles := General_IgnoreFiles\n\n; Check Update\nif General_CheckUpdate\n\tCheckUpdate()\n\n; Change tray icon from default\nMenu, Tray, Icon, %A_ScriptDir%\\icon\\icon.ico\n\n; Get amount of items in folder and prepare the menu\nglobal FileCount := getItemCount()\n\nPrepareMenu(A_ScriptDir \"\\CustomMenuFiles\") \n\n; Run other scripts in the \"IncludeOtherScripts\" folder\nRunOtherScripts(A_ScriptDir \"\\IncludeOtherScripts\")\n\n; Start gdi+\nIf !pToken := Gdip_Startup()\n{\n\tMsgBox, 48, gdiplus error!, Gdiplus failed to start. Please ensure you have gdiplus on your system\n\tExitApp\n}\nOnExit, Exit\n\nWidth  := A_ScreenWidth\nHeight := A_ScreenHeight\nGui, 1: -Caption +E0x80000 +LastFound +AlwaysOnTop +ToolWindow +OwnDialogs \nGui, 1: Show, NA\n\n; Intro taken from GDIP library introduction, see https://github.com/tariqporter/Gdip/blob/master/Gdip.ahk\nhwnd1 := WinExist() \t\t\t\t\t\t; Get a handle to this window we have created in order to update it later\nhbm   := CreateDIBSection(Width, Height) \t; Create a gdi bitmap with width and height of what we are going to draw into it. This is the entire drawing area for everything\nhdc   := CreateCompatibleDC() \t\t\t\t; Get a device context compatible with the screen\nobm   := SelectObject(hdc, hbm) \t\t\t; Select the bitmap into the device context\nG     := Gdip_GraphicsFromHDC(hdc) \t\t\t; Get a pointer to the graphics of the bitmap, for use with drawing functions\nGdip_SetSmoothingMode(G, 4) \t\t\t\t; Set the smoothing mode to antialias = 4 to make shapes appear smother (only used for vector drawing and filling)\n\n; Create a slightly transparent gray brush to draw rectagle with\npBrush \t:= Gdip_BrushCreateSolid(0x80C7C7C7) \nGdip_FillRectangle(G, pBrush, 0, 0, A_ScreenWidth, A_ScreenHeight)\n\n; Create Hourglass image and draw it onto screen\npBitmap := Gdip_CreateBitmapFromFile(\"Icon\\Hourglass.png\")\nGdip_DrawImage(G, pBitmap, A_ScreenWidth/2 - 128, A_ScreenHeight/2 - 128, Width/2, Height/2, 0, 0, Width, Height)\n\n; Graphic has at this point been drawn, but view is not yet updated. Waiting to update view until script is called\nreturn\n\n; CODE AUTO-EXECUTE ENDS HERE\n\n;------------------------------------------------| MENU |------------------------------------------------#\nPrepareMenu(PATH)\n{\n\tglobal\n\t\t\n\t; GUI loading/progress bar\n\tGui, new, +ToolWindow, % ScriptName \" is Loading\"\t\t; Adding title to progressbar\n\tGui, add, Progress, w200 vMyProgress range1-%FileCount%, 0\t; Adding progressbar\n\tGui, show\t  \t\t\t\t\t\t\t\t\t\t\t; Displaying Progressbar\n\n\t; Add Name, Icon and seperating line\n\tMenu, %PATH%, Add, % ScriptName \" v \" Version, About\t\t\t\t\t\t\t\t\t; Name\n\tMenu, %PATH%, Icon,% ScriptName \" v \" Version, %A_ScriptDir%\\Icon\\Minerva-logo.png \t\t; Logo\n\tMenu, %PATH%, Add, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t; seperating \n\t\t\n\t; Add all custom items using algorithm \n\tLoopOverFolder(Path)\n\n\t; Sleep, 200\n\tMenu, %PATH%, Add, \t; seperating line \n\t; PowerToys\n\tif ( initPowerToys(General_PowerToys) ){\n\t\tcallPT_AOT := Func(\"sendPowerToysKey\").Bind(\"AlwaysOnTop\")\n\t\tcallPT_CP := Func(\"sendPowerToysKey\").Bind(\"ColorPicker\")\n\t\tcallPT_FZ := Func(\"sendPowerToysKey\").Bind(\"FancyZones\")\n\t\tcallPT_MT := Func(\"sendPowerToysKey\").Bind(\"Measure Tool\")\n\t\tcallPT_OCR := Func(\"sendPowerToysKey\").Bind(\"TextExtractor\")\n\n\t\tMenu, %PATH%\"\\PowerToys\", Add, Always On Top, % callPT_AOT\n\t\tMenu, %PATH%\"\\PowerToys\", Add, Color Picker, % callPT_CP\n\t\tMenu, %PATH%\"\\PowerToys\", Add, Fancy Zones, % callPT_FZ\n\t\tMenu, %PATH%\"\\PowerToys\", Add, Screen Ruler, % callPT_MT\n\t\tMenu, %PATH%\"\\PowerToys\", Add, Text Extractor, % callPT_OCR\n\n\t\tMenu, %PATH%, Add, PowerToys, :%PATH%\"\\PowerToys\"\n\t\tMenu, %PATH%, Icon, PowerToys, %A_ScriptDir%\\Icon\\PowerToys-logo.png \n\t}\n\n\t; Add Admin Panel\n\tMenu, %PATH%\"\\Admin\", Add, &1 Reload, ReloadProgram\t\t\t\t; Add Reload option\n\tMenu, %PATH%\"\\Admin\", Add, &2 Exit, ExitApp\t\t\t\t\t\t\t; Add Exit option\n\tMenu, %PATH%\"\\Admin\", Add, &3 Go to Parent Folder, GoToRootFolder\t; Open script folder\n\tMenu, %PATH%\"\\Admin\", Add, &4 Add Custom Item, GoToCustomFolder\t\t; Open custom folder\n\tMenu, %PATH%\"\\Admin\", Add, \n\tMenu, %PATH%\"\\Admin\", Add, Check for Update, CheckUpdate\t\t; Open custom folder\n\n\tMenu, %PATH%, Add, &0 Admin, :%PATH%\"\\Admin\"\t\t\t\t\t\t; Adds Admin section\n\n\t; Loadingbar GUI is no longer needed, remove it from memory\n\tGui, Destroy \n}\n\n;---------------------------------------| FOLDER ADDING ALGORITHM |--------------------------------------;\n\n; From the perspective of a folder, items are read top to bottom, but AHK Expects menus to be build from bottom to top.\n; Therefore; recurse into the most bottom element, note all the elements on the way there, and build from bottom up\nLoopOverFolder(PATH)\n{\n\t; Prepare empty arrays for folders and files\n\tFolderArray := []\n\tFileArray   := []\n\t\n\t; Loop over all files and folders in input path, but do NOT recurse\n\tLoop, Files, %PATH%\\* , DF\n\t{\n\t\t; Clear return value from last iteration, and assign it to attribute of current item\n\t\tVALUE := \"\"\n\t\tVALUE := FileExist(A_LoopFilePath)\n\t\t\n\t\t; Current item is a directory\n\t\tif (VALUE = \"D\" or VALUE=\"AD\")\n\t\t{\n\t\t\t;~ MsgBox, % \"Pushing to folders`n\" A_LoopFilePath\n\t\t\tFolderArray.Push(A_LoopFilePath)\n\t\t}\n\t\t; Current item is a file\n\t\telse\n\t\t{\n\t\t\t;~ MsgBox, % \"Pushing to files`n\" A_LoopFilePath\n\t\t\tFileArray.Push(A_LoopFilePath)\n\t\t}\n\t}\n\t\n\t; Arrays are sorted to get alphabetical representation in GUI menu\n\tSort, FolderArray\n\tSort, FileArray\n\t\n\t; First add all folders, so files have a place to stay\n\tfor index, element in FolderArray\n\t{\n\t\t; Recurse into next folder\n\t\tLoopOverFolder(element)\n\t\t\n\t\t; Then add it as item to menu\n\t\tSplitPath, element, name, dir, ext, name_no_ext, drive\n\t\tMenu, %dir%, Add, %name%, :%element%\n\t\tMenu, %dir%, Icon, %name%, C:\\Windows\\syswow64\\SHELL32.dll , 5\n\t\t\n\t\t; Iterate loading GUI progress\n\t\tFoundItem(\"Folder\")\n\t}\n\t\n\t; Then add all files to folders\n\tfor index, element in FileArray\n\t{\n\t\t; Add To Menu\n\t\tSplitPath, element, name, dir, ext, name_no_ext, drive\n\n\t\tvar := InStr(ignoreFiles, name , 0 )\n\t\tif InStr(ignoreFiles, name , 0 ) = 0{\n\t\t\tMenu, %dir%, Add, %name%, MenuEventHandler\n\t\t\t\n\t\t\tswitch ext{\n\t\t\t\tcase \"ahk\":\n\t\t\t\t\tMenu, %dir%, Icon, %name%, %A_ScriptDir%\\Icon\\ahk-logo.jpg\n\n\t\t\t\tcase \"bat\":\n\t\t\t\t\tMenu, %dir%, Icon, %name%, C:\\Windows\\syswow64\\SHELL32.dll , 3\n\t\t\t\t\t\n\t\t\t\tcase \"exe\":\n\t\t\t\t\tMenu, %dir%, Icon, %name%, C:\\Windows\\syswow64\\SHELL32.dll , 3\n\n\t\t\t\tdefault:\n\t\t\t\t\tMenu, %dir%, Icon, %name%, C:\\Windows\\syswow64\\SHELL32.dll , 1\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t; Iterate GUI loading\n\t\tFoundItem(\"File\")\n\t}\n}\n\n\n;-----------------------------------------------| HOTKEYS |----------------------------------------------;\n; Bring up Minerva Menu\n;Ctrl & RShift::\nshowMinervaMenu(){\n\tWinGet, active_proc, ProcessName, A\n\tTry{\n\t\tMenu, %A_ScriptDir%\\CustomMenuFiles, Check, %active_proc%\n\t}\n\tMenu, %A_ScriptDir%\\CustomMenuFiles, show\n\tTry{\n\t\tMenu, %A_ScriptDir%\\CustomMenuFiles, UnCheck, %active_proc%\n\t}\n}\n\n\n;-----------------------------------------------| LABELS |-----------------------------------------------#;\n; Labels are a simple .AHK implementation of Functions (which .AHK also supports), but only labels are supported some places - like in menus.\n; See more here: https://www.autohotkey.com/board/topic/25097-are-there-any-advantages-with-labels-over-functions/\n\n; This is called when user selects an item from a menu in GUI window\nMenuEventHandler:\n{\n\t; Draw the rectangle, the hourglass and update the Window\n\tGdip_FillRectangle(G, pBrush, 0, 0, A_ScreenWidth, A_ScreenHeight)\n\tGdip_DrawImage(G, pBitmap, A_ScreenWidth/2 - 128, A_ScreenHeight/2 - 128, Width/2, Height/2, 0, 0, Width, Height)\n\tUpdateLayeredWindow(hwnd1, hdc, 0, 0, Width, Height)  ;This is what actually changes the display\n\t\n\t; Get Extension of item to evaluate what handler to use\n\tWordArray := StrSplit(A_ThisMenuItem, \".\")\n\tFileExtension := % WordArray[WordArray.MaxIndex()]\n\t\n\t; Get full path from Menu Item pass to handler\n\tFileItem := SubStr(A_ThisMenuItem, 2, StrLen(A_ThisMenuItem))\n\tFilePath := % A_ThisMenu \"\\\" A_ThisMenuItem\t\n\t\n\t; Run item with appropriate handler\n\tSwitch FileExtension\n\t{\n\t\tcase \"rtf\" : Handler_COM(FilePath)\n\t\tcase \"docx\": Handler_COM(FilePath)\n\t\tcase \"bat\" : Handler_LaunchProgram(FilePath)\n\t\tcase \"txt\" : Handler_txt(FilePath)\n\t\tcase \"lnk\" : Handler_LaunchProgram(FilePath)\n\t\tcase \"exe\" : Handler_LaunchProgram(FilePath)\n\t\tDefault: Handler_Default(FilePath)\n\t}\n\t\n\t; Clear the graphics and update thw window\n\tGdip_GraphicsClear(G)  \t\t\t\t\t\t\t\t  ;This sets the entire area of the graphics to 'transparent'\n\tUpdateLayeredWindow(hwnd1, hdc, 0, 0, Width, Height)  ;This is what actually changes the display\n\t\t\n\treturn\n}\n\n; Is run when the program exits. This will take care of now unused graphics elements\nExit:\n{\n\tGdip_DeleteBrush(pBrush) \t; Delete the brush as it is no longer needed and wastes memory\n\tSelectObject(hdc, obm) \t\t; Select the object back into the hdc\n\tDeleteObject(hbm) \t\t\t; Now the bitmap may be deleted\n\tDeleteDC(hdc) \t\t\t\t; Also the device context related to the bitmap may be deleted\n\tGdip_DeleteGraphics(G) \t\t; The graphics may now be deleted\n\t\n\t; gdi+ may now be shutdown on exiting the program\n\tGdip_Shutdown(pToken)\n\tExitApp\n\tReturn\n}\n\nDrawGraphics:\n{\n\t; Draw the rectangle and hourglass to the graphic\n\tGdip_FillRectangle(G, pBrush, 0, 0, A_ScreenWidth, A_ScreenHeight)\n\tGdip_DrawImage(G, pBitmap, A_ScreenWidth/2 - 128, A_ScreenHeight/2 - 128, Width/2, Height/2, 0, 0, Width, Height)\n\t\n\t; Update the display to show the graphcis\n\tUpdateLayeredWindow(hwnd1, hdc, 0, 0, Width, Height)  \n\treturn\n}\n\nDeleteGraphics:\n{\n\t; This sets the entire area of the graphics to 'transparent'\n\tGdip_GraphicsClear(G)  \n\t\n\t; Update the display to ide the graphics\n\tUpdateLayeredWindow(hwnd1, hdc, 0, 0, Width, Height)  \n\treturn\n}\n\n\n; Recursively \ngetItemCount()\n{\n\tlocal itemCount := 0\n\n\tLoop, Files, %A_ScriptDir%\\*, FR\n\t{\n\t\titemCount += 1\n\t} \n\n\treturn itemCount\n}\n\n; Iterate step of the GUI process bar by one\nFoundItem(WhatWasFound)\n{\n\tglobal\n\tGuiControl,, MyProgress, +1\n\n\t; Comment in for Debug\n\t;~ Sleep, 50\n\t;~ MsgBox, % \"Found \" WhatWasFound \": \" A_LoopFileName \"`n`nWith Path:`n\" A_LoopFileFullPath \"`n`nIn Folder`n\" A_LoopFileDir\n}\n\n; Restarts the program. This is handy for updates in the code\nReloadProgram()\n{\n    MsgBox, 64, About to restart %ScriptName%, Restarting %ScriptName%\n    Reload\n}\n\n; Exits the program\nExitApp()\n{\n    MsgBox, 48, About to exit %ScriptName%, %ScriptName% will TERMINATE when you click OK\n    IfMsgBox OK\n    ExitApp\n}\n\n; Opens explorer window in root folder of script \nGoToRootFolder()\n{\n    run, explore %A_ScriptDir%\n}\n\n; Opens explorer window in folder where custom folders and menu item goes\nGoToCustomFolder()\n{\n\trun, explore %A_ScriptDir%\\CustomMenuFiles\n}\n\n; Launch Github repo\nAbout()\n{\n\trun, % GitHub\n}\n\nCheckUpdate(){\n\tUrlDownloadToFile, %GitHub%/releases, %TEMP%\\releases.html\n\tFileRead, releasehtml, %TEMP%\\releases.html\n\n\tRegExMatch(releasehtml, \"/bforbenny/Minerva/releases/tag/v.+?.*>Minerva v\\K[\\d.]+\", GHversion)\n\n\tif GHVersion > %Version%\n\t{\n\t   MsgBox, Update v %GHVersion% available (installed v %Version%).\n\t   ifMsgBox OK\n\t   {\n\t\t\tAbout()\n\t   }\n\t}\n}",
			"file": "/D/(github)/GlobalCoder/GlobalCoder/collection/1_myminerva/Minerva-updated/Minerva-main/Minerva4.ahk",
			"file_size": 13126,
			"file_write_time": 133173743416760970,
			"settings":
			{
				"buffer_size": 12717,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					6,
					1,
					"insert",
					{
						"characters": "gf"
					},
					"AgAAAL0GAAAAAAAAvgYAAAAAAAAAAAAAvgYAAAAAAAC/BgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL0GAAAAAAAAvQYAAAAAAAAAAAAAAADwvw"
				],
				[
					9,
					1,
					"insert",
					{
						"characters": "fff"
					},
					"AwAAAL8GAAAAAAAAwAYAAAAAAAAAAAAAwAYAAAAAAADBBgAAAAAAAAAAAADBBgAAAAAAAMIGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8GAAAAAAAAvwYAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": "ffff"
					},
					"BAAAAMIGAAAAAAAAwwYAAAAAAAAAAAAAwwYAAAAAAADEBgAAAAAAAAAAAADEBgAAAAAAAMUGAAAAAAAAAAAAAMUGAAAAAAAAxgYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMIGAAAAAAAAwgYAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					9,
					"left_delete",
					null,
					"CQAAAMUGAAAAAAAAxQYAAAAAAAABAAAAZsQGAAAAAAAAxAYAAAAAAAABAAAAZsMGAAAAAAAAwwYAAAAAAAABAAAAZsIGAAAAAAAAwgYAAAAAAAABAAAAZsEGAAAAAAAAwQYAAAAAAAABAAAAZsAGAAAAAAAAwAYAAAAAAAABAAAAZr8GAAAAAAAAvwYAAAAAAAABAAAAZr4GAAAAAAAAvgYAAAAAAAABAAAAZr0GAAAAAAAAvQYAAAAAAAABAAAAZw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYGAAAAAAAAxgYAAAAAAAAAAAAAAADwvw"
				],
				[
					4,
					1,
					"left_delete",
					null,
					"AQAAAJEdAAAAAAAAkR0AAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAkh0AAAAAAACSHQAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					""
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Default"
				],
				[
					"Packages/AutoHotkey/AutoHotkey.sublime-build",
					"Run"
				],
				[
					"Packages/AutoHotkey2/Autohotkey2.sublime-build",
					""
				]
			],
			[
				"Packages/AutoHotkey/AutoHotkey.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					""
				],
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					"Default"
				],
				[
					"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/ahkpkgcustom/AutoHotkey.sublime-build",
				"Default"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"term",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"auto",
				"AutoHotkey v2 - runner"
			],
			[
				"termin",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"",
				"Build With: AutoHotkey"
			],
			[
				"tern",
				"Terminus: Close All"
			],
			[
				"terminus",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"refres",
				"Preferences: LSP Settings"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"syntaxfold ke",
				"Preferences: SyntaxFold Keybindings - Default"
			],
			[
				"syntax",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"fold ",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"ke",
				"Preferences: Key Bindings"
			],
			[
				"syntaxa",
				"SyntaxFold: Fold All"
			],
			[
				"settings",
				"Preferences: SyntaxFold Settings - User"
			],
			[
				"preferences pack",
				"Preferences: SyntaxFold Keybindings - Default"
			],
			[
				"package",
				"Package Control: List Unmanaged Packages"
			],
			[
				"resouu",
				"PackageResourceViewer: Open Resource"
			],
			[
				"package in",
				"Package Control: Install Package"
			],
			[
				"history",
				"History: Revert Modification"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Preferences: SideBarTools Settings"
			],
			[
				"view",
				"View: Toggle Side Bar"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"viewer",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"white sp",
				"Trim Trailing White Space"
			],
			[
				"du",
				"File: Duplicate"
			],
			[
				"ahk",
				"AutoHotkey - Run"
			],
			[
				"dupl",
				"File: Duplicate"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"com",
				"AutoHotkey - Compile"
			],
			[
				"search",
				"File: Search Files"
			],
			[
				"find ",
				"Preferences: Search in Project Settings – Default"
			],
			[
				"conda",
				"Conda: List Packages"
			],
			[
				"high",
				"HighlightWords: Highlight Words"
			],
			[
				"highl",
				"SublimeLinter: Toggle Highlights"
			],
			[
				"goto",
				"Goto Documentation"
			],
			[
				"rename",
				"Rename File"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 164.0,
		"history":
		[
			"sublime.log_commands(True)",
			"gh repo clone hi5/Rufaydium-Webdriver"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/(github)/GlobalCoder/gc/GlobalCoder"
	],
	"file_history":
	[
		"/D/(github)/GlobalCoder/gc/GlobalCoder/menu-tray-commands.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/menu.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/capslock-multi.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/GlobalCoder.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/00 - Dev/AHK-edit-context-menu.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/AUTOSTART.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/parseahk-functions.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/collection/1_myminerva/GlobalCoder-minerva.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/read-ini.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/GC-Workspace.sublime-project",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/dropdown-choice-gui-test.ahk",
		"/C/Users/dkzea/OneDrive/Desktop/rclickmenu.ahk",
		"/D/lib/((start)).ahk",
		"/C/Users/dkzea/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup/AUTOSTART.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/.gitignore",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/Recycle Bin/S-1-5-21-3956581196-2760772990-1477779809-1002/move/SQLiteDB_Class.ahk",
		"/D/lib/V2/examples/Webview2-example.ahk2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/path-menus-handlers-1-4examples.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/guiscriptrun.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/parseahk-functions-results.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/!.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/parseahk.ahk",
		"/D/lib/V2/examples/Webview2-example 2.ahk2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/lemmon-runner.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/settings/settings.ini",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/aNEWGlobalCoder.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/6 - acc-Examples/Example3_CaretPosition.ahk",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/collection/0_V2/README.md",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/3 - tools/Example3 - Resizable Tabs.ahk",
		"/C/Users/dkzea/AppData/Local/Packages/Microsoft.WindowsTerminal_8wekyb3d8bbwe/LocalState/settings.json",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/start.ahk",
		"/D/lib/V2/examples/Webview2-example 4.ahk2",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/[README].md",
		"/D/(github)/GlobalCoder/gc/GlobalCoder/README.md",
		"/D/lib/V2/examples/Webview2-example 3.ahk2",
		"/D/(github)/GlobalCoder/GlobalCoder/collection/1_myminerva/Minerva-updated/Minerva-main/README.md",
		"/C/Users/dkzea/OneDrive/Desktop/Gdip-master/Gdip-master/Gdip.Tutorial.11-Using.BRAs.to.perform.animations.ahk",
		"/D/(github)/GlobalCoder/GlobalCoder/collection/1_myminerva/Minerva-updated/Minerva-main/settings.ini",
		"/D/(github)/GlobalCoder/GlobalCoder/collection/1_myminerva/gui.ahk",
		"/Z/code/AHK/New folder (2)/readself.ahk",
		"/C/Users/dkzea/OneDrive/Desktop/Gdip-master/Gdip-master/BRA.ahk",
		"/C/Users/dkzea/OneDrive/Desktop/Gdip-master/Gdip-master/Gdip.Tutorial.12-Pixelate.a.bitmap.using.machine.code.ahk",
		"/D/(github)/GlobalCoder/GlobalCoder/collection/1_myminerva/Minerva-updated/Minerva-main/Minerva4.ahk",
		"/D/(github)/GlobalCoder/GlobalCoder/GlobalCoder.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/Recycle Bin/S-1-5-21-3956581196-2760772990-1477779809-1002/$IHDCG4S.ah2",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/Recycle Bin/S-1-5-21-3956581196-2760772990-1477779809-1002/$IB1QYSI.ahk",
		"/C/Users/dkzea/AppData/Roaming/Sublime Text/Packages/User/SideBarEnhancements/Open With/Side Bar.sublime-menu",
		"/D/lib/extracttext.ahk",
		"/D/(github)/GlobalCoder/GlobalCoder/collection/!xd2tx220_x64/com.ahk",
		"/D/(github)/GlobalCoder/GlobalCoder/collection/!xd2tx220_x64/com2.ahk",
		"/D/$RECYCLE.BIN/S-1-5-21-3956581196-2760772990-1477779809-1002/SQLiteDB_sample.ahk",
		"/D/lib/.msOffice/Excel/Copy_rows_to_new_workbooks.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/3 - Tools & Docs/GlobalCoder - Copy.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/GlobalCoder - Copy.ahk",
		"/D/github/GlobalCoder/GlobalCoder/collection/!!recov/GlobalCoder - Copy.ahk",
		"/P/recovD/Data Recovery 2023-01-03 at 05.43.06/D/github/GlobalCoder/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/ffmpeg-desktop-rec.ahk",
		"/J/ahks/a/(ext)/fb-code.ahk",
		"/J/ahks/a/(ext)/inputbox-FB.ahk",
		"/J/ahks/a/(ext)/gui_info-saved.ahk",
		"/J/ahks/a/(ext)/class_list.ahk",
		"/J/ahks/a/(ext)/class_counter.ahk",
		"/C/Users/dkzea/OneDrive/Desktop/(Timer_counter).ahk",
		"/J/ahks/a/(ext)/class_Collection.ahk",
		"/J/ahks/a/(ext)/obj_from_list_strings.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/CustomMenuFiles/3 - Tools & Docs/GlobalCoder.ahk",
		"/D/github/GlobalCoder/GlobalCoder/GlobalCoder.ahk",
		"/D/$RECYCLE.BIN/S-1-5-21-3956581196-2760772990-1477779809-1002/$I4HV29I.ahk",
		"/D/$RECYCLE.BIN/S-1-5-21-3956581196-2760772990-1477779809-1002/$IPXH999.ahk",
		"/D/$RECYCLE.BIN/S-1-5-21-3956581196-2760772990-1477779809-1002/$INHSSIM.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/GlobalCoder.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/Win32-API-Const_AHK_V2/inc/gui_extra_dirs.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/vKeyboard-master/lib/Hotkey/examples/example.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/vKeyboard-master/lib/Hotkey/class_Hotkey.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/VMR/examples/example.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/VMR/examples/hotkey_example.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/VMR/examples/ui_example.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/Websocket-Client/libs/CConsole.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/collection/MISC/GlobalCoder-Main/AHK/AHK-libs-and-classes-collection-master/AHK-libs-and-classes-collection-master/more libs/Win32-API-Const_AHK_V2/inc/header_parser.ahk",
		"/D/github/GlobalCoder/gc/GlobalCoder/globalcoder.ahk.ini",
		"/D/github/GlobalCoder/GlobalCoder/main/README.md",
		"/D/github/GlobalCoder/GlobalCoder/globalcoder.ahk.ini",
		"/D/github/GlobalCoder/GlobalCoder/.gitignore",
		"/D/github/GlobalCoder/GlobalCoder/!.ahk",
		"/D/github/GlobalCoder/GlobalCoder/CustomMenuFiles/9 - Showcase & Examples/pixelsearch_DLL.ahk",
		"/d/lib/btt.ahk",
		"/D/lib/Vis2.ahk",
		"/C/Users/dkzea/OneDrive/Documents/AutoHotkey/Lib/OCR.ahk",
		"/p/app/app/((start)-class&fn.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/inc/Project.ahk",
		"/D/github/GlobalCoder/GlobalCoder/.git/config",
		"/D/github/GlobalCoder/GlobalCoder/singles/single_files/1_ToDoList.ahk",
		"/D/github/GlobalCoder/GlobalCoder/.git/ORIG_HEAD",
		"/D/github/GlobalCoder/GlobalCoder/.git/HEAD",
		"/D/github/GlobalCoder/GlobalCoder/.git/hooks/push-to-checkout.sample",
		"/D/github/GlobalCoder/GlobalCoder/.git/refs/heads/newbranch",
		"/D/github/GlobalCoder/GlobalCoder/.git/refs/remotes/origin/HEAD",
		"/D/github/GlobalCoder/GlobalCoder/singles/globalcoder-captain.ahk",
		"/D/github/GlobalCoder/GlobalCoder/GlobalCoder2.ahk",
		"/P/.desktop/_Ahk_/ahk-zips/example.ahk",
		"/P/App/App/json/json/tests/test-all.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/single_files/windowmenu.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/mainwindow.ahk",
		"/D/lib/more libs/Splash-Gui/splashConsole.ahk",
		"/D/lib/btt.ahk",
		"/P/App/App/((start)-ifs.ahk",
		"/P/App/app/btt.ahk",
		"/D/lib/OCR.ahk",
		"/C/Users/dkzea/OneDrive/Documents/AutoHotkey/Lib/1_globalcoder_duplicateline.ahk",
		"/C/Program Files/AutoHotkey/Lib/Vis2.ahk",
		"/C/Program Files/AutoHotkey/Lib/Gdip.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/single_files/SampleSaveFile.ahk",
		"/D/github/GlobalCoder/GlobalCoder/node_modules/stringc.ahk/export.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/test-guimenu.ahk",
		"/C/Users/dkzea/OneDrive/Desktop/(start)/logs/q-google.txt",
		"/P/App/App/!.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/AHK-Project-Manager.ahk",
		"/d/github/globalcoder/globalcoder/singles/includes.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/AHK-Project-Manager.config",
		"/D/github/GlobalCoder/GlobalCoder/singles/single_files/windowsmenu.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/lemon_runner.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/main window.ahk",
		"/D/github/GlobalCoder/GlobalCoder/CustomMenuFiles/6 - Examples/ahk/img/image_to_afile.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/Captain.ini",
		"/D/github/GlobalCoder/GlobalCoder/singles/1_snippetholder.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/windowsmenu.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/SampleSaveFile.ahk",
		"/D/github/GlobalCoder/GlobalCoder/singles/1_ToDoList.ahk",
		"/D/github/GlobalCoder/GlobalCoder/includes.ahk"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"removespace",
			"preparemenu",
			"LoopOverFolder",
			", ",
			"Loop"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "GlobalCoder.txt",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1442,
						"regions":
						{
						},
						"selection":
						[
							[
								1240,
								1240
							]
						],
						"settings":
						{
							"bs_sintax": "plain text",
							"buffer_scroll_name": "a7eeb072",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/GlobalCoder.txt",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 3,
							"tabs_extra_last_activated": 1674062696.52,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_moving":
							[
								3,
								0
							],
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "AUTOSTART.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5232,
						"regions":
						{
						},
						"selection":
						[
							[
								4699,
								4699
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "a04b7aea",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/AUTOSTART.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Autohotkey2.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1674062428.1,
							"tabs_extra_last_activated_sheet_index": 0,
							"tabs_extra_moving":
							[
								3,
								0
							],
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2196.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "menu-right-click.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1783,
						"regions":
						{
						},
						"selection":
						[
							[
								674,
								674
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "45deb867",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/menu-right-click.ahk",
							"syntax": "Packages/User/Autohotkey2.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1674060192.29,
							"tabs_extra_last_activated_sheet_index": 1,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "menu-right-click2.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1998,
						"regions":
						{
						},
						"selection":
						[
							[
								461,
								461
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "14e5953b",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/menu-right-click2.ahk",
							"syntax": "Packages/User/Autohotkey2.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1674060437.31,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "menu-right-click3.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2818,
						"regions":
						{
						},
						"selection":
						[
							[
								1698,
								1698
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "5df3ae7a",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/menu-right-click3.ahk",
							"syntax": "Packages/User/Autohotkey2.sublime-syntax",
							"tab_size": 2,
							"tabs_extra_last_activated": 1674062414.57,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 507.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "lemmon-runner.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2317,
						"regions":
						{
						},
						"selection":
						[
							[
								922,
								922
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "b60d4de7",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/lemmon-runner.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Autohotkey2.sublime-syntax",
							"tab_size": 3,
							"tabs_extra_last_activated": 1674059947.05,
							"tabs_extra_last_activated_sheet_index": 0,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 450.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "path-menus-2.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2485,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "8c30a4f4",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/path-menus-2.ahk",
							"syntax": "Packages/User/Autohotkey2.sublime-syntax",
							"tab_size": 3,
							"tabs_extra_last_activated": 1674058404.87,
							"tabs_extra_last_activated_sheet_index": 5,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 702.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "path-menus-handlers-1-4examples.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3255,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "e250f843",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/path-menus-handlers-1-4examples.ahk",
							"spell_check": false,
							"syntax": "Packages/User/Autohotkey2.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1674058405.52,
							"tabs_extra_last_activated_sheet_index": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "path-menus-handlers.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6070,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "c3937ff4",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/path-menus-handlers.ahk",
							"syntax": "Packages/User/Autohotkey2.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1674058406.94,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 756.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "path-menus.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1896,
						"regions":
						{
						},
						"selection":
						[
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "e12daba7",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/gc/GlobalCoder/path-menus.ahk",
							"syntax": "Packages/User/Autohotkey2.sublime-syntax",
							"tab_size": 4,
							"tabs_extra_last_activated": 1674059939.95,
							"tabs_extra_last_activated_sheet_index": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/C/Users/dkzea/OneDrive/Desktop/rclickmenu2.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 737,
						"regions":
						{
						},
						"selection":
						[
							[
								678,
								678
							]
						],
						"settings":
						{
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "07177e2d",
							"lsp_uri": "file:///C:/Users/dkzea/OneDrive/Desktop/rclickmenu2.ahk",
							"syntax": "Packages/User/Autohotkey2.sublime-syntax",
							"tab_size": 3,
							"tabs_extra_last_activated": 1674057411.33,
							"tabs_extra_last_activated_sheet_index": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/D/(github)/GlobalCoder/GlobalCoder/collection/1_myminerva/Minerva-updated/Minerva-main/Minerva4.ahk",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12717,
						"regions":
						{
						},
						"selection":
						[
							[
								7569,
								7569
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": "<",
									"selector": "text.html, text.xml"
								},
								{
									"rhs_empty": true,
									"selector": "punctuation.accessor"
								}
							],
							"bs_sintax": "autohotkey2",
							"buffer_scroll_name": "234eddcb",
							"lsp_uri": "file:///D:/%28github%29/GlobalCoder/GlobalCoder/collection/1_myminerva/Minerva-updated/Minerva-main/Minerva4.ahk",
							"spell_check": false,
							"syntax": "Packages/AutoHotkey/AutoHotkey.tmLanguage",
							"tab_size": 4,
							"tabs_extra_last_activated": 1674056322.72,
							"tabs_extra_last_activated_sheet_index": 3,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 450.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 54.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 108.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/zeanahsv2.sublime-build",
	"project": "GC-Workspace.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"P:\\App\\App\\ws\\tools & WS.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 300.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 317.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
