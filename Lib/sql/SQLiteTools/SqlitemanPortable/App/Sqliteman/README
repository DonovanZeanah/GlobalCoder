Sqliteman is simple but powerfull Sqlite3 GUI database manager.

see: http://sqliteman.com

Full documentation is included in this package and it's available
on the website too.


REQUIREMENTS

For using binaries:
 - allow your OS distributor to solve requirements automatically


BUILDING FROM SOURCES

Qmake project is used only for translations.


MS Windows:

 - Full Qt4.2 (4.3 suggested) or later properly installed on path
 - building procedure (in the Sqliteman root directory):
1) cmake
2) make

see available cmake options below.


UN*X:

Requirements:
 - cmake (http://cmake.org)
 - Qt toolkit, at least version 4.2 or later required (http://trolltech.com)
   with sqlite3 module. 4.3 is strongly suggested.
 - standard building environment (C++ compiler etc.)

 - Sqliteman uses cmake building procedure:
1) cmake .
2) make
3) make install


Available options for cmake (cmake options .):
-DWANT_DEBUG=1
    build application with the debug symbols
-DWANT_RESOURCES=1
    build application with all icons, docs and translation files compiled in
    as one binary file. It's useful e.g. for "portable" distribution or fo
    Mac dmg files.
    This option is set automatically on Windows.
-DWANT_INTERNAL_QSCINTILLA=1
    Set this one if you don't have Qscintilla2 libraries and header files
    installed. It will use included source codes.


Hints for cmake:

- install into specified directory:
cmake -DCMAKE_INSTALL_PREFIX:PATH=/foo/bar .

- cmake cannot find my Qt (e.g. Arch's /opt/qt):
export PATH=/opt/qt/bin:$path
cmake .
...etc.
